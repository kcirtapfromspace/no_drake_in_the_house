apiVersion: v1
kind: Pod
metadata:
  name: pod-security-standards
  namespace: kiro-production
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
spec:
  # This is a template pod to demonstrate security standards
  # All actual pods should follow these security constraints
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000
    seccompProfile:
      type: RuntimeDefault
  containers:
  - name: example
    image: alpine:3.18
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      capabilities:
        drop:
        - ALL
      seccompProfile:
        type: RuntimeDefault
    resources:
      requests:
        memory: "64Mi"
        cpu: "50m"
      limits:
        memory: "128Mi"
        cpu: "100m"
    volumeMounts:
    - name: tmp
      mountPath: /tmp
  volumes:
  - name: tmp
    emptyDir: {}

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kiro-api-pdb
  namespace: kiro-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: kiro-api

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kiro-worker-pdb
  namespace: kiro-production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: kiro-worker

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prometheus-pdb
  namespace: kiro-production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: prometheus

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: grafana-pdb
  namespace: kiro-production
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: grafana