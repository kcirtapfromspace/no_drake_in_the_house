{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/lib/utils/config.ts","../../src/lib/utils/api.ts","../../src/lib/stores/auth.ts","../../src/lib/utils/simple-router.ts","../../src/lib/components/LoginForm.svelte","../../src/lib/components/RegisterForm.svelte","../../src/lib/components/TwoFactorSetup.svelte","../../src/lib/components/TwoFactorVerification.svelte","../../src/lib/components/Login.svelte","../../src/lib/stores/connections.ts","../../src/lib/stores/dnp.ts","../../src/lib/components/Navigation.svelte","../../src/lib/components/ServiceConnections.svelte","../../src/lib/components/ArtistSearch.svelte","../../src/lib/components/DnpEntry.svelte","../../src/lib/components/BulkActions.svelte","../../src/lib/components/DnpManager.svelte","../../src/lib/stores/enforcement.ts","../../src/lib/components/EnforcementOptions.svelte","../../src/lib/components/EnforcementPreview.svelte","../../src/lib/components/EnforcementExecution.svelte","../../src/lib/components/ActionHistory.svelte","../../src/lib/components/EnforcementPlanning.svelte","../../src/lib/stores/community.ts","../../src/lib/components/CommunityListCard.svelte","../../src/lib/components/CommunityListDetail.svelte","../../src/lib/components/CreateCommunityList.svelte","../../src/lib/components/MySubscriptions.svelte","../../src/lib/components/CommunityLists.svelte","../../src/lib/components/UserProfile.svelte","../../src/lib/components/SimpleTest.svelte","../../src/lib/components/Dashboard.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","// Configuration utilities for environment-based settings\nexport const config = {\n    // API Configuration\n    apiUrl: import.meta.env.VITE_API_URL || 'http://localhost:3000',\n    apiVersion: import.meta.env.VITE_API_VERSION || 'v1',\n    // App Configuration\n    appName: import.meta.env.VITE_APP_NAME || 'No Drake in the House',\n    environment: import.meta.env.VITE_ENVIRONMENT || 'development',\n    // Feature Flags\n    features: {\n        twoFactorAuth: import.meta.env.VITE_ENABLE_2FA === 'true',\n        communityLists: import.meta.env.VITE_ENABLE_COMMUNITY_LISTS === 'true',\n        analytics: import.meta.env.VITE_ENABLE_ANALYTICS === 'true',\n    },\n    // Development Configuration\n    development: {\n        hotReload: import.meta.env.VITE_HOT_RELOAD === 'true',\n        debugMode: import.meta.env.VITE_DEBUG_MODE === 'true',\n    },\n    // External Services\n    external: {\n        spotifyClientId: import.meta.env.VITE_SPOTIFY_CLIENT_ID,\n        appleMusicToken: import.meta.env.VITE_APPLE_MUSIC_DEVELOPER_TOKEN,\n    },\n    // UI Configuration\n    ui: {\n        defaultTheme: import.meta.env.VITE_DEFAULT_THEME || 'light',\n    },\n    // Performance Configuration\n    performance: {\n        enableServiceWorker: import.meta.env.VITE_ENABLE_SERVICE_WORKER === 'true',\n        cacheDuration: parseInt(import.meta.env.VITE_CACHE_DURATION || '300000'),\n    },\n    // Helper methods\n    isDevelopment: () => config.environment === 'development',\n    isProduction: () => config.environment === 'production',\n    getApiEndpoint: (path) => {\n        const normalizedPath = path.startsWith('/') ? path : `/${path}`;\n        const apiPath = normalizedPath.startsWith('/api/') ? normalizedPath : `/api/${config.apiVersion}${normalizedPath}`;\n        return `${config.apiUrl}${apiPath}`;\n    }\n};\nexport default config;\n","import { config } from './config';\nexport class ApiError extends Error {\n    constructor(status, message) {\n        super(message);\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: status\n        });\n        this.name = 'ApiError';\n    }\n}\nexport async function apiCall(endpoint, options = {}) {\n    const token = localStorage.getItem('auth_token');\n    const requestConfig = {\n        ...options,\n        headers: {\n            'Content-Type': 'application/json',\n            ...(token && { Authorization: `Bearer ${token}` }),\n            ...options.headers,\n        },\n    };\n    try {\n        const url = config.getApiEndpoint(endpoint);\n        const response = await fetch(url, requestConfig);\n        const result = await response.json();\n        if (!response.ok) {\n            throw new ApiError(response.status, result.message || 'Request failed');\n        }\n        return result;\n    }\n    catch (error) {\n        if (error instanceof ApiError) {\n            throw error;\n        }\n        throw new ApiError(0, 'Network error occurred');\n    }\n}\nexport const api = {\n    get: (endpoint) => apiCall(endpoint),\n    post: (endpoint, data) => apiCall(endpoint, { method: 'POST', body: JSON.stringify(data) }),\n    put: (endpoint, data) => apiCall(endpoint, { method: 'PUT', body: JSON.stringify(data) }),\n    delete: (endpoint, data) => apiCall(endpoint, {\n        method: 'DELETE',\n        body: data ? JSON.stringify(data) : undefined\n    }),\n};\n","import { writable, derived } from 'svelte/store';\nimport { api } from '../utils/api';\nconst initialState = {\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    refreshToken: localStorage.getItem('refresh_token'),\n    isAuthenticated: false,\n    isLoading: false,\n    justRegistered: false,\n};\nexport const authStore = writable(initialState);\nexport const isAuthenticated = derived(authStore, ($auth) => $auth.isAuthenticated && $auth.token !== null);\nexport const currentUser = derived(authStore, ($auth) => $auth.user);\nexport const justRegistered = derived(authStore, ($auth) => $auth.justRegistered);\n// Auth actions\nexport const authActions = {\n    login: async (email, password, totpCode) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const result = await api.post('/auth/login', {\n                email,\n                password,\n                totp_code: totpCode\n            });\n            if (result.success) {\n                const { access_token, refresh_token } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', refresh_token);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: refresh_token,\n                    isAuthenticated: true,\n                    isLoading: false,\n                    justRegistered: false, // Reset on login\n                }));\n                // Fetch user profile\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                authStore.update(state => ({ ...state, isLoading: false }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            return { success: false, message: error.message || 'Network error occurred' };\n        }\n    },\n    register: async (email, password, confirmPassword, termsAccepted) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const result = await api.post('/auth/register', {\n                email,\n                password,\n                confirm_password: confirmPassword,\n                terms_accepted: termsAccepted\n            });\n            if (result.success) {\n                // Check if auto-login was successful (tokens returned)\n                if (result.data?.access_token && result.data?.refresh_token) {\n                    const { access_token, refresh_token } = result.data;\n                    localStorage.setItem('auth_token', access_token);\n                    localStorage.setItem('refresh_token', refresh_token);\n                    authStore.update(state => ({\n                        ...state,\n                        token: access_token,\n                        refreshToken: refresh_token,\n                        isAuthenticated: true,\n                        isLoading: false,\n                        justRegistered: true, // Mark as just registered for better UX\n                    }));\n                    // Fetch user profile\n                    await authActions.fetchProfile();\n                    return { success: true, autoLogin: true };\n                }\n                else {\n                    authStore.update(state => ({ ...state, isLoading: false }));\n                    return { success: true, autoLogin: false, message: result.message };\n                }\n            }\n            else {\n                authStore.update(state => ({ ...state, isLoading: false }));\n                return {\n                    success: false,\n                    message: result.message,\n                    errors: result.data?.errors || null\n                };\n            }\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            // Handle structured error responses\n            if (error.status === 400 && error.message) {\n                try {\n                    const errorData = JSON.parse(error.message);\n                    if (errorData.errors) {\n                        return {\n                            success: false,\n                            message: errorData.message || 'Registration validation failed',\n                            errors: errorData.errors\n                        };\n                    }\n                }\n                catch (parseError) {\n                    // Fall through to generic error handling\n                }\n            }\n            return { success: false, message: error.message || 'Network error occurred' };\n        }\n    },\n    fetchProfile: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (!token)\n            return;\n        try {\n            const result = await api.get('/users/profile');\n            if (result.success) {\n                authStore.update(state => ({\n                    ...state,\n                    user: result.data,\n                    isAuthenticated: true,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch profile:', error);\n        }\n    },\n    logout: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            try {\n                await api.post('/auth/logout');\n            }\n            catch (error) {\n                console.error('Logout request failed:', error);\n            }\n        }\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('refresh_token');\n        authStore.set({\n            user: null,\n            token: null,\n            refreshToken: null,\n            isAuthenticated: false,\n            isLoading: false,\n            justRegistered: false,\n        });\n    },\n    refreshToken: async () => {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (!refreshToken)\n            return false;\n        try {\n            const result = await api.post('/auth/refresh', { refresh_token: refreshToken });\n            if (result.success) {\n                const { access_token, refresh_token: newRefreshToken } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', newRefreshToken);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: newRefreshToken,\n                    isAuthenticated: true,\n                }));\n                return true;\n            }\n        }\n        catch (error) {\n            console.error('Token refresh failed:', error);\n        }\n        return false;\n    },\n    // 2FA Management\n    setup2FA: async () => {\n        try {\n            const result = await api.post('/auth/2fa/setup');\n            if (result.success) {\n                return {\n                    success: true,\n                    qrCodeUrl: result.data.qr_code_url,\n                    secret: result.data.secret\n                };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to setup 2FA' };\n        }\n    },\n    verify2FA: async (code) => {\n        try {\n            const result = await api.post('/auth/2fa/verify', { totp_code: code });\n            if (result.success) {\n                // Update user profile to reflect 2FA is now enabled\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to verify 2FA code' };\n        }\n    },\n    disable2FA: async (code) => {\n        try {\n            const result = await api.post('/auth/2fa/disable', { totp_code: code });\n            if (result.success) {\n                // Update user profile to reflect 2FA is now disabled\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to disable 2FA' };\n        }\n    },\n    // Clear the just registered flag (useful for onboarding flows)\n    clearJustRegistered: () => {\n        authStore.update(state => ({\n            ...state,\n            justRegistered: false,\n        }));\n    },\n};\n// Initialize auth state on app load\nif (typeof window !== 'undefined') {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n        authStore.update(state => ({\n            ...state,\n            token,\n            isAuthenticated: true,\n            justRegistered: false, // Reset on app load\n        }));\n        authActions.fetchProfile();\n    }\n}\n","import { writable } from 'svelte/store';\n// Simple, reliable router store\nexport const currentRoute = writable('overview');\n// Simple navigation function\nexport function navigateTo(route) {\n    console.log('Simple router: Navigating to:', route);\n    // Update the store immediately\n    currentRoute.set(route);\n    // Update URL\n    if (typeof window !== 'undefined') {\n        const paths = {\n            overview: '/',\n            connections: '/connections',\n            dnp: '/dnp',\n            enforcement: '/enforcement',\n            community: '/community',\n            profile: '/profile'\n        };\n        const path = paths[route] || '/';\n        window.history.pushState({ route }, route, path);\n        document.title = `${route} - No Drake in the House`;\n    }\n}\n// Initialize router\nexport function initRouter() {\n    if (typeof window !== 'undefined') {\n        // Handle browser back/forward\n        window.addEventListener('popstate', (event) => {\n            const path = window.location.pathname;\n            let route = 'overview';\n            if (path === '/connections')\n                route = 'connections';\n            else if (path === '/dnp')\n                route = 'dnp';\n            else if (path === '/enforcement')\n                route = 'enforcement';\n            else if (path === '/community')\n                route = 'community';\n            else if (path === '/profile')\n                route = 'profile';\n            currentRoute.set(route);\n        });\n        // Set initial route\n        const path = window.location.pathname;\n        let initialRoute = 'overview';\n        if (path === '/connections')\n            initialRoute = 'connections';\n        else if (path === '/dnp')\n            initialRoute = 'dnp';\n        else if (path === '/enforcement')\n            initialRoute = 'enforcement';\n        else if (path === '/community')\n            initialRoute = 'community';\n        else if (path === '/profile')\n            initialRoute = 'profile';\n        currentRoute.set(initialRoute);\n    }\n}\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  \n  let email = '';\n  let password = '';\n  let totpCode = '';\n  let showTotpInput = false;\n  \n  // Email validation\n  $: emailValid = email.length === 0 || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  $: passwordValid = password.length === 0 || password.length >= 8;\n  $: formValid = emailValid && passwordValid && email.length > 0 && password.length > 0;\n  \n  function handleSubmit() {\n    if (!formValid) return;\n    \n    dispatch('login', {\n      email: email.trim(),\n      password,\n      totpCode: totpCode || undefined\n    });\n  }\n  \n\n  \n  // Reset TOTP input when error changes\n  $: if (error && !error.toLowerCase().includes('2fa') && !error.toLowerCase().includes('totp')) {\n    showTotpInput = false;\n    totpCode = '';\n  }\n  \n  // Show TOTP input if error indicates it's required\n  $: if (error && (error.toLowerCase().includes('2fa') || error.toLowerCase().includes('totp'))) {\n    showTotpInput = true;\n  }\n</script>\n\n<style>\n  /* Component-specific overrides */\n  .login-form-container {\n    min-height: fit-content;\n  }\n</style>\n\n<div class=\"login-form-container w-full max-w-md mx-auto space-y-6 px-4 sm:px-0\">\n  <div>\n    <h2 class=\"text-center text-uswds-2xl sm:text-uswds-3xl font-extrabold text-uswds-base-darker\">\n      Sign in to your account\n    </h2>\n    <p class=\"mt-2 text-center text-uswds-sm text-uswds-base-darker\">\n      Access your music blocklist manager\n    </p>\n  </div>\n  \n  <form class=\"space-y-4 sm:space-y-6\" on:submit|preventDefault={handleSubmit}>\n    <!-- Email Field -->\n    <div class=\"form-field-uswds\">\n      <label for=\"login-email\" class=\"form-label-uswds\">\n        Email address\n      </label>\n      <input\n        id=\"login-email\"\n        name=\"email\"\n        type=\"email\"\n        autocomplete=\"email\"\n        required\n        bind:value={email}\n        class=\"form-input-uswds\"\n        class:form-input--error={!emailValid}\n        placeholder=\"Enter your email\"\n      />\n      {#if !emailValid}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          Please enter a valid email address\n        </div>\n      {/if}\n    </div>\n\n    <!-- Password Field -->\n    <div class=\"form-field-uswds\">\n      <label for=\"login-password\" class=\"form-label-uswds\">\n        Password\n      </label>\n      <input\n        id=\"login-password\"\n        name=\"password\"\n        type=\"password\"\n        autocomplete=\"current-password\"\n        required\n        bind:value={password}\n        class=\"form-input-uswds\"\n        class:form-input--error={!passwordValid}\n        placeholder=\"Enter your password\"\n      />\n      {#if !passwordValid}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          Password must be at least 8 characters\n        </div>\n      {/if}\n    </div>\n\n    <!-- 2FA Code Field (shown when required) -->\n    {#if showTotpInput}\n      <div class=\"form-field-uswds\">\n        <label for=\"login-totp\" class=\"form-label-uswds\">\n          2FA Authentication Code\n        </label>\n        <input\n          id=\"login-totp\"\n          name=\"totp\"\n          type=\"text\"\n          autocomplete=\"one-time-code\"\n          bind:value={totpCode}\n          maxlength=\"6\"\n          pattern=\"[0-9]{6}\"\n          class=\"form-input-uswds\"\n          placeholder=\"Enter 6-digit code\"\n        />\n        <div class=\"validation-message\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n          </svg>\n          Enter the 6-digit code from your authenticator app\n        </div>\n      </div>\n    {/if}\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"alert-uswds alert-uswds-error\">\n        <div class=\"alert__icon\">\n          <svg class=\"icon-uswds icon-uswds--lg icon-uswds--error\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"alert__content\">\n          <p class=\"alert__text\">{error}</p>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Submit Button -->\n    <div style=\"margin-top: var(--space-6);\">\n      <button\n        type=\"submit\"\n        disabled={!formValid || isLoading}\n        class=\"btn-uswds btn-uswds-primary btn--full\"\n      >\n        {#if isLoading}\n          <svg class=\"icon-uswds icon-uswds--sm animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" style=\"margin-right: var(--space-2);\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Signing in...\n        {:else}\n          Sign in\n        {/if}\n      </button>\n    </div>\n\n    <!-- Switch to Register -->\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={() => dispatch('switchMode')}\n        class=\"text-primary hover:text-indigo-500 text-uswds-sm font-medium\"\n      >\n        Don't have an account? Create one\n      </button>\n    </div>\n  </form>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  export let success = '';\n  export let fieldErrors: Record<string, string> = {};\n  \n  let email = '';\n  let password = '';\n  let confirmPassword = '';\n  let termsAccepted = false;\n  \n  // Password strength requirements\n  $: passwordLength = password.length >= 8;\n  $: passwordUppercase = /[A-Z]/.test(password);\n  $: passwordLowercase = /[a-z]/.test(password);\n  $: passwordNumber = /\\d/.test(password);\n  $: passwordSpecial = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  \n  $: passwordStrength = [\n    passwordLength,\n    passwordUppercase,\n    passwordLowercase,\n    passwordNumber,\n    passwordSpecial\n  ].filter(Boolean).length;\n  \n  $: passwordStrengthText = passwordStrength === 0 ? '' :\n    passwordStrength <= 2 ? 'Weak' :\n    passwordStrength <= 3 ? 'Fair' :\n    passwordStrength <= 4 ? 'Good' : 'Strong';\n  \n  $: passwordStrengthColor = passwordStrength === 0 ? '' :\n    passwordStrength <= 2 ? 'text-red-600' :\n    passwordStrength <= 3 ? 'text-yellow-600' :\n    passwordStrength <= 4 ? 'text-blue-600' : 'text-green-600';\n  \n  // Validation\n  $: emailValid = email.length === 0 || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  $: passwordValid = password.length === 0 || (passwordLength && passwordStrength >= 3);\n  $: passwordsMatch = confirmPassword.length === 0 || password === confirmPassword;\n  $: formValid = emailValid && passwordValid && passwordsMatch && termsAccepted &&\n                 email.length > 0 && password.length > 0 && confirmPassword.length > 0;\n  \n  function handleSubmit() {\n    if (!formValid || isLoading) return;\n    \n    dispatch('register', {\n      email: email.trim(),\n      password,\n      confirm_password: confirmPassword,\n      terms_accepted: termsAccepted\n    });\n  }\n</script>\n\n<style>\n  /* Component-specific overrides */\n  .register-form-container {\n    min-height: fit-content;\n  }\n</style>\n\n<div class=\"register-form-container w-full max-w-md mx-auto space-y-6 px-4 sm:px-0\">\n  <div>\n    <h2 class=\"text-center text-uswds-2xl sm:text-uswds-3xl font-extrabold text-uswds-base-darker\">\n      Create your account\n    </h2>\n    <p class=\"mt-2 text-center text-uswds-sm text-uswds-base-darker\">\n      Join the music blocklist community\n    </p>\n  </div>\n  \n  <form class=\"space-y-4 sm:space-y-6\" on:submit|preventDefault={handleSubmit}>\n    <!-- Email Field -->\n    <div class=\"form-field-uswds\">\n      <label for=\"register-email\" class=\"form-label-uswds\">\n        Email address\n      </label>\n      <input\n        id=\"register-email\"\n        name=\"email\"\n        type=\"email\"\n        autocomplete=\"email\"\n        required\n        bind:value={email}\n        class=\"form-input-uswds\"\n        class:form-input--error={!emailValid}\n        placeholder=\"Enter your email\"\n      />\n      {#if fieldErrors.email}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          {fieldErrors.email}\n        </div>\n      {:else if !emailValid}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          Please enter a valid email address\n        </div>\n      {/if}\n    </div>\n\n    <!-- Password Field -->\n    <div class=\"form-field-uswds\">\n      <label for=\"register-password\" class=\"form-label-uswds\">\n        Password\n      </label>\n      <input\n        id=\"register-password\"\n        name=\"password\"\n        type=\"password\"\n        autocomplete=\"new-password\"\n        required\n        bind:value={password}\n        class=\"form-input-uswds\"\n        class:form-input--error={fieldErrors.password || (!passwordValid && password.length > 0)}\n        placeholder=\"Create a strong password\"\n      />\n        \n      <!-- Password Strength Indicator -->\n      {#if password.length > 0}\n        <div class=\"password-requirements\">\n          <div class=\"password-strength\">\n            <span class=\"password-strength__label\">Password strength:</span>\n            <span class=\"password-strength__value password-strength__value--{passwordStrengthText.toLowerCase()}\">\n              {passwordStrengthText}\n            </span>\n          </div>\n          <div class=\"password-strength-bars\">\n            {#each Array(5) as _, i}\n              <div \n                class=\"password-strength-bar\"\n                class:password-strength-bar--active-weak={passwordStrength <= 2 && i < passwordStrength}\n                class:password-strength-bar--active-fair={passwordStrength === 3 && i < passwordStrength}\n                class:password-strength-bar--active-good={passwordStrength === 4 && i < passwordStrength}\n                class:password-strength-bar--active-strong={passwordStrength === 5 && i < passwordStrength}\n              ></div>\n            {/each}\n          </div>\n          \n          <div class=\"requirements-grid\">\n            <div class=\"requirement-item\">\n              <div class=\"requirement-icon\">\n                {#if passwordLength}\n                  <svg class=\"icon-uswds icon-uswds--sm icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\">\n                    <svg class=\"icon-uswds icon-uswds--sm\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                      <circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                    </svg>\n                  </div>\n                {/if}\n              </div>\n              <span class=\"requirement-text\" class:requirement-text--satisfied={passwordLength}>\n                At least 8 characters\n              </span>\n            </div>\n            \n            <div class=\"requirement-item\">\n              <div class=\"requirement-icon\">\n                {#if passwordUppercase}\n                  <svg class=\"icon-uswds icon-uswds--sm icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\">\n                    <svg class=\"icon-uswds icon-uswds--sm\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                      <circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                    </svg>\n                  </div>\n                {/if}\n              </div>\n              <span class=\"requirement-text\" class:requirement-text--satisfied={passwordUppercase}>\n                One uppercase letter\n              </span>\n            </div>\n            \n            <div class=\"requirement-item\">\n              <div class=\"requirement-icon\">\n                {#if passwordLowercase}\n                  <svg class=\"icon-uswds icon-uswds--sm icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\">\n                    <svg class=\"icon-uswds icon-uswds--sm\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                      <circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                    </svg>\n                  </div>\n                {/if}\n              </div>\n              <span class=\"requirement-text\" class:requirement-text--satisfied={passwordLowercase}>\n                One lowercase letter\n              </span>\n            </div>\n            \n            <div class=\"requirement-item\">\n              <div class=\"requirement-icon\">\n                {#if passwordNumber}\n                  <svg class=\"icon-uswds icon-uswds--sm icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\">\n                    <svg class=\"icon-uswds icon-uswds--sm\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                      <circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                    </svg>\n                  </div>\n                {/if}\n              </div>\n              <span class=\"requirement-text\" class:requirement-text--satisfied={passwordNumber}>\n                One number\n              </span>\n            </div>\n            \n            <div class=\"requirement-item\">\n              <div class=\"requirement-icon\">\n                {#if passwordSpecial}\n                  <svg class=\"icon-uswds icon-uswds--sm icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--sm icon-uswds--neutral\">\n                    <svg class=\"icon-uswds icon-uswds--sm\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n                      <circle cx=\"10\" cy=\"10\" r=\"8\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                    </svg>\n                  </div>\n                {/if}\n              </div>\n              <span class=\"requirement-text\" class:requirement-text--satisfied={passwordSpecial}>\n                One special character (!@#$%^&*)\n              </span>\n            </div>\n          </div>\n        </div>\n      {/if}\n      \n      {#if fieldErrors.password}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          {fieldErrors.password}\n        </div>\n      {/if}\n    </div>\n\n    <!-- Confirm Password Field -->\n    <div class=\"form-field-uswds\">\n      <label for=\"confirm-password\" class=\"form-label-uswds\">\n        Confirm Password\n      </label>\n      <input\n        id=\"confirm-password\"\n        name=\"confirmPassword\"\n        type=\"password\"\n        autocomplete=\"new-password\"\n        required\n        bind:value={confirmPassword}\n        class=\"form-input-uswds\"\n        class:form-input--error={!passwordsMatch && confirmPassword.length > 0}\n        placeholder=\"Confirm your password\"\n      />\n      {#if fieldErrors.confirm_password}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          {fieldErrors.confirm_password}\n        </div>\n      {:else if !passwordsMatch && confirmPassword.length > 0}\n        <div class=\"validation-message validation-message--error\">\n          <svg class=\"icon-uswds icon-uswds--sm icon-uswds--error\" fill=\"currentColor\" viewBox=\"0 0 20 20\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\" />\n          </svg>\n          Passwords do not match\n        </div>\n      {/if}\n    </div>\n\n    <!-- Terms Acceptance -->\n    <div class=\"flex items-start space-x-3\">\n      <div class=\"flex items-center icon icon-md mt-0.5\">\n        <input\n          id=\"terms-accepted\"\n          name=\"termsAccepted\"\n          type=\"checkbox\"\n          required\n          bind:checked={termsAccepted}\n          class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-primary border-gray-300 rounded transition-colors duration-200\"\n        />\n      </div>\n      <div class=\"flex-1 text-uswds-sm\">\n        <label for=\"terms-accepted\" class=\"text-uswds-base-darker leading-relaxed cursor-pointer\">\n          I agree to the \n          <a href=\"/terms\" target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500 underline font-medium\">\n            Terms of Service\n          </a>\n          and \n          <a href=\"/privacy\" target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500 underline font-medium\">\n            Privacy Policy\n          </a>\n        </label>\n        {#if fieldErrors.terms_accepted}\n          <p class=\"mt-1 text-uswds-sm text-uswds-red-50\">{fieldErrors.terms_accepted}</p>\n        {:else if !termsAccepted && formValid === false}\n          <p class=\"mt-1 text-uswds-sm text-uswds-red-50\">You must accept the terms to continue</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Success Message -->\n    {#if success}\n      <div class=\"alert-uswds alert-uswds-success\">\n        <div class=\"alert__icon\">\n          <svg class=\"icon-uswds icon-uswds--lg icon-uswds--success\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"alert__content\">\n          <p class=\"alert__text\">{success}</p>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"alert-uswds alert-uswds-error\">\n        <div class=\"alert__icon\">\n          <svg class=\"icon-uswds icon-uswds--lg icon-uswds--error\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"alert__content\">\n          <p class=\"alert__text\">{error}</p>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Submit Button -->\n    <div style=\"margin-top: var(--space-6);\">\n      <button\n        type=\"submit\"\n        disabled={!formValid || isLoading}\n        class=\"btn-uswds btn-uswds-primary btn--full\"\n      >\n        {#if isLoading}\n          <svg class=\"icon-uswds icon-uswds--sm animate-spin\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" style=\"margin-right: var(--space-2);\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Creating account...\n        {:else}\n          Create account\n        {/if}\n      </button>\n    </div>\n\n    <!-- Switch to Login -->\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={() => dispatch('switchMode')}\n        class=\"text-indigo-600 hover:text-indigo-500 text-uswds-sm font-medium\"\n      >\n        Already have an account? Sign in\n      </button>\n    </div>\n  </form>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let qrCodeUrl = '';\n  export let secret = '';\n  export let isLoading = false;\n  export let error = '';\n  \n  let verificationCode = '';\n  let step = 1; // 1: Show QR, 2: Verify code, 3: Success\n  \n  $: codeValid = verificationCode.length === 6 && /^\\d{6}$/.test(verificationCode);\n  \n  function handleVerify() {\n    if (!codeValid) return;\n    \n    dispatch('verify', {\n      code: verificationCode\n    });\n  }\n  \n  function handleCancel() {\n    dispatch('cancel');\n  }\n  \n  function copySecret() {\n    navigator.clipboard.writeText(secret).then(() => {\n      // Could add a toast notification here\n    });\n  }\n  \n  // Handle successful verification from parent\n  export function showSuccess() {\n    step = 3;\n  }\n</script>\n\n<div class=\"max-w-md mx-auto space-y-6\">\n  <div class=\"text-center\">\n    <h2 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">\n      Set up Two-Factor Authentication\n    </h2>\n    <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">\n      Add an extra layer of security to your account\n    </p>\n  </div>\n\n  {#if step === 1}\n    <!-- QR Code Setup Step -->\n    <div class=\"space-y-4\">\n      <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-6 text-center\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">\n          Step 1: Scan QR Code\n        </h3>\n        \n        {#if qrCodeUrl}\n          <div class=\"bg-white p-uswds-4 rounded-uswds-lg inline-block\">\n            <img \n              src={qrCodeUrl} \n              alt=\"2FA QR Code\" \n              class=\"w-48 h-48 mx-auto\"\n            />\n          </div>\n        {:else}\n          <div class=\"w-48 h-48 mx-auto bg-uswds-base-lightest rounded-uswds-lg flex items-center justify-center\">\n            <div class=\"animate-spin rounded-full icon icon-xl  border-b-2 border-indigo-600\"></div>\n          </div>\n        {/if}\n        \n        <p class=\"mt-4 text-uswds-sm text-uswds-base-darker\">\n          Scan this QR code with your authenticator app (Google Authenticator, Authy, etc.)\n        </p>\n      </div>\n\n      <!-- Manual Entry Option -->\n      <div class=\"bg-uswds-blue-50 rounded-uswds-lg p-uswds-4\">\n        <h4 class=\"text-uswds-sm font-medium text-uswds-blue-50 mb-2\">\n          Can't scan? Enter manually:\n        </h4>\n        <div class=\"flex items-center space-x-2\">\n          <code class=\"flex-1 bg-white px-3 py-2 rounded border text-uswds-sm font-mono\">\n            {secret}\n          </code>\n          <button\n            type=\"button\"\n            on:click={copySecret}\n            class=\"px-3 py-2 text-uswds-sm bg-uswds-blue-50 text-white rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            Copy\n          </button>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        on:click={() => step = 2}\n        class=\"w-full py-2 px-4 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        I've added the account to my app\n      </button>\n    </div>\n  \n  {:else if step === 2}\n    <!-- Verification Step -->\n    <div class=\"space-y-4\">\n      <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-6 text-center\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">\n          Step 2: Verify Setup\n        </h3>\n        \n        <p class=\"text-uswds-sm text-uswds-base-darker mb-4\">\n          Enter the 6-digit code from your authenticator app to complete setup\n        </p>\n        \n        <div class=\"max-w-xs mx-auto\">\n          <input\n            type=\"text\"\n            bind:value={verificationCode}\n            maxlength=\"6\"\n            pattern=\"[0-9]{6}\"\n            placeholder=\"000000\"\n            class=\"block w-full text-center text-uswds-2xl font-mono px-3 py-3 border border-gray-300 rounded-uswds-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            class:border-red-300={verificationCode.length > 0 && !codeValid}\n          />\n          {#if verificationCode.length > 0 && !codeValid}\n            <p class=\"mt-1 text-uswds-sm text-uswds-red-50\">Please enter a 6-digit code</p>\n          {/if}\n        </div>\n      </div>\n\n      {#if error}\n        <div class=\"rounded-uswds-md bg-red-50 p-uswds-4\">\n          <div class=\"flex\">\n            <div class=\"\">\n              <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-uswds-sm text-uswds-red-50\">{error}</p>\n            </div>\n          </div>\n        </div>\n      {/if}\n\n      <div class=\"flex space-x-3\">\n        <button\n          type=\"button\"\n          on:click={() => step = 1}\n          class=\"flex-1 py-2 px-4 border border-gray-300 rounded-uswds-md shadow-sm text-uswds-sm font-medium text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Back\n        </button>\n        <button\n          type=\"button\"\n          on:click={handleVerify}\n          disabled={!codeValid || isLoading}\n          class=\"flex-1 py-2 px-4 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white btn btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {#if isLoading}\n            <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-2 icon-uswds icon-uswds--sm text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            Verifying...\n          {:else}\n            Verify & Enable\n          {/if}\n        </button>\n      </div>\n    </div>\n  \n  {:else if step === 3}\n    <!-- Success Step -->\n    <div class=\"text-center space-y-4\">\n      <div class=\"mx-auto avatar avatar--xl bg-green-100\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-uswds-green-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n        </svg>\n      </div>\n      \n      <div>\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">\n          Two-Factor Authentication Enabled!\n        </h3>\n        <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">\n          Your account is now protected with 2FA. You'll need to enter a code from your authenticator app each time you sign in.\n        </p>\n      </div>\n\n      <div class=\"bg-yellow-50 rounded-uswds-lg p-uswds-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-uswds-sm text-yellow-800\">\n              <strong>Important:</strong> Save your recovery codes in a safe place. You'll need them if you lose access to your authenticator app.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        on:click={() => dispatch('complete')}\n        class=\"w-full py-2 px-4 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Continue to Dashboard\n      </button>\n    </div>\n  {/if}\n\n  <!-- Cancel Button (except on success step) -->\n  {#if step !== 3}\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={handleCancel}\n        class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n      >\n        Skip for now\n      </button>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  export let email = '';\n  \n  let verificationCode = '';\n  \n  $: codeValid = verificationCode.length === 6 && /^\\d{6}$/.test(verificationCode);\n  \n  function handleSubmit() {\n    if (!codeValid) return;\n    \n    dispatch('verify', {\n      code: verificationCode\n    });\n  }\n  \n  function handleBack() {\n    dispatch('back');\n  }\n  \n  // Auto-submit when 6 digits are entered\n  $: if (codeValid && !isLoading) {\n    handleSubmit();\n  }\n</script>\n\n<div class=\"max-w-md mx-auto space-y-6\">\n  <div class=\"text-center\">\n    <div class=\"mx-auto avatar avatar--xl bg-indigo-100\">\n      <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n      </svg>\n    </div>\n    \n    <h2 class=\"mt-4 text-uswds-2xl font-bold text-uswds-base-darker\">\n      Two-Factor Authentication\n    </h2>\n    <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">\n      Enter the 6-digit code from your authenticator app\n    </p>\n    {#if email}\n      <p class=\"text-uswds-sm text-uswds-base-darker\">\n        Signing in as <span class=\"font-medium\">{email}</span>\n      </p>\n    {/if}\n  </div>\n\n  <div class=\"space-y-4\">\n    <!-- Code Input -->\n    <div>\n      <label for=\"verification-code\" class=\"block text-uswds-sm font-medium text-uswds-base-darker text-center mb-2\">\n        Authentication Code\n      </label>\n      <div class=\"max-w-xs mx-auto\">\n        <input\n          id=\"verification-code\"\n          type=\"text\"\n          bind:value={verificationCode}\n          maxlength=\"6\"\n          pattern=\"[0-9]{6}\"\n          placeholder=\"000000\"\n          autocomplete=\"one-time-code\"\n          class=\"block w-full text-center text-uswds-2xl font-mono px-3 py-3 border border-gray-300 rounded-uswds-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n          class:border-red-300={verificationCode.length > 0 && !codeValid}\n          class:border-green-300={codeValid}\n        />\n        {#if verificationCode.length > 0 && !codeValid}\n          <p class=\"mt-1 text-uswds-sm text-uswds-red-50 text-center\">Please enter a 6-digit code</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"rounded-uswds-md bg-red-50 p-uswds-4\">\n        <div class=\"flex\">\n          <div class=\"\">\n            <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-uswds-sm text-uswds-red-50\">{error}</p>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Loading State -->\n    {#if isLoading}\n      <div class=\"text-center\">\n        <div class=\"flex items-center px-4 py-2 text-uswds-sm text-uswds-base-darker\">\n          <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-3 icon-uswds icon-uswds--md text-indigo-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Verifying code...\n        </div>\n      </div>\n    {/if}\n\n    <!-- Manual Submit Button (if auto-submit fails) -->\n    {#if codeValid && !isLoading}\n      <button\n        type=\"button\"\n        on:click={handleSubmit}\n        class=\"w-full py-2 px-4 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Verify Code\n      </button>\n    {/if}\n\n    <!-- Help Text -->\n    <div class=\"text-center space-y-2\">\n      <p class=\"text-uswds-xs text-uswds-base-darker\">\n        The code will automatically verify when you enter all 6 digits\n      </p>\n      \n      <div class=\"space-y-1\">\n        <button\n          type=\"button\"\n          class=\"text-uswds-sm text-indigo-600 hover:text-indigo-500\"\n          on:click={() => dispatch('resend')}\n        >\n          Didn't receive a code? Try again\n        </button>\n        \n        <div>\n          <button\n            type=\"button\"\n            on:click={handleBack}\n            class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n          >\n            ← Back to login\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Troubleshooting -->\n  <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-4\">\n    <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker mb-2\">\n      Having trouble?\n    </h4>\n    <ul class=\"text-uswds-xs text-uswds-base-darker space-y-1\">\n      <li>• Make sure your device's time is correct</li>\n      <li>• Try generating a new code in your authenticator app</li>\n      <li>• Check that you're using the right account in your app</li>\n    </ul>\n  </div>\n</div>","<script lang=\"ts\">\n  import { authActions } from '../stores/auth';\n  import LoginForm from './LoginForm.svelte';\n  import RegisterForm from './RegisterForm.svelte';\n  import TwoFactorSetup from './TwoFactorSetup.svelte';\n  import TwoFactorVerification from './TwoFactorVerification.svelte';\n  \n  let mode = 'login'; // 'login', 'register', '2fa-setup', '2fa-verify'\n  let isLoading = false;\n  let error = '';\n  let success = '';\n  let fieldErrors: Record<string, string> = {};\n  \n  // 2FA setup data\n  let qrCodeUrl = '';\n  let secret = '';\n  let pendingEmail = '';\n  \n  // Component references\n  let twoFactorSetupRef: TwoFactorSetup;\n\n  async function handleLogin(event: CustomEvent) {\n    const { email, password, totpCode } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.login(email, password, totpCode);\n      \n      if (!result.success) {\n        if (result.message?.toLowerCase().includes('2fa') || result.message?.toLowerCase().includes('totp')) {\n          pendingEmail = email;\n          mode = '2fa-verify';\n        } else {\n          error = result.message || 'Login failed';\n        }\n      }\n      // Success is handled by the auth store updating isAuthenticated\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handleRegister(event: CustomEvent) {\n    const { email, password, confirm_password, terms_accepted } = event.detail;\n    isLoading = true;\n    error = '';\n    success = '';\n    fieldErrors = {};\n    \n    try {\n      const result = await authActions.register(email, password, confirm_password, terms_accepted);\n      \n      if (result.success) {\n        if (result.autoLogin) {\n          // Auto-login successful, user will be redirected by the auth state change\n          success = 'Account created successfully! Welcome to No Drake in the House.';\n          // Small delay to show success message before redirect\n          setTimeout(() => {\n            // The redirect will happen automatically via the auth store\n            // We could also manually navigate to a specific onboarding route here\n            // navigateTo('overview'); // This is handled automatically by App.svelte\n          }, 1500);\n        } else {\n          // Auto-login failed, fallback to manual login\n          success = 'Account created successfully! You can now sign in.';\n          mode = 'login';\n          // Clear any previous errors\n          error = '';\n          fieldErrors = {};\n        }\n      } else {\n        if (result.errors) {\n          // Handle field-specific errors\n          fieldErrors = {};\n          result.errors.forEach((err: any) => {\n            fieldErrors[err.field] = err.message;\n          });\n          error = result.message || 'Please fix the errors below';\n        } else {\n          error = result.message || 'Registration failed';\n        }\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FAVerification(event: CustomEvent) {\n    const { code } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      // For login verification, we need to retry the login with the TOTP code\n      // This assumes we stored the email/password from the previous attempt\n      // In a real implementation, you might want to handle this differently\n      const result = await authActions.verify2FA(code);\n      \n      if (!result.success) {\n        error = result.message || 'Invalid verification code';\n      }\n      // Success is handled by the auth store\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FASetup() {\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.setup2FA();\n      \n      if (result.success) {\n        qrCodeUrl = result.qrCodeUrl;\n        secret = result.secret;\n        mode = '2fa-setup';\n      } else {\n        error = result.message || 'Failed to setup 2FA';\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FASetupVerification(event: CustomEvent) {\n    const { code } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.verify2FA(code);\n      \n      if (result.success) {\n        twoFactorSetupRef?.showSuccess();\n      } else {\n        error = result.message || 'Invalid verification code';\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  function switchToLogin() {\n    mode = 'login';\n    error = '';\n    success = '';\n    fieldErrors = {};\n  }\n\n  function switchToRegister() {\n    mode = 'register';\n    error = '';\n    success = '';\n    fieldErrors = {};\n  }\n\n  function backToLogin() {\n    mode = 'login';\n    error = '';\n    pendingEmail = '';\n  }\n\n  function cancel2FASetup() {\n    mode = 'login';\n    error = '';\n    qrCodeUrl = '';\n    secret = '';\n  }\n\n  function complete2FASetup() {\n    // 2FA setup complete, user should now be authenticated\n    mode = 'login';\n    qrCodeUrl = '';\n    secret = '';\n  }\n</script>\n\n<div class=\"min-h-screen flex items-center justify-center bg-uswds-base-lightest py-12 px-4 sm:px-6 lg:px-8\">\n  <div class=\"max-w-md w-full\">\n    {#if mode === 'login'}\n      <LoginForm \n        {isLoading} \n        {error} \n        on:login={handleLogin}\n        on:switchMode={switchToRegister}\n      />\n      \n      <!-- Optional 2FA Setup Link for existing users -->\n      <div class=\"mt-6 text-center\">\n        <button\n          type=\"button\"\n          on:click={handle2FASetup}\n          class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n        >\n          Set up Two-Factor Authentication\n        </button>\n      </div>\n      \n    {:else if mode === 'register'}\n      <RegisterForm \n        {isLoading} \n        {error}\n        {success}\n        {fieldErrors}\n        on:register={handleRegister}\n        on:switchMode={switchToLogin}\n      />\n      \n    {:else if mode === '2fa-verify'}\n      <TwoFactorVerification\n        {isLoading}\n        {error}\n        email={pendingEmail}\n        on:verify={handle2FAVerification}\n        on:back={backToLogin}\n        on:resend={() => {\n          // Could implement resend logic here\n          error = 'Please try logging in again';\n          backToLogin();\n        }}\n      />\n      \n    {:else if mode === '2fa-setup'}\n      <TwoFactorSetup\n        bind:this={twoFactorSetupRef}\n        {qrCodeUrl}\n        {secret}\n        {isLoading}\n        {error}\n        on:verify={handle2FASetupVerification}\n        on:cancel={cancel2FASetup}\n        on:complete={complete2FASetup}\n      />\n    {/if}\n  </div>\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    connections: [],\n    isLoading: false,\n    error: null,\n};\nexport const connectionsStore = writable(initialState);\nexport const connectedServices = derived(connectionsStore, ($connections) => $connections.connections.filter(conn => conn.status === 'active'));\nexport const spotifyConnection = derived(connectionsStore, ($connections) => $connections.connections.find(conn => conn.provider === 'spotify'));\nexport const hasActiveSpotifyConnection = derived(spotifyConnection, ($spotify) => $spotify?.status === 'active');\n// Connection actions\nexport const connectionActions = {\n    fetchConnections: async () => {\n        connectionsStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/connections', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                connectionsStore.update(state => ({\n                    ...state,\n                    connections: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                connectionsStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch connections',\n                isLoading: false,\n            }));\n        }\n    },\n    initiateSpotifyAuth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/auth', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Redirect to Spotify authorization\n                window.location.href = result.data.auth_url;\n            }\n            else {\n                throw new Error(result.message);\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: `Failed to initiate Spotify auth: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            }));\n        }\n    },\n    handleSpotifyCallback: async (code, state) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/callback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ code, state }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to complete Spotify connection' };\n        }\n    },\n    disconnectSpotify: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/connection', {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to disconnect Spotify' };\n        }\n    },\n    checkSpotifyHealth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/health', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Update connection status if needed\n                await connectionActions.fetchConnections();\n                return result.data;\n            }\n        }\n        catch (error) {\n            console.error('Spotify health check failed:', error);\n        }\n    },\n};\n","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    entries: [],\n    isLoading: false,\n    error: null,\n    searchResults: [],\n    isSearching: false,\n};\nexport const dnpStore = writable(initialState);\nexport const dnpArtists = derived(dnpStore, ($dnp) => $dnp.entries.map(entry => entry.artist));\nexport const dnpCount = derived(dnpStore, ($dnp) => ($dnp.entries && Array.isArray($dnp.entries)) ? $dnp.entries.length : 0);\nexport const dnpTags = derived(dnpStore, ($dnp) => {\n    if (!$dnp.entries || !Array.isArray($dnp.entries)) {\n        return [];\n    }\n    const allTags = $dnp.entries.flatMap(entry => entry.tags || []);\n    return [...new Set(allTags)].sort();\n});\n// DNP actions\nexport const dnpActions = {\n    fetchDnpList: async () => {\n        dnpStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/list', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    entries: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch DNP list',\n                isLoading: false,\n            }));\n        }\n    },\n    searchArtists: async (query, limit = 10) => {\n        if (!query.trim()) {\n            dnpStore.update(state => ({ ...state, searchResults: [] }));\n            return;\n        }\n        dnpStore.update(state => ({ ...state, isSearching: true }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/search?q=${encodeURIComponent(query)}&limit=${limit}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    searchResults: result.data,\n                    isSearching: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isSearching: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Artist search failed',\n                isSearching: false,\n            }));\n        }\n    },\n    addArtist: async (artistQuery, tags = [], note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/artists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: artistQuery,\n                    tags,\n                    note,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to add artist to DNP list' };\n        }\n    },\n    removeArtist: async (artistId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to remove artist from DNP list' };\n        }\n    },\n    updateEntry: async (artistId, tags, note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ tags, note }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update DNP entry' };\n        }\n    },\n    bulkImport: async (data, format) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/import', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ data, format }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Bulk import failed' };\n        }\n    },\n    exportList: async (format = 'json') => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/export?format=${format}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Export failed' };\n        }\n    },\n    clearSearch: () => {\n        dnpStore.update(state => ({ ...state, searchResults: [] }));\n    },\n};\n","<script lang=\"ts\">\n  import { currentRoute, navigateTo } from '../utils/simple-router';\n  import { authActions, currentUser } from '../stores/auth';\n  import { dnpCount } from '../stores/dnp';\n\n  function handleLogout() {\n    authActions.logout();\n  }\n\n  function navigate(route: string) {\n    navigateTo(route);\n  }\n</script>\n\n<!-- Top Navigation -->\n<nav class=\"bg-white shadow-sm border-b border-gray-200\">\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"flex justify-between h-16\">\n      <div class=\"flex items-center\">\n        <h1 class=\"text-uswds-xl font-semibold text-uswds-base-darker\">\n          No Drake in the House\n        </h1>\n      </div>\n      \n      <div class=\"flex items-center space-x-4\">\n        <span class=\"text-uswds-sm text-uswds-base-darker\">\n          {$currentUser?.email}\n        </span>\n        <button\n          type=\"button\"\n          on:click|preventDefault={() => navigate('profile')}\n          class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n        >\n          Settings\n        </button>\n        <button\n          type=\"button\"\n          on:click|preventDefault={() => handleLogout()}\n          class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n        >\n          Sign out\n        </button>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<!-- Tab Navigation -->\n<div class=\"bg-white shadow-sm\">\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <nav class=\"flex space-x-8\" aria-label=\"Tabs\">\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => navigate('overview')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {$currentRoute === 'overview' ? 'border-indigo-500 text-primary' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Overview\n      </button>\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => navigate('connections')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {$currentRoute === 'connections' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Connections\n      </button>\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => navigate('dnp')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {$currentRoute === 'dnp' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        DNP List ({$dnpCount})\n      </button>\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => navigate('enforcement')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {$currentRoute === 'enforcement' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Enforcement\n      </button>\n      <button\n        type=\"button\"\n        on:click|preventDefault={() => navigate('community')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {$currentRoute === 'community' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Community Lists\n      </button>\n    </nav>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { connectionActions, spotifyConnection } from '../stores/connections';\n  \n  let isConnecting = false;\n  let error = '';\n\n  onMount(() => {\n    // Handle OAuth callback if present\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n    \n    if (code && state) {\n      handleSpotifyCallback(code, state);\n      // Clean up URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  });\n\n  async function handleSpotifyCallback(code: string, state: string) {\n    isConnecting = true;\n    error = '';\n    \n    const result = await connectionActions.handleSpotifyCallback(code, state);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to connect Spotify';\n    }\n    \n    isConnecting = false;\n  }\n\n  async function connectSpotify() {\n    isConnecting = true;\n    error = '';\n    \n    try {\n      await connectionActions.initiateSpotifyAuth();\n    } catch (err) {\n      error = 'Failed to initiate Spotify connection';\n      isConnecting = false;\n    }\n  }\n\n  async function disconnectSpotify() {\n    const result = await connectionActions.disconnectSpotify();\n    \n    if (!result.success) {\n      error = result.message || 'Failed to disconnect Spotify';\n    }\n  }\n\n  async function checkHealth() {\n    await connectionActions.checkSpotifyHealth();\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'active': return 'text-green-600 bg-green-100';\n      case 'expired': return 'text-yellow-600 bg-yellow-100';\n      case 'error': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">Service Connections</h2>\n    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n      Connect your streaming service accounts to manage your blocklist across platforms.\n    </p>\n  </div>\n\n  {#if error}\n    <div class=\"mb-6 bg-red-50 border border-red-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <div class=\"\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-uswds-sm text-uswds-red-50\">{error}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-uswds-md\">\n    <ul class=\"divide-y divide-gray-200\">\n      <!-- Spotify Connection -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0\">\n              <div class=\"avatar avatar--lg bg-green-500\">\n                <svg class=\"icon-uswds icon-uswds--lg text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                  <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Spotify</p>\n                {#if $spotifyConnection}\n                  <span class=\"ml-2 flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium {getStatusColor($spotifyConnection.status)}\">\n                    {$spotifyConnection.status}\n                  </span>\n                {/if}\n              </div>\n              <div class=\"mt-1\">\n                {#if $spotifyConnection}\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    Connected {formatDate($spotifyConnection.created_at)}\n                    {#if $spotifyConnection.provider_user_id}\n                      • User ID: {$spotifyConnection.provider_user_id}\n                    {/if}\n                  </p>\n                  {#if $spotifyConnection.scopes.length > 0}\n                    <p class=\"text-uswds-xs text-uswds-base-darker mt-1\">\n                      Permissions: {$spotifyConnection.scopes.join(', ')}\n                    </p>\n                  {/if}\n                {:else}\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    Connect your Spotify account to manage your music library\n                  </p>\n                {/if}\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-2\">\n            {#if $spotifyConnection}\n              <button\n                on:click={checkHealth}\n                class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-uswds-sm leading-4 font-medium rounded-uswds-md text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Check Health\n              </button>\n              <button\n                on:click={disconnectSpotify}\n                class=\"inline-flex items-center px-3 py-2 border border-transparent text-uswds-sm leading-4 font-medium rounded-uswds-md text-uswds-red-50 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Disconnect\n              </button>\n            {:else}\n              <button\n                on:click={connectSpotify}\n                disabled={isConnecting}\n                class=\"inline-flex items-center px-4 py-2 border border-transparent text-uswds-sm font-medium rounded-uswds-md shadow-sm text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {#if isConnecting}\n                  <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-2 icon-uswds icon-uswds--sm text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Connecting...\n                {:else}\n                  Connect\n                {/if}\n              </button>\n            {/if}\n          </div>\n        </div>\n      </li>\n\n      <!-- Apple Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0\">\n              <div class=\"avatar avatar--lg bg-uswds-base-lightest\">\n                <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.997 6.124c0-.738-.065-1.47-.24-2.19-.317-1.31-1.062-2.31-2.18-3.043C21.003.517 20.373.285 19.7.164c-.517-.093-1.038-.135-1.564-.15-.04-.001-.08-.004-.12-.004H5.986c-.04 0-.08.003-.12.004-.526.015-1.047.057-1.564.15-.673.121-1.303.353-1.877.727C1.307 1.624.562 2.624.245 3.934.07 4.654.005 5.386.005 6.124v11.748c0 .738.065 1.47.24 2.19.317 1.31 1.062 2.31 2.18 3.043.574.374 1.204.606 1.877.727.517.093 1.038.135 1.564.15.04.001.08.004.12.004h12.014c.04 0 .08-.003.12-.004.526-.015 1.047-.057 1.564-.15.673-.121 1.303-.353 1.877-.727 1.118-.733 1.863-1.733 2.18-3.043.175-.72.24-1.452.24-2.19V6.124zM12.001 4.009c2.47 0 4.471 2.001 4.471 4.471s-2.001 4.471-4.471 4.471-4.471-2.001-4.471-4.471 2.001-4.471 4.471-4.471zm0 7.542c1.693 0 3.071-1.378 3.071-3.071s-1.378-3.071-3.071-3.071-3.071 1.378-3.071 3.071 1.378 3.071 3.071 3.071z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Apple Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium text-uswds-base-darker bg-uswds-base-lightest\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-uswds-sm text-uswds-base-darker mt-1\">\n                Apple Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-uswds-sm font-medium rounded-uswds-md text-uswds-base-darker bg-uswds-base-lightest cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n\n      <!-- YouTube Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0\">\n              <div class=\"avatar avatar--lg bg-red-500\">\n                <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">YouTube Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium text-uswds-base-darker bg-uswds-base-lightest\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-uswds-sm text-uswds-base-darker mt-1\">\n                YouTube Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-uswds-sm font-medium rounded-uswds-md text-uswds-base-darker bg-uswds-base-lightest cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!-- Connection Info -->\n  <div class=\"mt-6 bg-uswds-blue-50 border border-blue-200 rounded-uswds-md p-uswds-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-blue-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-uswds-sm font-medium text-uswds-blue-50\">\n          About Service Connections\n        </h3>\n        <div class=\"mt-2 text-uswds-sm text-uswds-blue-50\">\n          <p>\n            Service connections allow you to apply your Do-Not-Play list across different streaming platforms. \n            Each connection is secured with OAuth 2.0 and only requests the minimum permissions needed to manage your blocklist.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Spotify: Full library management and playlist modification</li>\n            <li>Apple Music: Limited library access (coming soon)</li>\n            <li>YouTube Music: Browser extension support only (coming soon)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions, dnpStore } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  let searchQuery = '';\n  let selectedArtist: any = null;\n  let tags = '';\n  let note = '';\n  let isAdding = false;\n  let error = '';\n  \n  let searchTimeout: any;\n  \n  $: {\n    if (searchTimeout) clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(() => {\n      if (searchQuery.trim()) {\n        dnpActions.searchArtists(searchQuery);\n      } else {\n        dnpActions.clearSearch();\n      }\n    }, 300);\n  }\n\n  function selectArtist(artist: any) {\n    selectedArtist = artist;\n    searchQuery = artist.canonical_name;\n    dnpActions.clearSearch();\n  }\n\n  function clearSelection() {\n    selectedArtist = null;\n    searchQuery = '';\n    dnpActions.clearSearch();\n  }\n\n  async function handleSubmit() {\n    if (!searchQuery.trim()) {\n      error = 'Please enter an artist name';\n      return;\n    }\n\n    isAdding = true;\n    error = '';\n\n    const tagArray = tags.split(',').map(t => t.trim()).filter(t => t);\n    \n    const result = await dnpActions.addArtist(\n      searchQuery,\n      tagArray,\n      note.trim() || undefined\n    );\n\n    if (result.success) {\n      // Reset form\n      searchQuery = '';\n      selectedArtist = null;\n      tags = '';\n      note = '';\n      dispatch('artistAdded');\n    } else {\n      error = result.message || 'Failed to add artist';\n    }\n\n    isAdding = false;\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-4\">\n  <!-- Artist Search -->\n  <div class=\"relative\">\n    <label for=\"artist-search\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Artist Name\n    </label>\n    <div class=\"mt-1 relative\">\n      <input\n        id=\"artist-search\"\n        type=\"text\"\n        bind:value={searchQuery}\n        placeholder=\"Search for an artist...\"\n        class=\"block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n      />\n      \n      {#if selectedArtist}\n        <button\n          type=\"button\"\n          on:click={clearSelection}\n          class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n        >\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-base-darker hover:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      {/if}\n    </div>\n\n    <!-- Search Results -->\n    {#if $dnpStore.searchResults.length > 0 && !selectedArtist}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-uswds-md py-1 text-uswds-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-uswds-sm\">\n        {#each $dnpStore.searchResults as artist}\n          <button\n            type=\"button\"\n            on:click={() => selectArtist(artist)}\n            class=\"w-full text-left px-4 py-2 hover:bg-uswds-base-lightest focus:bg-gray-100 focus:outline-none\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-3\">\n                {#if artist.metadata.image}\n                  <img\n                    src={artist.metadata.image}\n                    alt={artist.canonical_name}\n                    class=\"icon icon-xl  rounded-full object-cover\"\n                  />\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--lg rounded-full bg-uswds-base-lightest flex items-center justify-center\">\n                    <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--sm text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                <div>\n                  <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                    {artist.canonical_name}\n                  </div>\n                  {#if artist.metadata.genres && artist.metadata.genres.length > 0}\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">\n                      {artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                </div>\n              </div>\n              \n              <div class=\"flex space-x-1\">\n                {#each getProviderBadges(artist) as badge}\n                  <span class=\"flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {badge.color}\">\n                    {badge.name}\n                  </span>\n                {/each}\n              </div>\n            </div>\n          </button>\n        {/each}\n      </div>\n    {/if}\n\n    {#if $dnpStore.isSearching}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-uswds-md py-2 text-center\">\n        <svg aria-hidden=\"true\" class=\"animate-spin mx-auto icon-uswds icon-uswds--md text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"text-uswds-sm text-uswds-base-darker mt-1\">Searching...</p>\n      </div>\n    {/if}\n  </div>\n\n  <!-- Selected Artist Preview -->\n  {#if selectedArtist}\n    <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-4\">\n      <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker mb-2\">Selected Artist</h4>\n      <div class=\"flex items-center space-x-3\">\n        {#if selectedArtist.metadata.image}\n          <img\n            src={selectedArtist.metadata.image}\n            alt={selectedArtist.canonical_name}\n            class=\"avatar avatar--xl object-cover\"\n          />\n        {:else}\n          <div class=\"avatar avatar--xl bg-uswds-base-lightest avatar__placeholder\">\n            <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n        {/if}\n        <div class=\"flex-1\">\n          <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n            {selectedArtist.canonical_name}\n          </div>\n          {#if selectedArtist.metadata.genres && selectedArtist.metadata.genres.length > 0}\n            <div class=\"text-uswds-xs text-uswds-base-darker\">\n              {selectedArtist.metadata.genres.join(', ')}\n            </div>\n          {/if}\n          <div class=\"flex space-x-1 mt-1\">\n            {#each getProviderBadges(selectedArtist) as badge}\n              <span class=\"inline-flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {badge.color}\">\n                {badge.name}\n              </span>\n            {/each}\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tags -->\n  <div>\n    <label for=\"tags\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Tags (optional)\n    </label>\n    <input\n      id=\"tags\"\n      type=\"text\"\n      bind:value={tags}\n      placeholder=\"e.g., controversial, personal, explicit (comma-separated)\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n    />\n    <p class=\"mt-1 text-uswds-xs text-uswds-base-darker\">\n      Use tags to organize your DNP list. Separate multiple tags with commas.\n    </p>\n  </div>\n\n  <!-- Note -->\n  <div>\n    <label for=\"note\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Note (optional)\n    </label>\n    <textarea\n      id=\"note\"\n      bind:value={note}\n      rows=\"2\"\n      placeholder=\"Add a personal note about why you're blocking this artist...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n    ></textarea>\n  </div>\n\n  {#if error}\n    <div class=\"text-uswds-red-50 text-uswds-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('artistAdded')}\n      class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isAdding || !searchQuery.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isAdding}\n        <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-2 icon-uswds icon-uswds--sm text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Adding...\n      {:else}\n        Add to DNP List\n      {/if}\n    </button>\n  </div>\n</form>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let entry: any;\n  export let selected = false;\n  \n  let isEditing = false;\n  let editTags = entry.tags.join(', ');\n  let editNote = entry.note || '';\n  let isUpdating = false;\n  let isRemoving = false;\n  let error = '';\n\n  function toggleSelect() {\n    dispatch('toggleSelect');\n  }\n\n  function startEdit() {\n    isEditing = true;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  function cancelEdit() {\n    isEditing = false;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  async function saveEdit() {\n    isUpdating = true;\n    error = '';\n\n    const tagArray = editTags.split(',').map((t: string) => t.trim()).filter((t: string) => t);\n    \n    const result = await dnpActions.updateEntry(\n      entry.artist.id,\n      tagArray,\n      editNote.trim() || undefined\n    );\n\n    if (result.success) {\n      isEditing = false;\n    } else {\n      error = result.message || 'Failed to update entry';\n    }\n\n    isUpdating = false;\n  }\n\n  async function removeArtist() {\n    if (!confirm(`Are you sure you want to remove \"${entry.artist.canonical_name}\" from your DNP list?`)) {\n      return;\n    }\n\n    isRemoving = true;\n    \n    const result = await dnpActions.removeArtist(entry.artist.id);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to remove artist';\n    }\n    \n    isRemoving = false;\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<li class=\"px-4 py-4 sm:px-6 {selected ? 'bg-indigo-50' : 'hover:bg-uswds-base-lightest'}\">\n  <div class=\"flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\n    <!-- Mobile: Checkbox and Actions Row -->\n    <div class=\"flex items-center justify-between sm:hidden\">\n      <input\n        type=\"checkbox\"\n        checked={selected}\n        on:change={toggleSelect}\n        class=\"icon-uswds icon-uswds--sm text-primary focus:ring-indigo-500 border-gray-300 rounded\"\n      />\n      <div class=\"flex items-center space-x-2\">\n        {#if !isEditing}\n          <button\n            on:click={startEdit}\n            class=\"text-indigo-600 hover:text-indigo-900 text-uswds-sm\"\n          >\n            Edit\n          </button>\n          <button\n            on:click={removeArtist}\n            disabled={isRemoving}\n            class=\"text-uswds-red-50 hover:text-red-900 text-uswds-sm disabled:opacity-50\"\n          >\n            {isRemoving ? 'Removing...' : 'Remove'}\n          </button>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Desktop: Checkbox -->\n    <input\n      type=\"checkbox\"\n      checked={selected}\n      on:change={toggleSelect}\n      class=\"hidden sm:block icon-uswds icon-uswds--sm text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded \"\n    />\n\n    <!-- Artist Image -->\n    <div class=\"flex-shrink-0\">\n      {#if entry.artist.metadata.image}\n        <img\n          src={entry.artist.metadata.image}\n          alt={entry.artist.canonical_name}\n          class=\"avatar avatar--xl sm:avatar--lg object-cover\"\n        />\n      {:else}\n        <div class=\"avatar avatar--xl sm:avatar--lg bg-uswds-base-lightest avatar__placeholder\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg sm:icon icon-md sm: text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        </div>\n      {/if}\n    </div>\n\n    <!-- Artist Info -->\n    <div class=\"flex-1 min-w-0\">\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div class=\"flex-1 min-w-0\">\n          <p class=\"text-uswds-sm font-medium text-uswds-base-darker truncate\">\n            {entry.artist.canonical_name}\n          </p>\n          \n          {#if entry.artist.metadata.genres && entry.artist.metadata.genres.length > 0}\n            <p class=\"text-uswds-xs text-uswds-base-darker truncate\">\n              {entry.artist.metadata.genres.slice(0, 2).join(', ')}\n            </p>\n          {/if}\n          \n          <div class=\"flex flex-wrap items-center gap-uswds-2 mt-1\">\n            <!-- Provider Badges -->\n            <div class=\"flex flex-wrap gap-uswds-1\">\n              {#each getProviderBadges(entry.artist) as badge}\n                <span class=\"flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {badge.color}\">\n                  {badge.name}\n                </span>\n              {/each}\n            </div>\n            \n            <!-- Added Date -->\n            <span class=\"text-uswds-xs text-uswds-base-darker whitespace-nowrap\">\n              Added {formatDate(entry.created_at)}\n            </span>\n          </div>\n        </div>\n\n        <!-- Desktop Actions -->\n        <div class=\"hidden sm:flex items-center space-x-2 ml-4\">\n          {#if !isEditing}\n            <button\n              on:click={startEdit}\n              class=\"text-indigo-600 hover:text-indigo-900 text-uswds-sm whitespace-nowrap\"\n            >\n              Edit\n            </button>\n            <button\n              on:click={removeArtist}\n              disabled={isRemoving}\n              class=\"text-uswds-red-50 hover:text-red-900 text-uswds-sm disabled:opacity-50 whitespace-nowrap\"\n            >\n              {isRemoving ? 'Removing...' : 'Remove'}\n            </button>\n          {/if}\n        </div>\n      </div>\n\n      <!-- Tags and Note Display -->\n      {#if !isEditing}\n        <div class=\"mt-2\">\n          {#if entry.tags.length > 0}\n            <div class=\"flex flex-wrap gap-uswds-1 mb-2\">\n              {#each entry.tags as tag}\n                <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-uswds-xs font-medium bg-uswds-base-lightest text-uswds-base-darker\">\n                  {tag}\n                </span>\n              {/each}\n            </div>\n          {/if}\n          \n          {#if entry.note}\n            <p class=\"text-uswds-sm text-uswds-base-darker italic\">\n              \"{entry.note}\"\n            </p>\n          {/if}\n        </div>\n      {/if}\n\n      <!-- Edit Form -->\n      {#if isEditing}\n        <div class=\"mt-3 space-y-3 sm:mt-4\">\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-uswds-3\">\n            <div>\n              <label for=\"edit-tags-{entry.artist.id}\" class=\"block text-uswds-xs font-medium text-uswds-base-darker\">Tags</label>\n              <input\n                id=\"edit-tags-{entry.artist.id}\"\n                type=\"text\"\n                bind:value={editTags}\n                placeholder=\"comma-separated tags\"\n                class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-2 py-1 text-uswds-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n            \n            <div class=\"sm:col-span-2\">\n              <label for=\"edit-note-{entry.artist.id}\" class=\"block text-uswds-xs font-medium text-uswds-base-darker\">Note</label>\n              <textarea\n                id=\"edit-note-{entry.artist.id}\"\n                bind:value={editNote}\n                rows=\"2\"\n                placeholder=\"Personal note...\"\n                class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-2 py-1 text-uswds-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              ></textarea>\n            </div>\n          </div>\n\n          {#if error}\n            <p class=\"text-uswds-xs text-uswds-red-50\">{error}</p>\n          {/if}\n\n          <div class=\"flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-2\">\n            <button\n              type=\"button\"\n              on:click={cancelEdit}\n              class=\"w-full sm:w-auto px-3 py-2 sm:py-1 border border-gray-300 rounded-uswds-md text-uswds-sm sm:text-uswds-xs font-medium text-uswds-base-darker bg-white hover:bg-uswds-base-lightest\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={saveEdit}\n              disabled={isUpdating}\n              class=\"w-full sm:w-auto px-3 py-2 sm:py-1 border border-transparent rounded-uswds-md text-uswds-sm sm:text-uswds-xs font-medium text-white bg-primary hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {isUpdating ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</li>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let selectedCount = 0;\n  \n  function handleBulkDelete() {\n    dispatch('bulkDelete');\n  }\n  \n  function handleClearSelection() {\n    dispatch('clearSelection');\n  }\n</script>\n\n<div class=\"bg-indigo-50 border border-indigo-200 rounded-uswds-md p-uswds-4\">\n  <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\n    <div class=\"flex items-center\">\n      <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-indigo-400 \" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <p class=\"ml-3 text-uswds-sm text-indigo-800\">\n        <span class=\"font-medium\">{selectedCount}</span>\n        {selectedCount === 1 ? 'artist' : 'artists'} selected\n      </p>\n    </div>\n    \n    <div class=\"flex flex-col sm:flex-row items-stretch sm:items-center space-y-2 sm:space-y-0 sm:space-x-3\">\n      <button\n        on:click={handleClearSelection}\n        class=\"text-uswds-sm text-primary hover:text-indigo-500 text-center sm:text-left\"\n      >\n        Clear selection\n      </button>\n      \n      <button\n        on:click={handleBulkDelete}\n        class=\"flex items-center justify-center px-3 py-2 border border-transparent text-uswds-sm leading-4 font-medium rounded-uswds-md text-uswds-red-50 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n      >\n        <svg aria-hidden=\"true\" class=\"-ml-0.5 mr-2 icon-uswds icon-uswds--sm\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n        </svg>\n        Remove selected\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { dnpActions, dnpStore, dnpTags } from '../stores/dnp';\n  import ArtistSearch from './ArtistSearch.svelte';\n  import DnpEntry from './DnpEntry.svelte';\n  import BulkActions from './BulkActions.svelte';\n  \n  let searchQuery = '';\n  let selectedTag = '';\n  let showAddForm = false;\n  let selectedEntries = new Set();\n\n  $: filteredEntries = $dnpStore.entries.filter(entry => {\n    const matchesSearch = !searchQuery || \n      entry.artist.canonical_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      entry.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase())) ||\n      (entry.note && entry.note.toLowerCase().includes(searchQuery.toLowerCase()));\n    \n    const matchesTag = !selectedTag || entry.tags.includes(selectedTag);\n    \n    return matchesSearch && matchesTag;\n  });\n\n  function toggleSelectAll() {\n    if (selectedEntries.size === filteredEntries.length) {\n      selectedEntries.clear();\n    } else {\n      selectedEntries = new Set(filteredEntries.map(entry => entry.artist.id));\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function toggleSelectEntry(artistId: string) {\n    if (selectedEntries.has(artistId)) {\n      selectedEntries.delete(artistId);\n    } else {\n      selectedEntries.add(artistId);\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function clearSelection() {\n    selectedEntries.clear();\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  async function handleBulkDelete() {\n    if (selectedEntries.size === 0) return;\n    \n    if (confirm(`Are you sure you want to remove ${selectedEntries.size} artist(s) from your DNP list?`)) {\n      const promises = Array.from(selectedEntries).map((artistId: any) => \n        dnpActions.removeArtist(artistId as string)\n      );\n      \n      await Promise.all(promises);\n      clearSelection();\n    }\n  }\n\n  function handleArtistAdded() {\n    showAddForm = false;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">Do-Not-Play List</h2>\n        <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n          Manage artists you want to avoid across your streaming services.\n        </p>\n      </div>\n      <button\n        on:click={() => showAddForm = !showAddForm}\n        class=\"flex items-center px-4 py-2 border border-transparent text-uswds-sm font-medium rounded-uswds-md shadow-sm text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Add Artist\n      </button>\n    </div>\n  </div>\n\n  <!-- Add Artist Form -->\n  {#if showAddForm}\n    <div class=\"mb-6 bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">Add Artist to DNP List</h3>\n      <ArtistSearch on:artistAdded={handleArtistAdded} />\n    </div>\n  {/if}\n\n  <!-- Filters and Search -->\n  <div class=\"mb-6 bg-white shadow rounded-uswds-lg p-uswds-4\">\n    <div class=\"flex flex-col sm:flex-row gap-uswds-4\">\n      <div class=\"flex-1\">\n        <label for=\"search\" class=\"sr-only\">Search artists</label>\n        <div class=\"relative\">\n          <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <input\n            id=\"search\"\n            bind:value={searchQuery}\n            type=\"text\"\n            placeholder=\"Search artists, tags, or notes...\"\n            class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-uswds-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"sm:w-48\">\n        <label for=\"tag-filter\" class=\"sr-only\">Filter by tag</label>\n        <select\n          id=\"tag-filter\"\n          bind:value={selectedTag}\n          class=\"block w-full pl-3 pr-10 py-2 text-uswds-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm rounded-uswds-md\"\n        >\n          <option value=\"\">All tags</option>\n          {#each $dnpTags as tag}\n            <option value={tag}>{tag}</option>\n          {/each}\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bulk Actions -->\n  {#if selectedEntries.size > 0}\n    <div class=\"mb-4\">\n      <BulkActions \n        selectedCount={selectedEntries.size}\n        on:bulkDelete={handleBulkDelete}\n        on:clearSelection={clearSelection}\n      />\n    </div>\n  {/if}\n\n  <!-- DNP List -->\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-uswds-md\">\n    {#if $dnpStore.isLoading}\n      <div class=\"p-uswds-6 text-center\">\n        <svg aria-hidden=\"true\" class=\"animate-spin mx-auto icon-uswds icon-uswds--lg text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">Loading DNP list...</p>\n      </div>\n    {:else if $dnpStore.error}\n      <div class=\"p-uswds-6 text-center\">\n        <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--lg text-uswds-red-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <p class=\"mt-2 text-uswds-sm text-uswds-red-50\">{$dnpStore.error}</p>\n        <button\n          on:click={() => dnpActions.fetchDnpList()}\n          class=\"mt-2 text-uswds-sm text-primary hover:text-indigo-500\"\n        >\n          Try again\n        </button>\n      </div>\n    {:else if filteredEntries.length === 0}\n      <div class=\"p-uswds-6 text-center\">\n        {#if $dnpStore.entries.length === 0}\n          <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n          </svg>\n          <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No artists in your DNP list</h3>\n          <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Get started by adding artists you want to avoid.</p>\n          <div class=\"mt-6\">\n            <button\n              on:click={() => showAddForm = true}\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-uswds-sm font-medium rounded-uswds-md text-white btn btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add your first artist\n            </button>\n          </div>\n        {:else}\n          <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n          <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No artists match your search</h3>\n          <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Try adjusting your search terms or filters.</p>\n        {/if}\n      </div>\n    {:else}\n      <div class=\"px-4 py-3 bg-uswds-base-lightest border-b border-gray-200 sm:px-6\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <input\n              id=\"select-all\"\n              type=\"checkbox\"\n              checked={selectedEntries.size === filteredEntries.length && filteredEntries.length > 0}\n              on:change={toggleSelectAll}\n              class=\"icon-uswds icon-uswds--sm text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            />\n            <label for=\"select-all\" class=\"ml-3 text-uswds-sm text-uswds-base-darker\">\n              {filteredEntries.length} artist{filteredEntries.length !== 1 ? 's' : ''}\n              {#if selectedEntries.size > 0}\n                ({selectedEntries.size} selected)\n              {/if}\n            </label>\n          </div>\n          \n          {#if searchQuery || selectedTag}\n            <button\n              on:click={() => { searchQuery = ''; selectedTag = ''; }}\n              class=\"text-uswds-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Clear filters\n            </button>\n          {/if}\n        </div>\n      </div>\n      \n      <ul class=\"divide-y divide-gray-200\">\n        {#each filteredEntries as entry (entry.artist.id)}\n          <DnpEntry \n            {entry}\n            selected={selectedEntries.has(entry.artist.id)}\n            on:toggleSelect={() => toggleSelectEntry(entry.artist.id)}\n          />\n        {/each}\n      </ul>\n    {/if}\n  </div>\n\n  <!-- Stats -->\n  {#if $dnpStore.entries.length > 0}\n    <div class=\"mt-6 bg-uswds-base-lightest rounded-uswds-lg p-uswds-4\">\n      <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-3\">\n        <div class=\"text-center\">\n          <div class=\"text-uswds-2xl font-bold text-uswds-base-darker\">{$dnpStore.entries.length}</div>\n          <div class=\"text-uswds-sm text-uswds-base-darker\">Total Artists</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-uswds-2xl font-bold text-uswds-base-darker\">{$dnpTags.length}</div>\n          <div class=\"text-uswds-sm text-uswds-base-darker\">Unique Tags</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-uswds-2xl font-bold text-uswds-base-darker\">\n            {$dnpStore.entries.filter(e => e.note).length}\n          </div>\n          <div class=\"text-uswds-sm text-uswds-base-darker\">With Notes</div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst defaultOptions = {\n    aggressiveness: 'moderate',\n    blockCollabs: true,\n    blockFeaturing: true,\n    blockSongwriterOnly: false,\n};\nconst initialState = {\n    currentPlan: null,\n    isPlanning: false,\n    isExecuting: false,\n    currentBatch: null,\n    actionHistory: [],\n    options: defaultOptions,\n    error: null,\n};\nexport const enforcementStore = writable(initialState);\nexport const hasActivePlan = derived(enforcementStore, ($enforcement) => $enforcement.currentPlan !== null);\nexport const executionProgress = derived(enforcementStore, ($enforcement) => {\n    if (!$enforcement.currentBatch)\n        return null;\n    const { totalItems, completedItems, failedItems, skippedItems } = $enforcement.currentBatch.summary;\n    const processedItems = completedItems + failedItems + skippedItems;\n    return {\n        total: totalItems,\n        processed: processedItems,\n        completed: completedItems,\n        failed: failedItems,\n        skipped: skippedItems,\n        percentage: totalItems > 0 ? Math.round((processedItems / totalItems) * 100) : 0,\n    };\n});\nexport const canRollback = derived(enforcementStore, ($enforcement) => $enforcement.actionHistory.some(batch => batch.status === 'completed' && batch.items.some(item => item.status === 'completed')));\n// Enforcement actions\nexport const enforcementActions = {\n    updateOptions: (options) => {\n        enforcementStore.update(state => ({\n            ...state,\n            options: { ...state.options, ...options },\n        }));\n    },\n    createPlan: async (providers, dryRun = true) => {\n        let currentOptions = defaultOptions;\n        enforcementStore.update(state => {\n            currentOptions = state.options;\n            return { ...state, isPlanning: true, error: null };\n        });\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/library/plan', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    providers,\n                    options: currentOptions,\n                    dryRun,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentPlan: result.data,\n                    isPlanning: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isPlanning: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to create enforcement plan',\n                isPlanning: false,\n            }));\n            return { success: false, message: 'Failed to create enforcement plan' };\n        }\n    },\n    executePlan: async (planId) => {\n        enforcementStore.update(state => ({ ...state, isExecuting: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/execute', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    planId,\n                    dryRun: false,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                const batch = result.data;\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentBatch: batch,\n                    isExecuting: false,\n                }));\n                // Start polling for progress\n                enforcementActions.pollProgress(batch.id);\n                return { success: true, data: batch };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isExecuting: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to execute enforcement plan',\n                isExecuting: false,\n            }));\n            return { success: false, message: 'Failed to execute enforcement plan' };\n        }\n    },\n    pollProgress: async (batchId) => {\n        const pollInterval = setInterval(async () => {\n            try {\n                const token = localStorage.getItem('auth_token');\n                const response = await fetch(`http://localhost:3000/api/v1/spotify/enforcement/progress/${batchId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n                const result = await response.json();\n                if (result.success) {\n                    const batch = result.data;\n                    enforcementStore.update(state => ({\n                        ...state,\n                        currentBatch: batch,\n                    }));\n                    // Stop polling if batch is complete\n                    if (batch.status === 'completed' || batch.status === 'failed' || batch.status === 'cancelled') {\n                        clearInterval(pollInterval);\n                        // Move to history\n                        enforcementStore.update(state => ({\n                            ...state,\n                            actionHistory: [batch, ...state.actionHistory],\n                            currentBatch: null,\n                            currentPlan: null,\n                        }));\n                    }\n                }\n            }\n            catch (error) {\n                console.error('Failed to poll progress:', error);\n            }\n        }, 2000); // Poll every 2 seconds\n    },\n    rollbackBatch: async (batchId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/rollback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ batchId }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh action history\n                await enforcementActions.fetchActionHistory();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to rollback actions' };\n        }\n    },\n    fetchActionHistory: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/history', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    actionHistory: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch action history:', error);\n        }\n    },\n    clearPlan: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            currentPlan: null,\n            error: null,\n        }));\n    },\n    clearError: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            error: null,\n        }));\n    },\n};\n","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore } from '../stores/enforcement';\n  \n  $: options = $enforcementStore.options;\n\n  function updateAggressiveness(level: 'conservative' | 'moderate' | 'aggressive') {\n    enforcementActions.updateOptions({ aggressiveness: level });\n  }\n\n  function toggleOption(option: keyof typeof options) {\n    enforcementActions.updateOptions({ [option]: !options[option] });\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <!-- Aggressiveness Level -->\n  <div>\n    <h4 class=\"text-uswds-base font-medium text-uswds-base-darker\">Enforcement Aggressiveness</h4>\n    <p class=\"text-uswds-sm leading-5 text-uswds-base-darker\">\n      Choose how thoroughly to apply your blocklist across your music library.\n    </p>\n    <fieldset class=\"mt-4\">\n      <legend class=\"sr-only\">Aggressiveness level</legend>\n      <div class=\"space-y-4\">\n        <div class=\"flex items-center\">\n          <input\n            id=\"conservative\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'conservative'}\n            on:change={() => updateAggressiveness('conservative')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-primary border-gray-300\"\n          />\n          <label for=\"conservative\" class=\"ml-3 block text-uswds-sm font-medium text-uswds-base-darker\">\n            Conservative\n          </label>\n        </div>\n        <div class=\"ml-7 text-uswds-sm text-uswds-base-darker\">\n          Only remove explicitly saved/liked content. Preserves playlists and recommendations.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"moderate\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'moderate'}\n            on:change={() => updateAggressiveness('moderate')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300\"\n          />\n          <label for=\"moderate\" class=\"ml-3 block text-uswds-sm font-medium text-uswds-base-darker\">\n            Moderate (Recommended)\n          </label>\n        </div>\n        <div class=\"ml-7 text-uswds-sm text-uswds-base-darker\">\n          Remove from saved content and playlists. Filters recommendations where possible.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"aggressive\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'aggressive'}\n            on:change={() => updateAggressiveness('aggressive')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300\"\n          />\n          <label for=\"aggressive\" class=\"ml-3 block text-uswds-sm font-medium text-uswds-base-darker\">\n            Aggressive\n          </label>\n        </div>\n        <div class=\"ml-7 text-uswds-sm text-uswds-base-darker\">\n          Maximum removal including radio seeds, recommendations, and related content.\n        </div>\n      </div>\n    </fieldset>\n  </div>\n\n  <!-- Collaboration and Featuring Options -->\n  <div>\n    <h4 class=\"text-uswds-base font-medium text-uswds-base-darker\">Collaboration Handling</h4>\n    <p class=\"text-uswds-sm leading-5 text-uswds-base-darker\">\n      Configure how to handle songs where blocked artists appear as collaborators or featured artists.\n    </p>\n    <div class=\"mt-4 space-y-4\">\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center icon icon-md\">\n          <input\n            id=\"block-collabs\"\n            type=\"checkbox\"\n            checked={options.blockCollabs}\n            on:change={() => toggleOption('blockCollabs')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-uswds-sm\">\n          <label for=\"block-collabs\" class=\"font-medium text-uswds-base-darker\">\n            Block collaborations\n          </label>\n          <p class=\"text-uswds-base-darker\">\n            Remove songs where blocked artists are listed as collaborators or co-writers.\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-featuring\"\n            type=\"checkbox\"\n            checked={options.blockFeaturing}\n            on:change={() => toggleOption('blockFeaturing')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-uswds-sm\">\n          <label for=\"block-featuring\" class=\"font-medium text-uswds-base-darker\">\n            Block featuring\n          </label>\n          <p class=\"text-uswds-base-darker\">\n            Remove songs where blocked artists are featured (e.g., \"Song Title (feat. Blocked Artist)\").\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-songwriter-only\"\n            type=\"checkbox\"\n            checked={options.blockSongwriterOnly}\n            on:change={() => toggleOption('blockSongwriterOnly')}\n            class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-uswds-sm\">\n          <label for=\"block-songwriter-only\" class=\"font-medium text-uswds-base-darker\">\n            Block songwriter credits only\n          </label>\n          <p class=\"text-uswds-base-darker\">\n            Remove songs where blocked artists are credited only as songwriters (most restrictive).\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Warning for Aggressive Settings -->\n  {#if options.aggressiveness === 'aggressive' || options.blockSongwriterOnly}\n    <div class=\"bg-yellow-50 border border-yellow-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <div class=\"\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-uswds-sm font-medium text-yellow-800\">\n            Aggressive Settings Warning\n          </h3>\n          <div class=\"mt-2 text-uswds-sm text-yellow-700\">\n            <p>\n              These settings may remove a significant amount of content from your library. \n              We recommend reviewing the enforcement preview carefully before executing.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementStore } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  \n  function formatDuration(duration: string) {\n    const seconds = parseInt(duration.replace('s', ''));\n    if (seconds < 60) return `${seconds} seconds`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  }\n\n  function getProviderIcon(provider: string) {\n    switch (provider) {\n      case 'spotify':\n        return 'M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z';\n      default:\n        return 'M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1';\n    }\n  }\n\n  function getCapabilityColor(capability: string) {\n    switch (capability) {\n      case 'SUPPORTED':\n        return 'text-green-600 bg-green-100';\n      case 'LIMITED':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'UNSUPPORTED':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n{#if plan}\n  <div class=\"space-y-6\">\n    <!-- Plan Summary -->\n    <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-4\">\n      <div class=\"flex items-center justify-between\">\n        <div>\n          <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker\">Plan Summary</h4>\n          <p class=\"text-uswds-sm text-uswds-base-darker\">\n            Estimated duration: {formatDuration(plan.estimatedDuration)}\n            {#if plan.resumable}\n              • Resumable if interrupted\n            {/if}\n          </p>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">Plan ID</div>\n          <div class=\"text-uswds-xs text-uswds-base-darker font-mono\">{plan.planId.slice(0, 8)}...</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Provider Impact -->\n    {#each Object.entries(plan.impact) as [provider, impact]}\n      <div class=\"border border-gray-200 rounded-uswds-lg p-uswds-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"\">\n            <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-uswds-green-50\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d={getProviderIcon(provider)} />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <h4 class=\"text-uswds-lg font-medium text-uswds-base-darker capitalize\">{provider}</h4>\n            <p class=\"text-uswds-sm text-uswds-base-darker\">Impact preview for your {provider} library</p>\n          </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-2 lg:grid-cols-4\">\n          <!-- Liked Songs -->\n          {#if impact.likedSongs}\n            <div class=\"bg-white border border-gray-200 rounded-uswds-lg p-uswds-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-uswds-red-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Liked Songs</p>\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    {impact.likedSongs.toRemove} to remove\n                    {#if impact.likedSongs.collabsFound > 0}\n                      <br /><span class=\"text-uswds-xs\">({impact.likedSongs.collabsFound} collaborations)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Playlists -->\n          {#if impact.playlists}\n            <div class=\"bg-white border border-gray-200 rounded-uswds-lg p-uswds-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-uswds-blue-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Playlists</p>\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    {impact.playlists.toScrub} playlists affected\n                    <br /><span class=\"text-uswds-xs\">{impact.playlists.tracksToRemove} tracks to remove</span>\n                    {#if impact.playlists.featuringFound > 0}\n                      <br /><span class=\"text-uswds-xs\">({impact.playlists.featuringFound} featuring)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Following -->\n          {#if impact.following}\n            <div class=\"bg-white border border-gray-200 rounded-uswds-lg p-uswds-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Following</p>\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    {impact.following.toUnfollow} to unfollow\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Radio Seeds -->\n          {#if impact.radioSeeds}\n            <div class=\"bg-white border border-gray-200 rounded-uswds-lg p-uswds-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--lg text-orange-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2M7 4h10\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">Radio Seeds</p>\n                  <p class=\"text-uswds-sm text-uswds-base-darker\">\n                    {impact.radioSeeds.toFilter} to filter\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Capabilities -->\n        {#if plan.capabilities[provider]}\n          <div class=\"mt-4 pt-4 border-t border-gray-200\">\n            <h5 class=\"text-uswds-sm font-medium text-uswds-base-darker mb-2\">Platform Capabilities</h5>\n            <div class=\"flex flex-wrap gap-uswds-2\">\n              {#each Object.entries(plan.capabilities[provider]) as [capability, support]}\n                <span class=\"flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium {getCapabilityColor(support)}\">\n                  {capability.replace(/_/g, ' ').toLowerCase()}\n                </span>\n              {/each}\n            </div>\n          </div>\n        {/if}\n      </div>\n    {/each}\n\n    <!-- Important Notes -->\n    <div class=\"bg-uswds-blue-50 border border-blue-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-blue-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-uswds-sm font-medium text-uswds-blue-50\">\n            Before You Execute\n          </h3>\n          <div class=\"mt-2 text-uswds-sm text-uswds-blue-50\">\n            <ul class=\"list-disc list-inside space-y-1\">\n              <li>This is a preview - no changes have been made yet</li>\n              <li>Execution will modify your actual music library</li>\n              <li>Some actions may not be reversible depending on platform limitations</li>\n              <li>The process can be interrupted and resumed if needed</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-6\">\n    <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n    </svg>\n    <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No enforcement plan</h3>\n    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Create a plan to see the preview.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, executionProgress } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  $: currentBatch = $enforcementStore.currentBatch;\n  $: progress = $executionProgress;\n\n  async function executePlan() {\n    if (!plan) return;\n    \n    const confirmed = confirm(\n      'Are you sure you want to execute this enforcement plan? This will modify your music library and some changes may not be reversible.'\n    );\n    \n    if (confirmed) {\n      await enforcementActions.executePlan(plan.planId);\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function getActionIcon(action: string) {\n    switch (action) {\n      case 'remove_liked_song':\n        return 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z';\n      case 'remove_playlist_track':\n        return 'M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3';\n      case 'unfollow_artist':\n        return 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z';\n      default:\n        return 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z';\n    }\n  }\n\n\n</script>\n\n<div class=\"space-y-6\">\n  {#if !plan}\n    <!-- No Plan Available -->\n    <div class=\"text-center py-12\">\n      <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n      </svg>\n      <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No enforcement plan available</h3>\n      <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Create a plan first to execute enforcement.</p>\n    </div>\n  {:else if currentBatch}\n    <!-- Execution in Progress -->\n    <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Enforcement Execution</h3>\n          <p class=\"text-uswds-sm text-uswds-base-darker\">\n            Batch ID: <span class=\"font-mono\">{currentBatch.id.slice(0, 8)}...</span>\n          </p>\n        </div>\n        <span class=\"flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium {getStatusColor(currentBatch.status)}\">\n          {currentBatch.status}\n        </span>\n      </div>\n\n      <!-- Progress Bar -->\n      {#if progress}\n        <div class=\"mb-6\">\n          <div class=\"flex justify-between text-uswds-sm text-uswds-base-darker mb-2\">\n            <span>Progress</span>\n            <span>{progress.processed} / {progress.total} ({progress.percentage}%)</span>\n          </div>\n          <div class=\"w-full bg-uswds-base-lightest rounded-full h-2\">\n            <div \n              class=\"bg-primary h-2 rounded-full transition-all duration-300\"\n              style=\"width: {progress.percentage}%\"\n            ></div>\n          </div>\n          <div class=\"flex justify-between text-uswds-xs text-uswds-base-darker mt-1\">\n            <span>{progress.completed} completed</span>\n            <span>{progress.failed} failed</span>\n            <span>{progress.skipped} skipped</span>\n          </div>\n        </div>\n      {/if}\n\n      <!-- Batch Summary -->\n      <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-4 mb-6\">\n        <div class=\"bg-uswds-base-lightest rounded-uswds-lg p-uswds-3 text-center\">\n          <div class=\"text-uswds-lg font-semibold text-uswds-base-darker\">{currentBatch.summary.totalItems}</div>\n          <div class=\"text-uswds-xs text-uswds-base-darker\">Total Items</div>\n        </div>\n        <div class=\"bg-green-50 rounded-uswds-lg p-uswds-3 text-center\">\n          <div class=\"text-uswds-lg font-semibold text-uswds-green-50\">{currentBatch.summary.completedItems}</div>\n          <div class=\"text-uswds-xs text-uswds-base-darker\">Completed</div>\n        </div>\n        <div class=\"bg-red-50 rounded-uswds-lg p-uswds-3 text-center\">\n          <div class=\"text-uswds-lg font-semibold text-uswds-red-50\">{currentBatch.summary.failedItems}</div>\n          <div class=\"text-uswds-xs text-uswds-base-darker\">Failed</div>\n        </div>\n        <div class=\"bg-yellow-50 rounded-uswds-lg p-uswds-3 text-center\">\n          <div class=\"text-uswds-lg font-semibold text-warning\">{currentBatch.summary.skippedItems}</div>\n          <div class=\"text-uswds-xs text-uswds-base-darker\">Skipped</div>\n        </div>\n      </div>\n\n      <!-- Recent Actions -->\n      {#if currentBatch.items.length > 0}\n        <div>\n          <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker mb-3\">Recent Actions</h4>\n          <div class=\"space-y-2 max-h-64 overflow-y-auto\">\n            {#each currentBatch.items.slice(0, 10) as item}\n              <div class=\"flex items-center justify-between py-2 px-3 bg-uswds-base-lightest rounded-uswds-md\">\n                <div class=\"flex items-center space-x-3\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--sm text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d={getActionIcon(item.action)} />\n                  </svg>\n                  <div>\n                    <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                      {item.action.replace(/_/g, ' ')}\n                    </div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">\n                      {item.entityType}: {item.entityId.slice(0, 20)}...\n                    </div>\n                  </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"inline-flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {getStatusColor(item.status)}\">\n                    {item.status}\n                  </span>\n                  {#if item.status === 'failed' && item.errorMessage}\n                    <button\n                      title={item.errorMessage}\n                      class=\"text-uswds-red-50 hover:text-error\"\n                    >\n                      <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--sm\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </button>\n                  {/if}\n                </div>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else}\n    <!-- Ready to Execute -->\n    <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <div class=\"text-center\">\n        <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <h3 class=\"mt-2 text-uswds-lg font-medium text-uswds-base-darker\">Ready to Execute</h3>\n        <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n          Your enforcement plan is ready. Click execute to apply changes to your music library.\n        </p>\n        \n        <div class=\"mt-6\">\n          <button\n            on:click={executePlan}\n            disabled={$enforcementStore.isExecuting}\n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-uswds-base font-medium rounded-uswds-md shadow-sm text-white bg-error hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isExecuting}\n              <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-3 icon-uswds icon-uswds--md text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Starting Execution...\n            {:else}\n              <svg aria-hidden=\"true\" class=\"-ml-1 mr-3 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Execute Enforcement Plan\n            {/if}\n          </button>\n        </div>\n\n        <div class=\"mt-4 text-uswds-xs text-uswds-base-darker\">\n          <p>⚠️ This action will modify your music library</p>\n          <p>Some changes may not be reversible</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Error Display -->\n  {#if $enforcementStore.error}\n    <div class=\"bg-red-50 border border-red-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <div class=\"\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-uswds-sm text-uswds-red-50\">{$enforcementStore.error}</p>\n          <button\n            on:click={() => enforcementActions.clearError()}\n            class=\"mt-2 text-uswds-sm text-uswds-red-50 hover:text-red-500\"\n          >\n            Dismiss\n          </button>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, canRollback } from '../stores/enforcement';\n  \n  $: actionHistory = $enforcementStore.actionHistory;\n\n  async function rollbackBatch(batchId: string) {\n    const confirmed = confirm(\n      'Are you sure you want to rollback this batch? This will attempt to undo the changes made during this enforcement.'\n    );\n    \n    if (confirmed) {\n      const result = await enforcementActions.rollbackBatch(batchId);\n      if (!result.success) {\n        alert(`Rollback failed: ${result.message}`);\n      }\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleString();\n  }\n\n  function getSuccessRate(batch: any) {\n    const total = batch.summary.totalItems;\n    const completed = batch.summary.completedItems;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div class=\"flex justify-between items-center\">\n    <div>\n      <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Action History</h3>\n      <p class=\"text-uswds-sm text-uswds-base-darker\">\n        View and manage your past enforcement executions.\n      </p>\n    </div>\n    \n    {#if $canRollback}\n      <div class=\"text-uswds-sm text-uswds-base-darker\">\n        <svg aria-hidden=\"true\" class=\"inline icon-uswds icon-uswds--sm text-uswds-green-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        Rollback available\n      </div>\n    {/if}\n  </div>\n\n  {#if actionHistory.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No enforcement history</h3>\n      <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n        Your enforcement executions will appear here after you run them.\n      </p>\n    </div>\n  {:else}\n    <!-- History List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-uswds-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each actionHistory as batch}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"\">\n                    <svg class=\"icon-uswds icon-uswds--xl icon-uswds--success\" fill=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                      <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                    </svg>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-uswds-sm font-medium text-uswds-base-darker capitalize\">\n                        {batch.provider} Enforcement\n                      </p>\n                      <span class=\"ml-2 flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium {getStatusColor(batch.status)}\">\n                        {batch.status}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-uswds-sm text-uswds-base-darker\">\n                      <p>\n                        Executed {formatDate(batch.createdAt)}\n                        {#if batch.completedAt}\n                          • Completed {formatDate(batch.completedAt)}\n                        {/if}\n                      </p>\n                    </div>\n                    <div class=\"mt-1 text-uswds-xs text-uswds-base-darker\">\n                      Batch ID: <span class=\"font-mono\">{batch.id.slice(0, 8)}...</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-4\">\n                  <!-- Stats -->\n                  <div class=\"text-right\">\n                    <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                      {getSuccessRate(batch)}% success\n                    </div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">\n                      {batch.summary.completedItems} / {batch.summary.totalItems} items\n                    </div>\n                  </div>\n                  \n                  <!-- Actions -->\n                  {#if batch.status === 'completed' && batch.summary.completedItems > 0}\n                    <button\n                      on:click={() => rollbackBatch(batch.id)}\n                      class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-uswds-sm leading-4 font-medium rounded-uswds-md text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      <svg aria-hidden=\"true\" class=\"-ml-0.5 mr-2 icon-uswds icon-uswds--sm\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" />\n                      </svg>\n                      Rollback\n                    </button>\n                  {/if}\n                </div>\n              </div>\n              \n              <!-- Detailed Stats -->\n              <div class=\"mt-4\">\n                <div class=\"grid grid-cols-2 gap-uswds-4 sm:grid-cols-4\">\n                  <div class=\"text-center\">\n                    <div class=\"text-uswds-lg font-semibold text-uswds-base-darker\">{batch.summary.totalItems}</div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">Total</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-uswds-lg font-semibold text-uswds-green-50\">{batch.summary.completedItems}</div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">Completed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-uswds-lg font-semibold text-uswds-red-50\">{batch.summary.failedItems}</div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">Failed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-uswds-lg font-semibold text-warning\">{batch.summary.skippedItems}</div>\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">Skipped</div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Options Used -->\n              <div class=\"mt-3 pt-3 border-t border-gray-200\">\n                <div class=\"text-uswds-xs text-uswds-base-darker\">\n                  <span class=\"font-medium\">Options:</span>\n                  {batch.options.aggressiveness} aggressiveness\n                  {#if batch.options.blockCollabs}, block collaborations{/if}\n                  {#if batch.options.blockFeaturing}, block featuring{/if}\n                  {#if batch.options.blockSongwriterOnly}, block songwriter credits{/if}\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"bg-uswds-blue-50 border border-blue-200 rounded-uswds-md p-uswds-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-blue-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-uswds-sm font-medium text-uswds-blue-50\">\n          About Rollbacks\n        </h3>\n        <div class=\"mt-2 text-uswds-sm text-uswds-blue-50\">\n          <p>\n            Rollback attempts to undo changes made during enforcement. Success depends on platform capabilities:\n          </p>\n          <ul class=\"list-disc list-inside mt-1 space-y-1\">\n            <li>Re-adding liked songs and follows: Usually successful</li>\n            <li>Re-adding playlist tracks: May not preserve original order</li>\n            <li>Radio seed changes: May not be fully reversible</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { enforcementActions, enforcementStore, hasActivePlan } from '../stores/enforcement';\n  import { hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpCount } from '../stores/dnp';\n  import EnforcementOptions from './EnforcementOptions.svelte';\n  import EnforcementPreview from './EnforcementPreview.svelte';\n  import EnforcementExecution from './EnforcementExecution.svelte';\n  import ActionHistory from './ActionHistory.svelte';\n  \n  let activeTab = 'plan';\n  \n  onMount(() => {\n    enforcementActions.fetchActionHistory();\n  });\n\n  async function createPlan() {\n    const providers = [];\n    if ($hasActiveSpotifyConnection) {\n      providers.push('spotify');\n    }\n    \n    if (providers.length === 0) {\n      return;\n    }\n    \n    await enforcementActions.createPlan(providers, true);\n  }\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">Enforcement Planning</h2>\n    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n      Plan and execute blocklist enforcement across your connected streaming services.\n    </p>\n  </div>\n\n  <!-- Prerequisites Check -->\n  {#if !$hasActiveSpotifyConnection || $dnpCount === 0}\n    <div class=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <div class=\"\">\n          <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-uswds-sm font-medium text-yellow-800\">\n            Setup Required\n          </h3>\n          <div class=\"mt-2 text-uswds-sm text-yellow-700\">\n            <p>Before you can plan enforcement, you need:</p>\n            <ul class=\"list-disc list-inside mt-1 space-y-1\">\n              {#if !$hasActiveSpotifyConnection}\n                <li>Connect at least one streaming service (Spotify)</li>\n              {/if}\n              {#if $dnpCount === 0}\n                <li>Add artists to your Do-Not-Play list</li>\n              {/if}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-uswds-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('plan')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'plan' ? 'border-indigo-500 text-primary' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Plan Enforcement\n      </button>\n      <button\n        on:click={() => setActiveTab('execute')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'execute' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n        disabled={!$hasActivePlan}\n      >\n        Execute Plan\n      </button>\n      <button\n        on:click={() => setActiveTab('history')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'history' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Action History\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'plan'}\n    <div class=\"space-y-6\">\n      <!-- Enforcement Options -->\n      <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">Enforcement Options</h3>\n        <EnforcementOptions />\n      </div>\n\n      <!-- Current Plan Preview -->\n      {#if $hasActivePlan}\n        <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Enforcement Preview</h3>\n            <button\n              on:click={() => enforcementActions.clearPlan()}\n              class=\"text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n            >\n              Clear Plan\n            </button>\n          </div>\n          <EnforcementPreview />\n        </div>\n      {:else}\n        <!-- Create Plan -->\n        <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n          <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">Create Enforcement Plan</h3>\n          <p class=\"text-uswds-sm text-uswds-base-darker mb-4\">\n            Generate a dry-run preview to see what changes will be made to your music library.\n          </p>\n          \n          <button\n            on:click={createPlan}\n            disabled={$enforcementStore.isPlanning || !$hasActiveSpotifyConnection || $dnpCount === 0}\n            class=\"flex items-center px-4 py-2 border border-transparent text-uswds-sm font-medium rounded-uswds-md shadow-sm text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isPlanning}\n              <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-2 icon-uswds icon-uswds--sm text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Creating Plan...\n            {:else}\n              <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n              </svg>\n              Create Enforcement Plan\n            {/if}\n          </button>\n        </div>\n      {/if}\n\n      <!-- Error Display -->\n      {#if $enforcementStore.error}\n        <div class=\"bg-red-50 border border-red-200 rounded-uswds-md p-uswds-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-uswds-sm text-uswds-red-50\">{$enforcementStore.error}</p>\n              <button\n                on:click={() => enforcementActions.clearError()}\n                class=\"mt-2 text-uswds-sm text-uswds-red-50 hover:text-red-500\"\n              >\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else if activeTab === 'execute'}\n    <EnforcementExecution />\n  {:else if activeTab === 'history'}\n    <ActionHistory />\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    lists: [],\n    currentList: null,\n    subscriptions: [],\n    subscriptionImpact: null,\n    isLoading: false,\n    isLoadingList: false,\n    isLoadingImpact: false,\n    searchQuery: '',\n    sortBy: 'updated_at',\n    sortOrder: 'desc',\n    error: null,\n};\nexport const communityStore = writable(initialState);\nexport const filteredLists = derived(communityStore, ($community) => {\n    let filtered = $community.lists;\n    // Apply search filter\n    if ($community.searchQuery.trim()) {\n        const query = $community.searchQuery.toLowerCase();\n        filtered = filtered.filter(list => list.name.toLowerCase().includes(query) ||\n            list.description.toLowerCase().includes(query) ||\n            list.criteria.toLowerCase().includes(query));\n    }\n    // Apply sorting\n    filtered.sort((a, b) => {\n        let aValue = a[$community.sortBy];\n        let bValue = b[$community.sortBy];\n        if ($community.sortBy === 'created_at' || $community.sortBy === 'updated_at') {\n            aValue = new Date(aValue).getTime();\n            bValue = new Date(bValue).getTime();\n        }\n        if (typeof aValue === 'string') {\n            aValue = aValue.toLowerCase();\n            bValue = bValue.toLowerCase();\n        }\n        const comparison = aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n        return $community.sortOrder === 'asc' ? comparison : -comparison;\n    });\n    return filtered;\n});\nexport const subscribedListIds = derived(communityStore, ($community) => new Set($community.subscriptions.map(sub => sub.list_id)));\nexport const isSubscribed = derived(subscribedListIds, ($subscribedIds) => (listId) => $subscribedIds.has(listId));\n// Community actions\nexport const communityActions = {\n    fetchLists: async () => {\n        communityStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    lists: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch community lists',\n                isLoading: false,\n            }));\n        }\n    },\n    fetchListDetails: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingList: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/artists`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    currentList: result.data,\n                    isLoadingList: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingList: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch list details',\n                isLoadingList: false,\n            }));\n        }\n    },\n    fetchSubscriptions: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/subscriptions', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptions: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch subscriptions:', error);\n        }\n    },\n    getSubscriptionImpact: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingImpact: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/impact`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptionImpact: result.data,\n                    isLoadingImpact: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingImpact: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to get subscription impact',\n                isLoadingImpact: false,\n            }));\n            return { success: false, message: 'Failed to get subscription impact' };\n        }\n    },\n    subscribe: async (listId, versionPinned, autoUpdate = true) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to subscribe to list' };\n        }\n    },\n    unsubscribe: async (listId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/unsubscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to unsubscribe from list' };\n        }\n    },\n    updateSubscription: async (listId, versionPinned, autoUpdate) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscription`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update subscription' };\n        }\n    },\n    createList: async (listData) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(listData),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh lists\n                await communityActions.fetchLists();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to create community list' };\n        }\n    },\n    updateSearch: (query) => {\n        communityStore.update(state => ({ ...state, searchQuery: query }));\n    },\n    updateSort: (sortBy, sortOrder) => {\n        communityStore.update(state => ({ ...state, sortBy, sortOrder }));\n    },\n    clearCurrentList: () => {\n        communityStore.update(state => ({ ...state, currentList: null }));\n    },\n    clearError: () => {\n        communityStore.update(state => ({ ...state, error: null }));\n    },\n};\n","<script lang=\"ts\">\n  import { communityActions, subscribedListIds, type CommunityList } from '../stores/community';\n  \n  export let list: CommunityList;\n  \n  $: isSubscribed = $subscribedListIds.has(list.id);\n\n  async function viewDetails() {\n    await communityActions.fetchListDetails(list.id);\n  }\n\n  async function toggleSubscription() {\n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      // Show impact preview first\n      const impact = await communityActions.getSubscriptionImpact(list.id);\n      if (impact.success) {\n        const confirmed = confirm(\n          `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n        );\n        if (confirmed) {\n          const result = await communityActions.subscribe(list.id);\n          if (!result.success) {\n            alert(`Failed to subscribe: ${result.message}`);\n          }\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n<div class=\"bg-white overflow-hidden shadow rounded-uswds-lg hover:shadow-md transition-shadow\">\n  <div class=\"p-uswds-6\">\n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex items-center\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker truncate\">\n          {list.name}\n        </h3>\n        {#if isSubscribed}\n          <span class=\"ml-2 flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium text-uswds-green-50 bg-green-100\">\n            Subscribed\n          </span>\n        {/if}\n      </div>\n      <span class=\"inline-flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {getUpdateCadenceColor(list.update_cadence)}\">\n        {list.update_cadence}\n      </span>\n    </div>\n    \n    <p class=\"mt-2 text-uswds-sm text-uswds-base-darker line-clamp-uswds-2\">\n      {list.description}\n    </p>\n    \n    <div class=\"mt-3\">\n      <h4 class=\"text-uswds-xs font-medium text-uswds-base-darker uppercase tracking-wide\">Criteria</h4>\n      <p class=\"mt-1 text-uswds-sm text-uswds-base-darker line-clamp-uswds-2\">\n        {list.criteria}\n      </p>\n    </div>\n    \n    <div class=\"mt-4 flex items-center justify-between text-uswds-sm text-uswds-base-darker\">\n      <div class=\"flex items-center space-x-4\">\n        <span>\n          <svg aria-hidden=\"true\" class=\"inline icon-uswds icon-uswds--sm text-uswds-base-darker mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          {list.artist_count || 0} artists\n        </span>\n        <span>\n          <svg aria-hidden=\"true\" class=\"inline icon-uswds icon-uswds--sm text-uswds-base-darker mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n          </svg>\n          {list.subscriber_count || 0} subscribers\n        </span>\n      </div>\n      <span>v{list.version}</span>\n    </div>\n    \n    <div class=\"mt-4 text-uswds-xs text-uswds-base-darker\">\n      Updated {formatDate(list.updated_at)}\n      {#if list.governance_url}\n        • <a href={list.governance_url} target=\"_blank\" class=\"text-primary hover:text-indigo-500\">Governance</a>\n      {/if}\n    </div>\n  </div>\n  \n  <div class=\"bg-uswds-base-lightest px-6 py-3\">\n    <div class=\"flex justify-between items-center\">\n      <button\n        on:click={viewDetails}\n        class=\"text-uswds-sm text-indigo-600 hover:text-indigo-500 font-medium\"\n      >\n        View Details\n      </button>\n      \n      <button\n        on:click={toggleSubscription}\n        class=\"inline-flex items-center px-3 py-2 border border-transparent text-uswds-sm leading-4 font-medium rounded-uswds-md {isSubscribed \n          ? 'text-uswds-red-50 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n          : 'text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n      >\n        {#if isSubscribed}\n          <svg aria-hidden=\"true\" class=\"-ml-0.5 mr-2 icon-uswds icon-uswds--sm\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n          Unsubscribe\n        {:else}\n          <svg aria-hidden=\"true\" class=\"-ml-0.5 mr-2 icon-uswds icon-uswds--sm\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n          Subscribe\n        {/if}\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { communityActions, communityStore, subscribedListIds } from '../stores/community';\n  \n  $: list = $communityStore.currentList;\n  $: isSubscribed = list ? $subscribedListIds.has(list.id) : false;\n  \n  let showSubscriptionOptions = false;\n  let versionPinned: number | null = null;\n  let autoUpdate = true;\n\n  function goBack() {\n    communityActions.clearCurrentList();\n  }\n\n  async function toggleSubscription() {\n    if (!list) return;\n    \n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      showSubscriptionOptions = true;\n    }\n  }\n\n  async function confirmSubscription() {\n    if (!list) return;\n    \n    // Get impact preview\n    const impact = await communityActions.getSubscriptionImpact(list.id);\n    if (impact.success) {\n      const confirmed = confirm(\n        `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n      );\n      if (confirmed) {\n        const result = await communityActions.subscribe(\n          list.id, \n          versionPinned || undefined, \n          autoUpdate\n        );\n        if (result.success) {\n          showSubscriptionOptions = false;\n        } else {\n          alert(`Failed to subscribe: ${result.message}`);\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n{#if list}\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <button\n          on:click={goBack}\n          class=\"flex items-center text-uswds-sm text-uswds-base-darker hover:text-gray-700\"\n        >\n          <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n          Back to lists\n        </button>\n        \n        <div class=\"flex items-center space-x-2\">\n          {#if isSubscribed}\n            <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-uswds-xs font-medium text-uswds-green-50 bg-green-100\">\n              Subscribed\n            </span>\n          {/if}\n          <span class=\"text-uswds-sm text-uswds-base-darker\">v{list.version}</span>\n        </div>\n      </div>\n      \n      <div class=\"flex justify-between items-start\">\n        <div class=\"flex-1\">\n          <h1 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">{list.name}</h1>\n          <p class=\"mt-2 text-uswds-base-darker\">{list.description}</p>\n          \n          <div class=\"mt-4 grid grid-cols-1 gap-uswds-4 sm:grid-cols-3\">\n            <div class=\"text-center p-uswds-3 bg-uswds-base-lightest rounded-uswds-lg\">\n              <div class=\"text-uswds-lg font-semibold text-uswds-base-darker\">{list.artists?.length || 0}</div>\n              <div class=\"text-uswds-sm text-uswds-base-darker\">Artists</div>\n            </div>\n            <div class=\"text-center p-uswds-3 bg-uswds-base-lightest rounded-uswds-lg\">\n              <div class=\"text-uswds-lg font-semibold text-uswds-base-darker\">{list.subscriber_count || 0}</div>\n              <div class=\"text-uswds-sm text-uswds-base-darker\">Subscribers</div>\n            </div>\n            <div class=\"text-center p-uswds-3 bg-uswds-base-lightest rounded-uswds-lg\">\n              <div class=\"text-uswds-lg font-semibold text-uswds-base-darker\">{list.update_cadence}</div>\n              <div class=\"text-uswds-sm text-uswds-base-darker\">Updates</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"ml-6\">\n          <button\n            on:click={toggleSubscription}\n            class=\"inline-flex items-center px-4 py-2 border border-transparent text-uswds-sm font-medium rounded-uswds-md shadow-sm {isSubscribed \n              ? 'text-uswds-red-50 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n              : 'text-white bg-primary hover:bg-indigo-700 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n          >\n            {#if isSubscribed}\n              <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n              Unsubscribe\n            {:else}\n              <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Subscribe\n            {/if}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Subscription Options Modal -->\n    {#if showSubscriptionOptions}\n      <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6 border-2 border-indigo-200\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">Subscription Options</h3>\n        \n        <div class=\"space-y-4\">\n          <div>\n            <h4 class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Version Pinning</h4>\n            <div class=\"mt-2 space-y-2\">\n              <div class=\"flex items-center\">\n                <input\n                  id=\"auto-update\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={null}\n                  class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-primary border-gray-300\"\n                />\n                <label for=\"auto-update\" class=\"ml-3 block text-uswds-sm text-uswds-base-darker\">\n                  Auto-update to latest version (recommended)\n                </label>\n              </div>\n              <div class=\"flex items-center\">\n                <input\n                  id=\"pin-version\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={list.version}\n                  class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300\"\n                />\n                <label for=\"pin-version\" class=\"ml-3 block text-uswds-sm text-uswds-base-darker\">\n                  Pin to current version (v{list.version})\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-start\">\n            <div class=\"flex items-center icon icon-md\">\n              <input\n                id=\"auto-update-checkbox\"\n                type=\"checkbox\"\n                bind:checked={autoUpdate}\n                class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300 rounded\"\n              />\n            </div>\n            <div class=\"ml-3 text-uswds-sm\">\n              <label for=\"auto-update-checkbox\" class=\"font-medium text-uswds-base-darker\">\n                Enable automatic updates\n              </label>\n              <p class=\"text-uswds-base-darker\">\n                Receive notifications when the list is updated and apply changes automatically.\n              </p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mt-6 flex justify-end space-x-3\">\n          <button\n            on:click={() => showSubscriptionOptions = false}\n            class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Cancel\n          </button>\n          <button\n            on:click={confirmSubscription}\n            class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white btn btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Subscribe\n          </button>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Criteria and Governance -->\n    <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">List Criteria & Governance</h3>\n      \n      <div class=\"space-y-4\">\n        <div>\n          <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker\">Inclusion Criteria</h4>\n          <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">{list.criteria}</p>\n        </div>\n        \n        <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-2\">\n          <div>\n            <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker\">Update Cadence</h4>\n            <p class=\"mt-1 text-uswds-sm text-uswds-base-darker capitalize\">{list.update_cadence}</p>\n          </div>\n          <div>\n            <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker\">Last Updated</h4>\n            <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">{formatDate(list.updated_at)}</p>\n          </div>\n        </div>\n        \n        {#if list.governance_url}\n          <div>\n            <h4 class=\"text-uswds-sm font-medium text-uswds-base-darker\">Governance Process</h4>\n            <a \n              href={list.governance_url} \n              target=\"_blank\" \n              class=\"mt-1 text-uswds-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              View governance documentation →\n            </a>\n          </div>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Artists List -->\n    <div class=\"bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">\n        Artists ({list.artists?.length || 0})\n      </h3>\n      \n      {#if $communityStore.isLoadingList}\n        <div class=\"text-center py-6\">\n          <svg aria-hidden=\"true\" class=\"animate-spin mx-auto icon-uswds icon-uswds--lg text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">Loading artists...</p>\n        </div>\n      {:else if list.artists && list.artists.length > 0}\n        <div class=\"space-y-3 max-h-96 overflow-y-auto\">\n          {#each list.artists as item}\n            <div class=\"flex items-center justify-between py-3 px-4 bg-uswds-base-lightest rounded-uswds-lg\">\n              <div class=\"flex items-center space-x-3\">\n                {#if item.artist.metadata.image}\n                  <img\n                    src={item.artist.metadata.image}\n                    alt={item.artist.canonical_name}\n                    class=\"avatar avatar--lg object-cover\"\n                  />\n                {:else}\n                  <div class=\"icon-uswds icon-uswds--xl rounded-full bg-uswds-base-lightest flex items-center justify-center\">\n                    <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                \n                <div>\n                  <div class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                    {item.artist.canonical_name}\n                  </div>\n                  {#if item.artist.metadata.genres && item.artist.metadata.genres.length > 0}\n                    <div class=\"text-uswds-xs text-uswds-base-darker\">\n                      {item.artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                  <div class=\"flex space-x-1 mt-1\">\n                    {#each getProviderBadges(item.artist) as badge}\n                      <span class=\"inline-flex items-center px-1.5 py-0.5 rounded text-uswds-xs font-medium {badge.color}\">\n                        {badge.name}\n                      </span>\n                    {/each}\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"text-right\">\n                <div class=\"text-uswds-xs text-uswds-base-darker\">\n                  Added {formatDate(item.added_at)}\n                </div>\n                {#if item.rationale_link}\n                  <a \n                    href={item.rationale_link} \n                    target=\"_blank\" \n                    class=\"text-uswds-xs text-indigo-600 hover:text-indigo-500\"\n                  >\n                    View rationale\n                  </a>\n                {/if}\n              </div>\n            </div>\n          {/each}\n        </div>\n      {:else}\n        <div class=\"text-center py-6\">\n          <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--lg text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">No artists in this list yet.</p>\n        </div>\n      {/if}\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-12\">\n    <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n    </svg>\n    <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No list selected</h3>\n    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Select a list to view its details.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { communityActions } from '../stores/community';\n  \n  const dispatch = createEventDispatcher();\n  \n  let name = '';\n  let description = '';\n  let criteria = '';\n  let governanceUrl = '';\n  let updateCadence = 'monthly';\n  let visibility = 'public';\n  let isCreating = false;\n  let error = '';\n\n  async function handleSubmit() {\n    if (!name.trim() || !description.trim() || !criteria.trim()) {\n      error = 'Please fill in all required fields';\n      return;\n    }\n\n    isCreating = true;\n    error = '';\n\n    const result = await communityActions.createList({\n      name: name.trim(),\n      description: description.trim(),\n      criteria: criteria.trim(),\n      governance_url: governanceUrl.trim() || undefined,\n      update_cadence: updateCadence,\n      visibility: visibility as 'public' | 'private',\n    });\n\n    if (result.success) {\n      // Reset form\n      name = '';\n      description = '';\n      criteria = '';\n      governanceUrl = '';\n      updateCadence = 'monthly';\n      visibility = 'public';\n      dispatch('listCreated');\n    } else {\n      error = result.message || 'Failed to create community list';\n    }\n\n    isCreating = false;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-6\">\n  <!-- Name -->\n  <div>\n    <label for=\"name\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      List Name *\n    </label>\n    <input\n      id=\"name\"\n      type=\"text\"\n      bind:value={name}\n      placeholder=\"e.g., Controversial Artists List\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n      required\n    />\n  </div>\n\n  <!-- Description -->\n  <div>\n    <label for=\"description\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Description *\n    </label>\n    <textarea\n      id=\"description\"\n      bind:value={description}\n      rows=\"3\"\n      placeholder=\"Describe the purpose and scope of this list...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n      required\n    ></textarea>\n  </div>\n\n  <!-- Criteria -->\n  <div>\n    <label for=\"criteria\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Inclusion Criteria *\n    </label>\n    <textarea\n      id=\"criteria\"\n      bind:value={criteria}\n      rows=\"4\"\n      placeholder=\"Define clear, neutral criteria for including artists in this list. Avoid subjective language or personal opinions.\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n      required\n    ></textarea>\n    <p class=\"mt-1 text-uswds-xs text-uswds-base-darker\">\n      Criteria must be factual and neutral. Avoid subjective terms or personal opinions.\n    </p>\n  </div>\n\n  <!-- Governance URL -->\n  <div>\n    <label for=\"governance-url\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Governance Documentation URL\n    </label>\n    <input\n      id=\"governance-url\"\n      type=\"url\"\n      bind:value={governanceUrl}\n      placeholder=\"https://example.com/governance-process\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n    />\n    <p class=\"mt-1 text-uswds-xs text-uswds-base-darker\">\n      Link to documentation explaining your list's governance process and appeals procedure.\n    </p>\n  </div>\n\n  <!-- Update Cadence -->\n  <div>\n    <label for=\"update-cadence\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n      Update Cadence\n    </label>\n    <select\n      id=\"update-cadence\"\n      bind:value={updateCadence}\n      class=\"mt-1 block w-full border border-gray-300 rounded-uswds-md px-3 py-2 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n    >\n      <option value=\"daily\">Daily</option>\n      <option value=\"weekly\">Weekly</option>\n      <option value=\"monthly\">Monthly</option>\n      <option value=\"as-needed\">As Needed</option>\n    </select>\n  </div>\n\n  <!-- Visibility -->\n  <div>\n    <h4 class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Visibility</h4>\n    <div class=\"mt-2 space-y-2\">\n      <div class=\"flex items-center\">\n        <input\n          id=\"public\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"public\"\n          class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-primary border-gray-300\"\n        />\n        <label for=\"public\" class=\"ml-3 block text-uswds-sm text-uswds-base-darker\">\n          Public - Anyone can discover and subscribe\n        </label>\n      </div>\n      <div class=\"flex items-center\">\n        <input\n          id=\"private\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"private\"\n          class=\"focus:ring-indigo-500 icon-uswds icon-uswds--sm text-indigo-600 border-gray-300\"\n        />\n        <label for=\"private\" class=\"ml-3 block text-uswds-sm text-uswds-base-darker\">\n          Private - Only you can manage, others need direct link\n        </label>\n      </div>\n    </div>\n  </div>\n\n  {#if error}\n    <div class=\"text-uswds-red-50 text-uswds-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('listCreated')}\n      class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker bg-white hover:bg-uswds-base-lightest focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isCreating || !name.trim() || !description.trim() || !criteria.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isCreating}\n        <svg aria-hidden=\"true\" class=\"animate-spin -ml-1 mr-2 icon-uswds icon-uswds--sm text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Creating...\n      {:else}\n        Create List\n      {/if}\n    </button>\n  </div>\n\n  <!-- Guidelines -->\n  <div class=\"bg-yellow-50 border border-yellow-200 rounded-uswds-md p-uswds-4\">\n    <div class=\"flex\">\n      <div class=\"\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-uswds-sm font-medium text-yellow-800\">\n          Community List Guidelines\n        </h3>\n        <div class=\"mt-2 text-uswds-sm text-yellow-700\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li>Use neutral, factual language in criteria</li>\n            <li>Provide clear governance and appeals processes</li>\n            <li>Maintain transparency about list updates</li>\n            <li>Respect platform terms of service</li>\n            <li>Focus on user preferences, not personal judgments</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","<script lang=\"ts\">\n  import { communityActions, communityStore } from '../stores/community';\n  \n  $: subscriptions = $communityStore.subscriptions;\n\n  async function updateSubscription(listId: string, versionPinned?: number, autoUpdate?: boolean) {\n    const result = await communityActions.updateSubscription(listId, versionPinned, autoUpdate);\n    if (!result.success) {\n      alert(`Failed to update subscription: ${result.message}`);\n    }\n  }\n\n  async function unsubscribe(listId: string, listName: string) {\n    const confirmed = confirm(`Are you sure you want to unsubscribe from \"${listName}\"?`);\n    if (confirmed) {\n      const result = await communityActions.unsubscribe(listId);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    }\n  }\n\n  async function viewListDetails(listId: string) {\n    await communityActions.fetchListDetails(listId);\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function handleAutoUpdateChange(listId: string, versionPinned: number | undefined, event: Event) {\n    const target = event.target as HTMLInputElement;\n    updateSubscription(listId, versionPinned, target.checked);\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div>\n    <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">My Subscriptions</h3>\n    <p class=\"text-uswds-sm text-uswds-base-darker\">\n      Manage your community list subscriptions and update preferences.\n    </p>\n  </div>\n\n  {#if subscriptions.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n      </svg>\n      <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No subscriptions yet</h3>\n      <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n        Browse community lists to find ones that match your preferences.\n      </p>\n    </div>\n  {:else}\n    <!-- Subscriptions List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-uswds-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each subscriptions as subscription}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"\">\n                    <div class=\"avatar avatar--lg bg-indigo-100\">\n                      <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                        {subscription.list.name}\n                      </p>\n                      <span class=\"ml-2 flex items-center px-2 py-0.5 rounded text-uswds-xs font-medium {getUpdateCadenceColor(subscription.list.update_cadence)}\">\n                        {subscription.list.update_cadence}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-uswds-sm text-uswds-base-darker\">\n                      <p>\n                        Subscribed {formatDate(subscription.created_at)}\n                        • v{subscription.list.version}\n                        {#if subscription.version_pinned}\n                          (pinned to v{subscription.version_pinned})\n                        {/if}\n                      </p>\n                    </div>\n                    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker line-clamp-uswds-1\">\n                      {subscription.list.description}\n                    </p>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-2\">\n                  <button\n                    on:click={() => viewListDetails(subscription.list_id)}\n                    class=\"text-indigo-600 hover:text-indigo-900 text-uswds-sm font-medium\"\n                  >\n                    View Details\n                  </button>\n                  <button\n                    on:click={() => unsubscribe(subscription.list_id, subscription.list.name)}\n                    class=\"text-uswds-red-50 hover:text-red-900 text-uswds-sm font-medium\"\n                  >\n                    Unsubscribe\n                  </button>\n                </div>\n              </div>\n              \n              <!-- Subscription Settings -->\n              <div class=\"mt-4 pt-4 border-t border-gray-200\">\n                <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-2\">\n                  <!-- Version Pinning -->\n                  <div>\n                    <h5 class=\"block text-uswds-xs font-medium text-uswds-base-darker mb-2\">Version Preference</h5>\n                    <div class=\"space-y-2\">\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"auto-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, undefined, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"auto-{subscription.list_id}\" class=\"ml-2 block text-uswds-xs text-uswds-base-darker\">\n                          Auto-update to latest\n                        </label>\n                      </div>\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"pin-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, subscription.list.version, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"pin-{subscription.list_id}\" class=\"ml-2 block text-uswds-xs text-uswds-base-darker\">\n                          Pin to v{subscription.list.version}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Auto Update -->\n                  <div>\n                    <h5 class=\"block text-uswds-xs font-medium text-uswds-base-darker mb-2\">Update Notifications</h5>\n                    <div class=\"flex items-start\">\n                      <div class=\"flex items-center icon icon-sm\">\n                        <input\n                          id=\"auto-update-{subscription.list_id}\"\n                          type=\"checkbox\"\n                          checked={subscription.auto_update}\n                          on:change={(e) => handleAutoUpdateChange(subscription.list_id, subscription.version_pinned, e)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300 rounded\"\n                        />\n                      </div>\n                      <div class=\"ml-2 text-uswds-xs\">\n                        <label for=\"auto-update-{subscription.list_id}\" class=\"font-medium text-uswds-base-darker\">\n                          Enable automatic updates\n                        </label>\n                        <p class=\"text-uswds-base-darker\">\n                          Apply changes when the list is updated\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Subscription Management Info -->\n  <div class=\"bg-uswds-blue-50 border border-blue-200 rounded-uswds-md p-uswds-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-blue-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-uswds-sm font-medium text-uswds-blue-50\">\n          Managing Your Subscriptions\n        </h3>\n        <div class=\"mt-2 text-uswds-sm text-uswds-blue-50\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li><strong>Auto-update:</strong> Automatically apply changes when lists are updated</li>\n            <li><strong>Version pinning:</strong> Stay on a specific version to avoid unexpected changes</li>\n            <li><strong>Notifications:</strong> Get notified about list updates and changes</li>\n            <li><strong>Impact preview:</strong> See what changes will be made before they're applied</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { communityActions, communityStore, filteredLists, subscribedListIds } from '../stores/community';\n  import CommunityListCard from './CommunityListCard.svelte';\n  import CommunityListDetail from './CommunityListDetail.svelte';\n  import CreateCommunityList from './CreateCommunityList.svelte';\n  import MySubscriptions from './MySubscriptions.svelte';\n  \n  let activeTab = 'browse';\n  let showCreateForm = false;\n  \n  onMount(async () => {\n    await communityActions.fetchLists();\n    await communityActions.fetchSubscriptions();\n  });\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n    showCreateForm = false;\n    communityActions.clearCurrentList();\n  }\n\n  function handleSearch(event: Event) {\n    const target = event.target as HTMLInputElement;\n    communityActions.updateSearch(target.value);\n  }\n\n  function handleSort(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    const [sortBy, sortOrder] = target.value.split(':');\n    communityActions.updateSort(sortBy as any, sortOrder as any);\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">Community Lists</h2>\n        <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n          Discover and subscribe to community-curated blocklists.\n        </p>\n      </div>\n      <button\n        on:click={() => showCreateForm = !showCreateForm}\n        class=\"flex items-center px-4 py-2 border border-transparent text-uswds-sm font-medium rounded-uswds-md shadow-sm text-white bg-primary hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Create List\n      </button>\n    </div>\n  </div>\n\n  <!-- Create List Form -->\n  {#if showCreateForm}\n    <div class=\"mb-6 bg-white shadow rounded-uswds-lg p-uswds-6\">\n      <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">Create Community List</h3>\n      <CreateCommunityList on:listCreated={() => showCreateForm = false} />\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-uswds-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('browse')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'browse' ? 'border-indigo-500 text-primary' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Browse Lists\n      </button>\n      <button\n        on:click={() => setActiveTab('subscriptions')}\n        class=\"py-4 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'subscriptions' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        My Subscriptions ({$subscribedListIds.size})\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'browse'}\n    <!-- List Detail View -->\n    {#if $communityStore.currentList}\n      <CommunityListDetail />\n    {:else}\n      <!-- Browse Lists -->\n      <div class=\"space-y-6\">\n        <!-- Search and Filter -->\n        <div class=\"bg-white shadow rounded-uswds-lg p-uswds-4\">\n          <div class=\"flex flex-col sm:flex-row gap-uswds-4\">\n            <div class=\"flex-1\">\n              <label for=\"search\" class=\"sr-only\">Search lists</label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\"Search lists by name, description, or criteria...\"\n                  value={$communityStore.searchQuery}\n                  on:input={handleSearch}\n                  class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-uswds-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n                />\n              </div>\n            </div>\n            \n            <div class=\"sm:w-48\">\n              <label for=\"sort\" class=\"sr-only\">Sort by</label>\n              <select\n                id=\"sort\"\n                on:change={handleSort}\n                class=\"block w-full pl-3 pr-10 py-2 text-uswds-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm rounded-uswds-md\"\n              >\n                <option value=\"updated_at:desc\">Recently Updated</option>\n                <option value=\"created_at:desc\">Newest First</option>\n                <option value=\"name:asc\">Name A-Z</option>\n                <option value=\"name:desc\">Name Z-A</option>\n                <option value=\"artist_count:desc\">Most Artists</option>\n                <option value=\"subscriber_count:desc\">Most Subscribers</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Lists Grid -->\n        {#if $communityStore.isLoading}\n          <div class=\"text-center py-12\">\n            <svg aria-hidden=\"true\" class=\"animate-spin mx-auto icon-uswds icon-uswds--lg text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <p class=\"mt-2 text-uswds-sm text-uswds-base-darker\">Loading community lists...</p>\n          </div>\n        {:else if $communityStore.error}\n          <div class=\"text-center py-12\">\n            <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--lg text-uswds-red-50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p class=\"mt-2 text-uswds-sm text-uswds-red-50\">{$communityStore.error}</p>\n            <button\n              on:click={() => communityActions.fetchLists()}\n              class=\"mt-2 text-uswds-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Try again\n            </button>\n          </div>\n        {:else if $filteredLists.length === 0}\n          <div class=\"text-center py-12\">\n            {#if $communityStore.lists.length === 0}\n              <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n              <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No community lists yet</h3>\n              <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Be the first to create a community list.</p>\n              <div class=\"mt-6\">\n                <button\n                  on:click={() => showCreateForm = true}\n                  class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-uswds-sm font-medium rounded-uswds-md text-white btn btn-primary focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <svg aria-hidden=\"true\" class=\"-ml-1 mr-2 icon-uswds icon-uswds--md\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Create your first list\n                </button>\n              </div>\n            {:else}\n              <svg aria-hidden=\"true\" class=\"mx-auto icon-uswds icon-uswds--xl text-uswds-base-darker\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <h3 class=\"mt-2 text-uswds-sm font-medium text-uswds-base-darker\">No lists match your search</h3>\n              <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">Try adjusting your search terms or filters.</p>\n            {/if}\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 gap-uswds-6 sm:grid-cols-2 lg:grid-cols-3\">\n            {#each $filteredLists as list (list.id)}\n              <CommunityListCard {list} />\n            {/each}\n          </div>\n        {/if}\n      </div>\n    {/if}\n  {:else if activeTab === 'subscriptions'}\n    <MySubscriptions />\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"mt-8 bg-uswds-blue-50 border border-blue-200 rounded-uswds-md p-uswds-4\">\n    <div class=\"flex\">\n      <div class=\"\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-blue-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-uswds-sm font-medium text-uswds-blue-50\">\n          About Community Lists\n        </h3>\n        <div class=\"mt-2 text-uswds-sm text-uswds-blue-50\">\n          <p>\n            Community lists are curated blocklists created and maintained by other users. \n            Each list has clear criteria and governance processes to ensure quality and transparency.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Subscribe to lists that match your preferences</li>\n            <li>Pin specific versions or enable auto-updates</li>\n            <li>Preview impact before subscribing</li>\n            <li>Appeal decisions through structured processes</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { authActions } from '../stores/auth';\n  import { api } from '../utils/api';\n  import TwoFactorSetup from './TwoFactorSetup.svelte';\n\n  interface UserSettings {\n    two_factor_enabled: boolean;\n    email_notifications: boolean;\n    privacy_mode: boolean;\n  }\n\n  interface UserProfile {\n    id: string;\n    email: string;\n    email_verified: boolean;\n    totp_enabled: boolean;\n    created_at: string;\n    updated_at: string;\n    last_login?: string;\n    settings: UserSettings;\n  }\n\n  let profile: UserProfile | null = null;\n  let isLoading = false;\n  let error = '';\n  let success = '';\n  let activeTab = 'profile';\n  \n  // Profile editing\n  let editingProfile = false;\n  let editEmail = '';\n  \n  // Settings editing\n  let editSettings: UserSettings = {\n    two_factor_enabled: false,\n    email_notifications: true,\n    privacy_mode: false\n  };\n\n  // 2FA management\n  let show2FASetup = false;\n  let show2FADisable = false;\n\n  // Data export\n  let exportLoading = false;\n\n  // Account deletion\n  let showDeleteConfirm = false;\n  let deleteConfirmEmail = '';\n  let deleteReason = '';\n  let deleteLoading = false;\n\n  onMount(async () => {\n    await loadProfile();\n  });\n\n  async function loadProfile() {\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await api.get('/users/profile');\n      if (result.success) {\n        profile = result.data;\n        editEmail = profile?.email || '';\n        editSettings = { \n          two_factor_enabled: profile?.settings?.two_factor_enabled || false,\n          email_notifications: profile?.settings?.email_notifications || true,\n          privacy_mode: profile?.settings?.privacy_mode || false\n        };\n      } else {\n        error = result.message || 'Failed to load profile';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to load profile';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function updateProfile() {\n    if (!profile) return;\n    \n    isLoading = true;\n    error = '';\n    success = '';\n\n    try {\n      const result = await api.put('/users/profile', {\n        email: editEmail !== profile.email ? editEmail : undefined\n      });\n\n      if (result.success) {\n        profile = result.data;\n        editingProfile = false;\n        success = 'Profile updated successfully';\n        // Update auth store\n        await authActions.fetchProfile();\n      } else {\n        error = result.message || 'Failed to update profile';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to update profile';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function updateSettings() {\n    if (!profile) return;\n    \n    isLoading = true;\n    error = '';\n    success = '';\n\n    try {\n      const result = await api.put('/users/profile', {\n        settings: editSettings\n      });\n\n      if (result.success) {\n        profile = result.data;\n        success = 'Settings updated successfully';\n      } else {\n        error = result.message || 'Failed to update settings';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to update settings';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function exportData() {\n    exportLoading = true;\n    error = '';\n\n    try {\n      const result = await api.get('/users/export');\n      if (result.success) {\n        // Create and download file\n        const blob = new Blob([JSON.stringify(result.data, null, 2)], { \n          type: 'application/json' \n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `no-drake-data-export-${new Date().toISOString().split('T')[0]}.json`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        success = 'Data exported successfully';\n      } else {\n        error = result.message || 'Failed to export data';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to export data';\n    } finally {\n      exportLoading = false;\n    }\n  }\n\n  async function deleteAccount() {\n    if (!profile || deleteConfirmEmail !== profile.email) {\n      error = 'Email confirmation does not match';\n      return;\n    }\n\n    deleteLoading = true;\n    error = '';\n\n    try {\n      const result = await api.delete('/users/account', {\n        confirmation_email: deleteConfirmEmail,\n        reason: deleteReason || undefined\n      });\n\n      if (result.success) {\n        // Account deleted, logout user\n        await authActions.logout();\n      } else {\n        error = result.message || 'Failed to delete account';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to delete account';\n    } finally {\n      deleteLoading = false;\n    }\n  }\n\n  function handle2FASetupComplete() {\n    show2FASetup = false;\n    loadProfile(); // Reload to get updated 2FA status\n    success = '2FA enabled successfully';\n  }\n\n  function handle2FASetupCancel() {\n    show2FASetup = false;\n  }\n\n  async function handle2FADisable(code: string) {\n    try {\n      const result = await authActions.disable2FA(code);\n      if (result.success) {\n        show2FADisable = false;\n        await loadProfile();\n        success = '2FA disabled successfully';\n      } else {\n        error = result.message || 'Failed to disable 2FA';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to disable 2FA';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  function handleTotpInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const code = target.value;\n    if (code.length === 6 && /^\\d{6}$/.test(code)) {\n      handle2FADisable(code);\n    }\n  }\n</script>\n\n<div class=\"max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n  <!-- Header -->\n  <div class=\"mb-8\">\n    <h1 class=\"text-uswds-2xl font-bold text-uswds-base-darker\">Account Settings</h1>\n    <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n      Manage your account information, security settings, and preferences.\n    </p>\n  </div>\n\n  <!-- Error/Success Messages -->\n  {#if error}\n    <div class=\"mb-6 bg-red-50 border border-red-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div class=\"ml-3\">\n          <p class=\"text-uswds-sm text-uswds-red-50\">{error}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  {#if success}\n    <div class=\"mb-6 bg-green-50 border border-green-200 rounded-uswds-md p-uswds-4\">\n      <div class=\"flex\">\n        <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-green-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div class=\"ml-3\">\n          <p class=\"text-uswds-sm text-uswds-green-50\">{success}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  {#if isLoading && !profile}\n    <div class=\"text-center py-12\">\n      <div class=\"animate-spin rounded-full icon icon-xl  border-b-2 border-indigo-600 mx-auto\"></div>\n      <p class=\"mt-2 text-uswds-base-darker\">Loading profile...</p>\n    </div>\n  {:else if profile}\n    <!-- Tab Navigation -->\n    <div class=\"border-b border-gray-200 mb-6\">\n      <nav class=\"-mb-px flex space-x-8\">\n        <button\n          on:click={() => activeTab = 'profile'}\n          class=\"py-2 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'profile' ? 'border-indigo-500 text-primary' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Profile\n        </button>\n        <button\n          on:click={() => activeTab = 'security'}\n          class=\"py-2 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'security' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Security\n        </button>\n        <button\n          on:click={() => activeTab = 'preferences'}\n          class=\"py-2 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'preferences' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Preferences\n        </button>\n        <button\n          on:click={() => activeTab = 'data'}\n          class=\"py-2 px-1 border-b-2 font-medium text-uswds-sm {activeTab === 'data' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-uswds-base-darker hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Data & Privacy\n        </button>\n      </nav>\n    </div>\n\n    <!-- Profile Tab -->\n    {#if activeTab === 'profile'}\n      <div class=\"bg-white shadow rounded-uswds-lg\">\n        <div class=\"px-6 py-4 border-b border-gray-200\">\n          <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Profile Information</h3>\n          <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n            Update your account's profile information and email address.\n          </p>\n        </div>\n        <div class=\"px-6 py-4\">\n          <div class=\"space-y-6\">\n            <!-- Email -->\n            <div>\n              <label for=\"email\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Email</label>\n              {#if editingProfile}\n                <div class=\"mt-1 flex rounded-uswds-md shadow-sm\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    bind:value={editEmail}\n                    class=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-uswds-md border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 sm:text-uswds-sm\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              {:else}\n                <div class=\"mt-1 flex items-center justify-between\">\n                  <span class=\"text-uswds-sm text-uswds-base-darker\">{profile.email}</span>\n                  <button\n                    on:click={() => editingProfile = true}\n                    class=\"text-uswds-sm text-indigo-600 hover:text-indigo-500\"\n                  >\n                    Edit\n                  </button>\n                </div>\n              {/if}\n            </div>\n\n            <!-- Account Info -->\n            <div class=\"grid grid-cols-1 gap-uswds-6 sm:grid-cols-2\">\n              <div>\n                <span class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Account Created</span>\n                <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">{formatDate(profile.created_at)}</p>\n              </div>\n              <div>\n                <span class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Last Updated</span>\n                <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">{formatDate(profile.updated_at)}</p>\n              </div>\n              {#if profile.last_login}\n                <div>\n                  <span class=\"block text-uswds-sm font-medium text-uswds-base-darker\">Last Login</span>\n                  <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">{formatDate(profile.last_login)}</p>\n                </div>\n              {/if}\n            </div>\n\n            <!-- Action Buttons -->\n            {#if editingProfile}\n              <div class=\"flex justify-end space-x-3\">\n                <button\n                  on:click={() => {\n                    editingProfile = false;\n                    editEmail = profile?.email || '';\n                  }}\n                  class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker hover:bg-uswds-base-lightest\"\n                >\n                  Cancel\n                </button>\n                <button\n                  on:click={updateProfile}\n                  disabled={isLoading}\n                  class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-primary hover:bg-indigo-700 disabled:opacity-50\"\n                >\n                  {isLoading ? 'Saving...' : 'Save Changes'}\n                </button>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Security Tab -->\n    {#if activeTab === 'security'}\n      <div class=\"space-y-6\">\n        <!-- Two-Factor Authentication -->\n        <div class=\"bg-white shadow rounded-uswds-lg\">\n          <div class=\"px-6 py-4 border-b border-gray-200\">\n            <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Two-Factor Authentication</h3>\n            <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n              Add an extra layer of security to your account with 2FA.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-uswds-sm font-medium text-uswds-base-darker\">\n                  Status: {profile.totp_enabled ? 'Enabled' : 'Disabled'}\n                </p>\n                <p class=\"text-uswds-sm text-uswds-base-darker\">\n                  {profile.totp_enabled \n                    ? 'Your account is protected with 2FA' \n                    : 'Enable 2FA to secure your account'}\n                </p>\n              </div>\n              <div>\n                {#if profile.totp_enabled}\n                  <button\n                    on:click={() => show2FADisable = true}\n                    class=\"px-4 py-2 border border-red-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-red-50 hover:bg-red-50\"\n                  >\n                    Disable 2FA\n                  </button>\n                {:else}\n                  <button\n                    on:click={() => show2FASetup = true}\n                    class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white btn btn-primary\"\n                  >\n                    Enable 2FA\n                  </button>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Preferences Tab -->\n    {#if activeTab === 'preferences'}\n      <div class=\"bg-white shadow rounded-uswds-lg\">\n        <div class=\"px-6 py-4 border-b border-gray-200\">\n          <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Preferences</h3>\n          <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n            Customize your experience and notification settings.\n          </p>\n        </div>\n        <div class=\"px-6 py-4\">\n          <div class=\"space-y-6\">\n            <!-- Email Notifications -->\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <span class=\"text-uswds-sm font-medium text-uswds-base-darker\">Email Notifications</span>\n                <p class=\"text-uswds-sm text-uswds-base-darker\">Receive email updates about your account activity</p>\n              </div>\n              <label class=\"relative flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  bind:checked={editSettings.email_notifications}\n                  class=\"sr-only peer\"\n                />\n                <div class=\"w-11 icon icon-lg bg-uswds-base-lightest peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:icon icon-md after: after:transition-all peer-checked:bg-indigo-600\"></div>\n              </label>\n            </div>\n\n            <!-- Privacy Mode -->\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <span class=\"text-uswds-sm font-medium text-uswds-base-darker\">Privacy Mode</span>\n                <p class=\"text-uswds-sm text-uswds-base-darker\">Hide your activity from other users</p>\n              </div>\n              <label class=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  bind:checked={editSettings.privacy_mode}\n                  class=\"sr-only peer\"\n                />\n                <div class=\"w-11 h-6 bg-uswds-base-lightest peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\n              </label>\n            </div>\n\n            <!-- Save Button -->\n            <div class=\"flex justify-end\">\n              <button\n                on:click={updateSettings}\n                disabled={isLoading}\n                class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n              >\n                {isLoading ? 'Saving...' : 'Save Preferences'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Data & Privacy Tab -->\n    {#if activeTab === 'data'}\n      <div class=\"space-y-6\">\n        <!-- Data Export -->\n        <div class=\"bg-white shadow rounded-uswds-lg\">\n          <div class=\"px-6 py-4 border-b border-gray-200\">\n            <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker\">Data Export</h3>\n            <p class=\"mt-1 text-uswds-sm text-uswds-base-darker\">\n              Download a copy of all your data for your records.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            <button\n              on:click={exportData}\n              disabled={exportLoading}\n              class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {exportLoading ? 'Exporting...' : 'Export My Data'}\n            </button>\n          </div>\n        </div>\n\n        <!-- Account Deletion -->\n        <div class=\"bg-white shadow rounded-uswds-lg border-red-200\">\n          <div class=\"px-6 py-4 border-b border-red-200\">\n            <h3 class=\"text-uswds-lg font-medium text-uswds-red-50\">Delete Account</h3>\n            <p class=\"mt-1 text-uswds-sm text-uswds-red-50\">\n              Permanently delete your account and all associated data.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            {#if !showDeleteConfirm}\n              <button\n                on:click={() => showDeleteConfirm = true}\n                class=\"px-4 py-2 border border-red-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-red-50 hover:bg-red-50\"\n              >\n                Delete Account\n              </button>\n            {:else}\n              <div class=\"space-y-4\">\n                <div class=\"bg-red-50 border border-red-200 rounded-uswds-md p-uswds-4\">\n                  <div class=\"flex\">\n                    <svg aria-hidden=\"true\" class=\"icon-uswds icon-uswds--md text-uswds-red-50\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                    </svg>\n                    <div class=\"ml-3\">\n                      <h3 class=\"text-uswds-sm font-medium text-uswds-red-50\">\n                        This action cannot be undone\n                      </h3>\n                      <p class=\"mt-2 text-uswds-sm text-uswds-red-50\">\n                        This will permanently delete your account, DNP lists, and all associated data.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label for=\"confirm-email\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n                    Confirm your email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"confirm-email\"\n                    bind:value={deleteConfirmEmail}\n                    placeholder={profile.email}\n                    class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-uswds-md shadow-sm focus:ring-red-500 focus:border-red-500 sm:text-uswds-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label for=\"delete-reason\" class=\"block text-uswds-sm font-medium text-uswds-base-darker\">\n                    Reason for deletion (optional)\n                  </label>\n                  <textarea\n                    id=\"delete-reason\"\n                    bind:value={deleteReason}\n                    rows=\"3\"\n                    class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-uswds-md shadow-sm focus:ring-red-500 focus:border-red-500 sm:text-uswds-sm\"\n                    placeholder=\"Help us improve by telling us why you're leaving...\"\n                  ></textarea>\n                </div>\n\n                <div class=\"flex justify-end space-x-3\">\n                  <button\n                    on:click={() => {\n                      showDeleteConfirm = false;\n                      deleteConfirmEmail = '';\n                      deleteReason = '';\n                    }}\n                    class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker hover:bg-uswds-base-lightest\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    on:click={deleteAccount}\n                    disabled={deleteLoading || deleteConfirmEmail !== profile.email}\n                    class=\"px-4 py-2 border border-transparent rounded-uswds-md shadow-sm text-uswds-sm font-medium text-white bg-error hover:bg-red-700 disabled:opacity-50\"\n                  >\n                    {deleteLoading ? 'Deleting...' : 'Delete Account'}\n                  </button>\n                </div>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n  {/if}\n</div>\n\n<!-- 2FA Setup Modal -->\n{#if show2FASetup}\n  <TwoFactorSetup\n    on:complete={handle2FASetupComplete}\n    on:cancel={handle2FASetupCancel}\n  />\n{/if}\n\n<!-- 2FA Disable Modal -->\n{#if show2FADisable}\n  <div class=\"fixed inset-0 bg-uswds-base-lightest bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-uswds-20 mx-auto p-5 border w-96 shadow-lg rounded-uswds-md bg-white\">\n      <div class=\"mt-3 text-center\">\n        <h3 class=\"text-uswds-lg font-medium text-uswds-base-darker mb-4\">\n          Disable Two-Factor Authentication\n        </h3>\n        <p class=\"text-uswds-sm text-uswds-base-darker mb-6\">\n          Enter your 2FA code to disable two-factor authentication\n        </p>\n        \n        <div class=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter 6-digit code\"\n            maxlength=\"6\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-uswds-md text-center text-uswds-lg tracking-widest\"\n            on:input={handleTotpInput}\n          />\n        </div>\n        \n        <div class=\"flex justify-center space-x-3\">\n          <button\n            on:click={() => show2FADisable = false}\n            class=\"px-4 py-2 border border-gray-300 rounded-uswds-md text-uswds-sm font-medium text-uswds-base-darker hover:bg-uswds-base-lightest\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}","<script>\n  import { currentRoute, navigateTo } from '../utils/simple-router';\n  \n  // Debug: Log route changes\n  $: {\n    console.log('SimpleTest: Current route changed to:', $currentRoute);\n  }\n  \n  function testNavigation(route) {\n    console.log('SimpleTest: Testing navigation to:', route);\n    navigateTo(route);\n  }\n</script>\n\n<div class=\"min-h-screen bg-gray-50 p-8\">\n  <div class=\"max-w-4xl mx-auto\">\n    <h1 class=\"text-2xl font-bold text-gray-900 mb-6\">CSS and Navigation Test</h1>\n    \n    <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\n      <h2 class=\"text-lg font-semibold mb-4\">Current Route: {$currentRoute}</h2>\n      \n      <div class=\"grid grid-cols-2 gap-4 mb-6\">\n        <div class=\"bg-blue-50 p-4 rounded border\">\n          <h3 class=\"font-medium text-blue-900\">CSS Test</h3>\n          <p class=\"text-blue-700 text-sm\">If you can see this styled properly, CSS is working!</p>\n        </div>\n        \n        <div class=\"bg-green-50 p-4 rounded border\">\n          <h3 class=\"font-medium text-green-900\">Layout Test</h3>\n          <p class=\"text-green-700 text-sm\">This should be in a 2-column grid layout.</p>\n        </div>\n      </div>\n      \n      <div class=\"flex gap-4\">\n        <button class=\"btn btn-primary\">Primary Button</button>\n        <button class=\"bg-gray-200 px-4 py-2 rounded hover:bg-gray-300\">Secondary Button</button>\n      </div>\n    </div>\n    \n    <div class=\"bg-white rounded-lg shadow p-6\">\n      <h2 class=\"text-lg font-semibold mb-4\">Navigation Test</h2>\n      <p class=\"text-gray-600 mb-4\">Click the tabs above to test navigation. The route should change without page refresh.</p>\n      \n      <div class=\"text-sm text-gray-500 mb-4\">\n        <p>Current route: <code class=\"bg-gray-100 px-2 py-1 rounded\">{$currentRoute}</code></p>\n      </div>\n      \n      <div class=\"flex gap-2 flex-wrap\">\n        <button \n          class=\"btn btn-primary text-sm\" \n          on:click={() => testNavigation('overview')}\n        >\n          Test Overview\n        </button>\n        <button \n          class=\"btn btn-primary text-sm\" \n          on:click={() => testNavigation('connections')}\n        >\n          Test Connections\n        </button>\n        <button \n          class=\"btn btn-primary text-sm\" \n          on:click={() => testNavigation('dnp')}\n        >\n          Test DNP\n        </button>\n        <button \n          class=\"btn btn-primary text-sm\" \n          on:click={() => testNavigation('community')}\n        >\n          Test Community\n        </button>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { connectionActions, connectedServices, hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpActions, dnpCount } from '../stores/dnp';\n  import { currentRoute, navigateTo } from '../utils/simple-router';\n  import { justRegistered, authActions } from '../stores/auth';\n  import Navigation from './Navigation.svelte';\n  import ServiceConnections from './ServiceConnections.svelte';\n  import DnpManager from './DnpManager.svelte';\n  import EnforcementPlanning from './EnforcementPlanning.svelte';\n  import CommunityLists from './CommunityLists.svelte';\n  import UserProfile from './UserProfile.svelte';\n  import SimpleTest from './SimpleTest.svelte';\n  \n  let showWelcomeMessage = false;\n  \n  onMount(async () => {\n    try {\n      await connectionActions.fetchConnections();\n    } catch (error) {\n      console.log('Connection fetch failed (backend not running):', error);\n    }\n    \n    try {\n      await dnpActions.fetchDnpList();\n    } catch (error) {\n      console.log('DNP list fetch failed (backend not running):', error);\n    }\n    \n    // Show welcome message for newly registered users\n    if ($justRegistered) {\n      showWelcomeMessage = true;\n      // Auto-hide welcome message after 5 seconds\n      setTimeout(() => {\n        showWelcomeMessage = false;\n        authActions.clearJustRegistered();\n      }, 5000);\n    }\n  });\n\n  function setActiveTab(tab: string) {\n    console.log('Dashboard: Navigating to:', tab);\n    navigateTo(tab);\n  }\n  \n  // Debug: Log route changes\n  $: {\n    console.log('Dashboard: Current route changed to:', $currentRoute);\n  }\n  \n  function dismissWelcome() {\n    showWelcomeMessage = false;\n    authActions.clearJustRegistered();\n  }\n</script>\n\n\n\n<div class=\"min-h-screen bg-uswds-base-lightest\">\n  <Navigation />\n\n  <!-- Welcome Message for New Users -->\n  {#if showWelcomeMessage}\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-6\">\n      <div class=\"rounded-uswds-md bg-green-50 p-uswds-4 border border-green-200\">\n        <div class=\"flex\">\n          <div class=\"\">\n            <svg class=\"icon-uswds icon-uswds--lg icon-uswds--success\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3 flex-1\">\n            <h3 class=\"text-uswds-sm font-medium text-uswds-green-50\">\n              Welcome to No Drake in the House! 🎵\n            </h3>\n            <div class=\"mt-2 text-uswds-sm text-uswds-green-50\">\n              <p>Your account has been created successfully. Get started by connecting your music streaming services and building your first DNP list.</p>\n            </div>\n            <div class=\"mt-4\">\n              <div class=\"-mx-2 -my-1.5 flex\">\n                <button\n                  type=\"button\"\n                  on:click|preventDefault={() => setActiveTab('connections')}\n                  class=\"bg-green-50 px-2 py-1.5 rounded-uswds-md text-uswds-sm font-medium text-uswds-green-50 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600\"\n                >\n                  Connect Services\n                </button>\n                <button\n                  type=\"button\"\n                  on:click|preventDefault={() => dismissWelcome()}\n                  class=\"ml-3 bg-green-50 px-2 py-1.5 rounded-uswds-md text-uswds-sm font-medium text-uswds-green-50 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600\"\n                >\n                  Dismiss\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"ml-auto pl-3\">\n            <div class=\"-mx-1.5 -my-1.5\">\n              <button\n                type=\"button\"\n                on:click|preventDefault={() => dismissWelcome()}\n                class=\"flex bg-green-50 rounded-uswds-md p-uswds-1.5 text-uswds-green-50 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600\"\n              >\n                <span class=\"sr-only\">Dismiss</span>\n                <svg class=\"icon-uswds icon-uswds--lg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Main Content -->\n  <main class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n    <!-- Debug Test Component -->\n    <SimpleTest />\n    \n    {#if $currentRoute === 'overview'}\n      <!-- Overview Tab -->\n      <div class=\"px-4 py-6 sm:px-0\">\n        <div class=\"grid grid-cols-1 gap-uswds-6 sm:grid-cols-2 lg:grid-cols-3\">\n          <!-- Connected Services Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-uswds-lg\">\n            <div class=\"p-uswds-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"icon-uswds icon-uswds--lg icon-uswds--neutral\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-uswds-sm font-medium text-uswds-base-darker truncate\">\n                      Connected Services\n                    </dt>\n                    <dd class=\"text-uswds-lg font-medium text-uswds-base-darker\">\n                      {$connectedServices.length}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-uswds-base-lightest px-5 py-3\">\n              <div class=\"text-uswds-sm\">\n                <button\n                  type=\"button\"\n                  on:click|preventDefault={() => setActiveTab('connections')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage connections\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- DNP List Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-uswds-lg\">\n            <div class=\"p-uswds-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"icon-uswds icon-uswds--lg icon-uswds--neutral\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-uswds-sm font-medium text-uswds-base-darker truncate\">\n                      Blocked Artists\n                    </dt>\n                    <dd class=\"text-uswds-lg font-medium text-uswds-base-darker\">\n                      {$dnpCount}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-uswds-base-lightest px-5 py-3\">\n              <div class=\"text-uswds-sm\">\n                <button\n                  type=\"button\"\n                  on:click|preventDefault={() => setActiveTab('dnp')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage DNP list\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Status Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-uswds-lg\">\n            <div class=\"p-uswds-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"icon-uswds icon-uswds--lg {$hasActiveSpotifyConnection ? 'icon-uswds--success' : 'icon-uswds--neutral'}\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-uswds-sm font-medium text-uswds-base-darker truncate\">\n                      System Status\n                    </dt>\n                    <dd class=\"text-uswds-lg font-medium text-uswds-base-darker\">\n                      {$hasActiveSpotifyConnection ? 'Active' : 'Setup Required'}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-uswds-base-lightest px-5 py-3\">\n              <div class=\"text-uswds-sm\">\n                {#if !$hasActiveSpotifyConnection}\n                  <button\n                    type=\"button\"\n                    on:click|preventDefault={() => setActiveTab('connections')}\n                    class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                  >\n                    Connect Spotify\n                  </button>\n                {:else}\n                  <span class=\"text-uswds-green-50\">Ready to use</span>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"mt-8\">\n          <h3 class=\"text-uswds-lg leading-6 font-medium text-uswds-base-darker mb-4\">\n            Quick Actions\n          </h3>\n          <div class=\"grid grid-cols-1 gap-uswds-4 sm:grid-cols-2\">\n            <button\n              type=\"button\"\n              on:click|preventDefault={() => setActiveTab('dnp')}\n              class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-uswds-lg p-uswds-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg class=\"icon-uswds icon-uswds--xl icon-uswds--neutral mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              <span class=\"mt-2 block text-uswds-sm font-medium text-uswds-base-darker\">\n                Add Artist to DNP List\n              </span>\n            </button>\n            \n            {#if $hasActiveSpotifyConnection && $dnpCount > 0}\n              <button\n                type=\"button\"\n                on:click|preventDefault={() => setActiveTab('enforcement')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-uswds-lg p-uswds-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"icon-uswds icon-uswds--xl icon-uswds--neutral mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span class=\"mt-2 block text-uswds-sm font-medium text-uswds-base-darker\">\n                  Plan Enforcement\n                </span>\n              </button>\n            {:else}\n              <button\n                type=\"button\"\n                on:click|preventDefault={() => setActiveTab('connections')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-uswds-lg p-uswds-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"icon-uswds icon-uswds--xl icon-uswds--neutral mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                </svg>\n                <span class=\"mt-2 block text-uswds-sm font-medium text-uswds-base-darker\">\n                  Connect Spotify\n                </span>\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {:else if $currentRoute === 'connections'}\n      <ServiceConnections />\n    {:else if $currentRoute === 'dnp'}\n      <DnpManager />\n    {:else if $currentRoute === 'enforcement'}\n      <EnforcementPlanning />\n    {:else if $currentRoute === 'community'}\n      <CommunityLists />\n    {:else if $currentRoute === 'profile'}\n      <UserProfile />\n    {/if}\n  </main>\n</div>","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport { isAuthenticated, authActions } from \"./lib/stores/auth\";\n\timport { initRouter } from \"./lib/utils/simple-router\";\n\timport Login from \"./lib/components/Login.svelte\";\n\timport Dashboard from \"./lib/components/Dashboard.svelte\";\n\t// import { fixTextLayout, fixIconConstraints, fixSpacing } from \"./lib/utils/layout-fixes.js\";\n\n\tlet isInitialized = false;\n\n\tonMount(async () => {\n\t\tconsole.log(\"App mounting...\");\n\t\ttry {\n\t\t\t// Initialize router\n\t\t\tinitRouter();\n\t\t\tconsole.log(\"Router initialized\");\n\n\t\t\t// Initialize auth state\n\t\t\tawait authActions.fetchProfile();\n\t\t\tconsole.log(\"Auth profile fetched\");\n\n\t\t\t// Apply layout fixes\n\t\t\t// fixTextLayout();\n\t\t\t// fixIconConstraints();\n\t\t\t// fixSpacing();\n\t\t\t// console.log(\"Layout fixes applied\");\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error during app initialization:\", error);\n\t\t} finally {\n\t\t\tisInitialized = true;\n\t\t\tconsole.log(\"App initialized, isAuthenticated:\", $isAuthenticated);\n\t\t}\n\t});\n</script>\n\n{#if !isInitialized}\n\t<div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n\t\t<div class=\"text-center\">\n\t\t\t<div class=\"icon icon-xl icon-primary animate-spin rounded-full border-b-2 border-primary mx-auto\"></div>\n\t\t\t<p class=\"mt-4 text-gray-600\">Loading...</p>\n\t\t</div>\n\t</div>\n{:else if $isAuthenticated}\n\t<Dashboard />\n{:else}\n\t<Login />\n{/if}\n","import App from './App.svelte';\nimport './app.css';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","init_binding_group","group","_inputs","p","inputs","input","r","splice","indexOf","set_data","set_input_value","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","filter","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","$on","index","$set","obj","keys","window","__svelte","v","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","every","Boolean","auto","started","values","pending","cleanup","sync","result","unsubscribers","config","apiUrl","apiVersion","appName","environment","features","twoFactorAuth","communityLists","analytics","development","hotReload","debugMode","external","spotifyClientId","appleMusicToken","ui","defaultTheme","performance","enableServiceWorker","cacheDuration","parseInt","isDevelopment","isProduction","getApiEndpoint","path","normalizedPath","startsWith","apiPath","ApiError","constructor","status","message","super","defineProperty","enumerable","configurable","async","apiCall","endpoint","token","localStorage","getItem","requestConfig","headers","Authorization","response","fetch","json","ok","error","api","method","body","JSON","stringify","authStore","user","refreshToken","isAuthenticated","isLoading","justRegistered","$auth","currentUser","authActions","login","email","password","totpCode","state","totp_code","success","access_token","refresh_token","setItem","fetchProfile","register","confirmPassword","termsAccepted","confirm_password","terms_accepted","autoLogin","errors","errorData","parse","parseError","console","logout","removeItem","newRefreshToken","setup2FA","qrCodeUrl","qr_code_url","secret","verify2FA","code","disable2FA","clearJustRegistered","currentRoute","navigateTo","route","log","overview","connections","dnp","enforcement","community","profile","history","pushState","title","div","div1","label","div0","div2","svg","circle","create_if_block_4","create_if_block_3","create_if_block_2","create_if_block_1","create_if_block","button0","disabled","button0_disabled_value","div5","form","label0","input0","label1","input1","div3","div4","button1","dispatch","$$props","showTotpInput","$$invalidate","emailValid","test","passwordValid","formValid","toLowerCase","includes","trim","t1_value","t1","each_value","create_if_block_13","create_if_block_12","create_if_block_11","create_if_block_10","create_if_block_9","span1","span1_class_value","div13","span0","div12","span2","span3","div7","div6","span4","div9","div8","span5","div11","div10","span6","t_value","t","create_if_block_14","create_if_block_15","create_if_block_8","if_block2","create_if_block_7","create_if_block_5","create_if_block_6","input2","label2","input3","label3","fieldErrors","passwordLength","passwordUppercase","passwordLowercase","passwordNumber","passwordSpecial","passwordStrength","passwordStrengthText","passwordsMatch","checked","button","if_block0","button1_disabled_value","h3","h4","img","img_src_value","if_block1","verificationCode","step","codeValid","navigator","clipboard","writeText","span","if_block4","h2","p0","p1","handleSubmit","twoFactorSetupRef","mode","pendingEmail","backToLogin","err","setTimeout","field","showSuccess","$$value","connectionsStore","connectedServices","$connections","conn","spotifyConnection","find","provider","hasActiveSpotifyConnection","$spotify","connectionActions","fetchConnections","initiateSpotifyAuth","location","auth_url","handleSpotifyCallback","disconnectSpotify","checkSpotifyHealth","dnpStore","entries","searchResults","isSearching","$dnp","entry","artist","dnpCount","dnpTags","allTags","flatMap","tags","sort","dnpActions","fetchDnpList","searchArtists","query","limit","encodeURIComponent","addArtist","artistQuery","note","removeArtist","artistId","updateEntry","bulkImport","format","exportList","clearSearch","t2_value","button2","button2_class_value","button3","button3_class_value","button4","button4_class_value","button5","button5_class_value","button6","button6_class_value","nav0","nav1","t2","handleLogout","navigate","getStatusColor","formatDate","created_at","provider_user_id","scopes","join","div27","div21","ul0","li0","li1","li2","div26","dateString","Date","toLocaleDateString","isConnecting","urlParams","URLSearchParams","search","replaceState","pathname","each_value_1","metadata","image","img_alt_value","canonical_name","genres","t0_value","span_class_value","color","t0","each_value_2","getProviderBadges","t3_value","t3","textarea","badges","external_ids","spotify","apple","musicbrainz","searchTimeout","searchQuery","selectedArtist","isAdding","selectArtist","clearTimeout","tagArray","split","src","id","t9","t9_value","li","t4","t4_value","isEditing","editTags","editNote","isUpdating","isRemoving","confirm","svg0","path0","selectedCount","bulkactions_changes","ul","current","dnpentry_changes","t8_value","t8","if_block3","selectedTag","showAddForm","selectedEntries","toggleSelectEntry","clearSelection","filteredEntries","$dnpStore","matchesSearch","some","tag","matchesTag","promises","all","defaultOptions","aggressiveness","blockCollabs","blockFeaturing","blockSongwriterOnly","enforcementStore","currentPlan","isPlanning","isExecuting","currentBatch","actionHistory","hasActivePlan","$enforcement","executionProgress","totalItems","completedItems","failedItems","skippedItems","summary","processedItems","total","processed","completed","failed","skipped","percentage","round","canRollback","batch","items","item","enforcementActions","updateOptions","createPlan","providers","dryRun","currentOptions","executePlan","planId","pollProgress","batchId","pollInterval","setInterval","clearInterval","rollbackBatch","fetchActionHistory","clearPlan","clearError","if_block","input3_checked_value","input4","input4_checked_value","input5","input5_checked_value","div19","h40","fieldset","legend","div18","h41","div17","div16","div14","div15","updateAggressiveness","level","toggleOption","$enforcementStore","formatDuration","estimatedDuration","resumable","impact","likedSongs","toRemove","collabsFound","br","playlists","toScrub","tracksToRemove","featuringFound","t5","t5_value","following","toUnfollow","radioSeeds","toFilter","capabilities","h5","replace","getCapabilityColor","path_d_value","getProviderIcon","duration","seconds","floor","capability","plan","button_disabled_value","t6_value","t6","t13","t13_value","t17","t17_value","t21","t21_value","t10_value","t16_value","t10","t16","button_title_value","errorMessage","action","entityType","entityId","getActionIcon","progress","$executionProgress","completedAt","createdAt","t11_value","t14_value","getSuccessRate","div24","div23","div22","div20","div25","t7","t7_value","t11","t14","t19","t19_value","t23","t23_value","t27","t27_value","t31","t31_value","t35","t35_value","t41","t41_value","toLocaleString","alert","button0_class_value","button1_class_value","nav","activeTab","setActiveTab","tab","$hasActiveSpotifyConnection","communityStore","lists","currentList","subscriptions","subscriptionImpact","isLoadingList","isLoadingImpact","sortBy","sortOrder","filteredLists","$community","description","criteria","aValue","bValue","getTime","comparison","subscribedListIds","sub","list_id","$subscribedIds","listId","communityActions","fetchLists","fetchListDetails","fetchSubscriptions","getSubscriptionImpact","versionPinned","autoUpdate","version_pinned","auto_update","updateSubscription","createList","listData","updateSearch","updateSort","clearCurrentList","a_href_value","governance_url","update_cadence","artist_count","subscriber_count","t20_value","version","updated_at","getUpdateCadenceColor","svg1","path1","t12","t12_value","t20","cadence","isSubscribed","$subscribedListIds","artists_to_add","artists","t18_value","t28_value","t32_value","t40_value","h1","h30","p2","h42","p3","h31","t18","t28","t32","t36","t36_value","t40","input1_value_value","rationale_link","added_at","showSubscriptionOptions","$communityStore","textarea0","textarea1","label4","option0","option1","option2","option3","label5","label6","governanceUrl","updateCadence","visibility","isCreating","input0_id_value","input0_checked_value","label0_for_value","input1_id_value","input1_checked_value","label1_for_value","input2_id_value","input2_checked_value","label2_for_value","h50","h51","t24","t24_value","listName","viewListDetails","handleAutoUpdateChange","subscription","input_value_value","option4","option5","showCreateForm","last_login","totp_enabled","email_notifications","privacy_mode","input_placeholder_value","year","month","day","hour","minute","editingProfile","editEmail","editSettings","two_factor_enabled","show2FASetup","show2FADisable","exportLoading","showDeleteConfirm","deleteConfirmEmail","deleteReason","deleteLoading","loadProfile","settings","blob","Blob","URL","createObjectURL","download","toISOString","click","revokeObjectURL","confirmation_email","reason","handle2FADisable","h20","h21","testNavigation","$currentRoute","dl0","dt0","dd0","dl1","dt1","dd1","svg2","path2","dl2","dt2","dd2","main","showWelcomeMessage","dismissWelcome","$justRegistered","isInitialized","initialRoute","initRouter","$isAuthenticated"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}