# Default values for kiro
# This is a YAML-formatted file.

global:
  imageRegistry: ""
  imagePullSecrets: []

# Backend service configuration
backend:
  image:
    repository: kiro/backend
    tag: latest
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  
  env:
    DATABASE_URL: "postgres://kiro:password@kiro-postgresql:5432/kiro"
    REDIS_URL: "redis://kiro-redis-master:6379"
    JWT_SECRET: "production_jwt_secret_change_me"
    RUST_LOG: "info"
    TOTP_ISSUER: "No Drake in the House"
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  livenessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Frontend service configuration
frontend:
  image:
    repository: kiro/frontend
    tag: latest
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 5000
  
  env:
    VITE_API_URL: "http://localhost:3000"
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"
  
  livenessProbe:
    httpGet:
      path: /
      port: 5000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /
      port: 5000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    username: kiro
    password: password
    database: kiro
  primary:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "250m"

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 2Gi
    resources:
      requests:
        memory: "128Mi"
        cpu: "50m"
      limits:
        memory: "256Mi"
        cpu: "100m"

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: kiro.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls: []

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod security context
podSecurityContext:
  fsGroup: 2000

# Security context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Namespace configuration
namespace:
  create: false
  name: ""

# ConfigMap configuration
configMap:
  create: false

# Migration configuration
migration:
  enabled: false
  image:
    repository: kiro/backend
    tag: latest
    pullPolicy: IfNotPresent
  restartPolicy: Never
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

# Secrets configuration
secrets:
  create: false
  databaseUrl: ""
  redisUrl: ""
  jwtSecret: ""
  kmsKeyId: ""
  spotifyClientSecret: ""
  appleMusicPrivateKey: ""