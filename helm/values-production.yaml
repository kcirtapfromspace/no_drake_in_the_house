# Production environment values
global:
  environment: production
  domain: nodrakeinthe.house

backend:
  image:
    repository: ghcr.io/your-org/kiro/backend
    tag: latest
    pullPolicy: IfNotPresent

  replicas: 3

  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1000m"

  env:
    RUST_LOG: "warn"
    ENVIRONMENT: "production"

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 70

  podDisruptionBudget:
    enabled: true
    minAvailable: 2

frontend:
  image:
    repository: ghcr.io/your-org/kiro/frontend
    tag: latest
    pullPolicy: IfNotPresent

  replicas: 3

  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "400m"

  env:
    VITE_API_URL: "https://api.nodrakeinthe.house"
    VITE_ENVIRONMENT: "production"

  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70

  podDisruptionBudget:
    enabled: true
    minAvailable: 2

postgres:
  enabled: true
  auth:
    username: kiro_prod
    database: kiro_prod
  primary:
    persistence:
      size: 100Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "2Gi"
        cpu: "1000m"
      limits:
        memory: "4Gi"
        cpu: "2000m"
  readReplicas:
    replicaCount: 2
    persistence:
      size: 100Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

redis:
  enabled: true
  auth:
    enabled: true
  master:
    persistence:
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
  replica:
    replicaCount: 2
    persistence:
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "512Mi"
        cpu: "250m"
      limits:
        memory: "1Gi"
        cpu: "500m"

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: nodrakeinthe.house
      paths:
        - path: /
          pathType: Prefix
          service: frontend
    - host: api.nodrakeinthe.house
      paths:
        - path: /
          pathType: Prefix
          service: backend
  tls:
    - secretName: production-tls
      hosts:
        - nodrakeinthe.house
        - api.nodrakeinthe.house

monitoring:
  enabled: true
  prometheus:
    enabled: true
    retention: "30d"
    resources:
      requests:
        memory: "2Gi"
        cpu: "500m"
      limits:
        memory: "4Gi"
        cpu: "1000m"
  grafana:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi

backup:
  enabled: true
  schedule: "0 1 * * *"
  retention: "30d"
  s3:
    enabled: true
    bucket: "kiro-backups-prod"

security:
  networkPolicies:
    enabled: true
  podSecurityPolicy:
    enabled: true
  rbac:
    enabled: true