{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/lib/utils/config.ts","../../src/lib/utils/api.ts","../../src/lib/stores/auth.ts","../../src/lib/utils/router.ts","../../src/lib/components/LoginForm.svelte","../../src/lib/components/RegisterForm.svelte","../../src/lib/components/TwoFactorSetup.svelte","../../src/lib/components/TwoFactorVerification.svelte","../../src/lib/components/Login.svelte","../../src/lib/stores/connections.ts","../../src/lib/stores/dnp.ts","../../src/lib/components/Navigation.svelte","../../src/lib/components/ServiceConnections.svelte","../../src/lib/components/ArtistSearch.svelte","../../src/lib/components/DnpEntry.svelte","../../src/lib/components/BulkActions.svelte","../../src/lib/components/DnpManager.svelte","../../src/lib/stores/enforcement.ts","../../src/lib/components/EnforcementOptions.svelte","../../src/lib/components/EnforcementPreview.svelte","../../src/lib/components/EnforcementExecution.svelte","../../src/lib/components/ActionHistory.svelte","../../src/lib/components/EnforcementPlanning.svelte","../../src/lib/stores/community.ts","../../src/lib/components/CommunityListCard.svelte","../../src/lib/components/CommunityListDetail.svelte","../../src/lib/components/CreateCommunityList.svelte","../../src/lib/components/MySubscriptions.svelte","../../src/lib/components/CommunityLists.svelte","../../src/lib/components/UserProfile.svelte","../../src/lib/components/Dashboard.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","// Configuration utilities for environment-based settings\nexport const config = {\n    // API Configuration\n    apiUrl: import.meta.env.VITE_API_URL || (typeof window !== 'undefined' ? window.location.origin : 'http://localhost:3000'),\n    apiVersion: import.meta.env.VITE_API_VERSION || 'v1',\n    // App Configuration\n    appName: import.meta.env.VITE_APP_NAME || 'No Drake in the House',\n    environment: import.meta.env.VITE_ENVIRONMENT || 'development',\n    // Feature Flags\n    features: {\n        twoFactorAuth: import.meta.env.VITE_ENABLE_2FA === 'true',\n        communityLists: import.meta.env.VITE_ENABLE_COMMUNITY_LISTS === 'true',\n        analytics: import.meta.env.VITE_ENABLE_ANALYTICS === 'true',\n    },\n    // Development Configuration\n    development: {\n        hotReload: import.meta.env.VITE_HOT_RELOAD === 'true',\n        debugMode: import.meta.env.VITE_DEBUG_MODE === 'true',\n    },\n    // External Services\n    external: {\n        spotifyClientId: import.meta.env.VITE_SPOTIFY_CLIENT_ID,\n        appleMusicToken: import.meta.env.VITE_APPLE_MUSIC_DEVELOPER_TOKEN,\n    },\n    // UI Configuration\n    ui: {\n        defaultTheme: import.meta.env.VITE_DEFAULT_THEME || 'light',\n    },\n    // Performance Configuration\n    performance: {\n        enableServiceWorker: import.meta.env.VITE_ENABLE_SERVICE_WORKER === 'true',\n        cacheDuration: parseInt(import.meta.env.VITE_CACHE_DURATION || '300000'),\n    },\n    // Helper methods\n    isDevelopment: () => config.environment === 'development',\n    isProduction: () => config.environment === 'production',\n    getApiEndpoint: (path) => {\n        const normalizedPath = path.startsWith('/') ? path : `/${path}`;\n        const apiPath = normalizedPath.startsWith('/api/') ? normalizedPath : `/api/${config.apiVersion}${normalizedPath}`;\n        return `${config.apiUrl}${apiPath}`;\n    }\n};\nexport default config;\n","import { config } from './config';\nexport class ApiError extends Error {\n    constructor(status, message) {\n        super(message);\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: status\n        });\n        this.name = 'ApiError';\n    }\n}\nexport async function apiCall(endpoint, options = {}) {\n    const token = localStorage.getItem('auth_token');\n    const requestConfig = {\n        ...options,\n        headers: {\n            'Content-Type': 'application/json',\n            ...(token && { Authorization: `Bearer ${token}` }),\n            ...options.headers,\n        },\n    };\n    try {\n        const url = config.getApiEndpoint(endpoint);\n        const response = await fetch(url, requestConfig);\n        const result = await response.json();\n        if (!response.ok) {\n            throw new ApiError(response.status, result.message || 'Request failed');\n        }\n        return result;\n    }\n    catch (error) {\n        if (error instanceof ApiError) {\n            throw error;\n        }\n        throw new ApiError(0, 'Network error occurred');\n    }\n}\nexport const api = {\n    get: (endpoint) => apiCall(endpoint),\n    post: (endpoint, data) => apiCall(endpoint, { method: 'POST', body: JSON.stringify(data) }),\n    put: (endpoint, data) => apiCall(endpoint, { method: 'PUT', body: JSON.stringify(data) }),\n    delete: (endpoint, data) => apiCall(endpoint, {\n        method: 'DELETE',\n        body: data ? JSON.stringify(data) : undefined\n    }),\n};\n","import { writable, derived } from 'svelte/store';\nimport { api } from '../utils/api';\nconst initialState = {\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    refreshToken: localStorage.getItem('refresh_token'),\n    isAuthenticated: false,\n    isLoading: false,\n};\nexport const authStore = writable(initialState);\nexport const isAuthenticated = derived(authStore, ($auth) => $auth.isAuthenticated && $auth.token !== null);\nexport const currentUser = derived(authStore, ($auth) => $auth.user);\n// Auth actions\nexport const authActions = {\n    login: async (email, password, totpCode) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const result = await api.post('/auth/login', {\n                email,\n                password,\n                totp_code: totpCode\n            });\n            if (result.success) {\n                const { access_token, refresh_token } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', refresh_token);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: refresh_token,\n                    isAuthenticated: true,\n                    isLoading: false,\n                }));\n                // Fetch user profile\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                authStore.update(state => ({ ...state, isLoading: false }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            return { success: false, message: error.message || 'Network error occurred' };\n        }\n    },\n    register: async (email, password, confirmPassword, termsAccepted) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const result = await api.post('/auth/register', {\n                email,\n                password,\n                confirm_password: confirmPassword,\n                terms_accepted: termsAccepted\n            });\n            if (result.success) {\n                // Check if auto-login was successful (tokens returned)\n                if (result.data?.access_token && result.data?.refresh_token) {\n                    const { access_token, refresh_token } = result.data;\n                    localStorage.setItem('auth_token', access_token);\n                    localStorage.setItem('refresh_token', refresh_token);\n                    authStore.update(state => ({\n                        ...state,\n                        token: access_token,\n                        refreshToken: refresh_token,\n                        isAuthenticated: true,\n                        isLoading: false,\n                    }));\n                    // Fetch user profile\n                    await authActions.fetchProfile();\n                    return { success: true, autoLogin: true };\n                }\n                else {\n                    authStore.update(state => ({ ...state, isLoading: false }));\n                    return { success: true, autoLogin: false, message: result.message };\n                }\n            }\n            else {\n                authStore.update(state => ({ ...state, isLoading: false }));\n                return {\n                    success: false,\n                    message: result.message,\n                    errors: result.data?.errors || null\n                };\n            }\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            // Handle structured error responses\n            if (error.status === 400 && error.message) {\n                try {\n                    const errorData = JSON.parse(error.message);\n                    if (errorData.errors) {\n                        return {\n                            success: false,\n                            message: errorData.message || 'Registration validation failed',\n                            errors: errorData.errors\n                        };\n                    }\n                }\n                catch (parseError) {\n                    // Fall through to generic error handling\n                }\n            }\n            return { success: false, message: error.message || 'Network error occurred' };\n        }\n    },\n    fetchProfile: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (!token)\n            return;\n        try {\n            const result = await api.get('/users/profile');\n            if (result.success) {\n                authStore.update(state => ({\n                    ...state,\n                    user: result.data,\n                    isAuthenticated: true,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch profile:', error);\n        }\n    },\n    logout: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            try {\n                await api.post('/auth/logout');\n            }\n            catch (error) {\n                console.error('Logout request failed:', error);\n            }\n        }\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('refresh_token');\n        authStore.set({\n            user: null,\n            token: null,\n            refreshToken: null,\n            isAuthenticated: false,\n            isLoading: false,\n        });\n    },\n    refreshToken: async () => {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (!refreshToken)\n            return false;\n        try {\n            const result = await api.post('/auth/refresh', { refresh_token: refreshToken });\n            if (result.success) {\n                const { access_token, refresh_token: newRefreshToken } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', newRefreshToken);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: newRefreshToken,\n                    isAuthenticated: true,\n                }));\n                return true;\n            }\n        }\n        catch (error) {\n            console.error('Token refresh failed:', error);\n        }\n        return false;\n    },\n    // 2FA Management\n    setup2FA: async () => {\n        try {\n            const result = await api.post('/auth/2fa/setup');\n            if (result.success) {\n                return {\n                    success: true,\n                    qrCodeUrl: result.data.qr_code_url,\n                    secret: result.data.secret\n                };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to setup 2FA' };\n        }\n    },\n    verify2FA: async (code) => {\n        try {\n            const result = await api.post('/auth/2fa/verify', { totp_code: code });\n            if (result.success) {\n                // Update user profile to reflect 2FA is now enabled\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to verify 2FA code' };\n        }\n    },\n    disable2FA: async (code) => {\n        try {\n            const result = await api.post('/auth/2fa/disable', { totp_code: code });\n            if (result.success) {\n                // Update user profile to reflect 2FA is now disabled\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: error.message || 'Failed to disable 2FA' };\n        }\n    },\n};\n// Initialize auth state on app load\nif (typeof window !== 'undefined') {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n        authStore.update(state => ({\n            ...state,\n            token,\n            isAuthenticated: true,\n        }));\n        authActions.fetchProfile();\n    }\n}\n","import { writable } from 'svelte/store';\nexport const currentRoute = writable('overview');\nexport const routes = {\n    overview: {\n        path: '/',\n        component: null, // Will be handled in Dashboard component\n        title: 'Overview'\n    },\n    connections: {\n        path: '/connections',\n        component: null,\n        title: 'Service Connections'\n    },\n    dnp: {\n        path: '/dnp',\n        component: null,\n        title: 'DNP List'\n    },\n    enforcement: {\n        path: '/enforcement',\n        component: null,\n        title: 'Enforcement'\n    },\n    community: {\n        path: '/community',\n        component: null,\n        title: 'Community Lists'\n    },\n    profile: {\n        path: '/profile',\n        component: null,\n        title: 'Profile & Settings'\n    }\n};\nexport const router = {\n    navigate: (route) => {\n        currentRoute.set(route);\n        // Update URL without page reload\n        if (typeof window !== 'undefined') {\n            const routeConfig = routes[route];\n            if (routeConfig) {\n                window.history.pushState({}, routeConfig.title, routeConfig.path);\n                document.title = `${routeConfig.title} - No Drake in the House`;\n            }\n        }\n    },\n    init: () => {\n        if (typeof window !== 'undefined') {\n            // Handle browser back/forward buttons\n            window.addEventListener('popstate', () => {\n                const path = window.location.pathname;\n                const route = Object.keys(routes).find(key => routes[key].path === path) || 'overview';\n                currentRoute.set(route);\n            });\n            // Set initial route based on URL\n            const path = window.location.pathname;\n            const route = Object.keys(routes).find(key => routes[key].path === path) || 'overview';\n            currentRoute.set(route);\n        }\n    }\n};\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  \n  let email = '';\n  let password = '';\n  let totpCode = '';\n  let showTotpInput = false;\n  \n  // Email validation\n  $: emailValid = email.length === 0 || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  $: passwordValid = password.length === 0 || password.length >= 8;\n  $: formValid = emailValid && passwordValid && email.length > 0 && password.length > 0;\n  \n  function handleSubmit() {\n    if (!formValid) return;\n    \n    dispatch('login', {\n      email: email.trim(),\n      password,\n      totpCode: totpCode || undefined\n    });\n  }\n  \n\n  \n  // Reset TOTP input when error changes\n  $: if (error && !error.toLowerCase().includes('2fa') && !error.toLowerCase().includes('totp')) {\n    showTotpInput = false;\n    totpCode = '';\n  }\n  \n  // Show TOTP input if error indicates it's required\n  $: if (error && (error.toLowerCase().includes('2fa') || error.toLowerCase().includes('totp'))) {\n    showTotpInput = true;\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div>\n    <h2 class=\"text-center text-3xl font-extrabold text-gray-900\">\n      Sign in to your account\n    </h2>\n    <p class=\"mt-2 text-center text-sm text-gray-600\">\n      Access your music blocklist manager\n    </p>\n  </div>\n  \n  <form class=\"space-y-4\" on:submit|preventDefault={handleSubmit}>\n    <!-- Email Field -->\n    <div>\n      <label for=\"login-email\" class=\"block text-sm font-medium text-gray-700\">\n        Email address\n      </label>\n      <div class=\"mt-1\">\n        <input\n          id=\"login-email\"\n          name=\"email\"\n          type=\"email\"\n          autocomplete=\"email\"\n          required\n          bind:value={email}\n          class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          class:border-red-300={!emailValid}\n          class:focus:ring-red-500={!emailValid}\n          class:focus:border-red-500={!emailValid}\n          placeholder=\"Enter your email\"\n        />\n        {#if !emailValid}\n          <p class=\"mt-1 text-sm text-red-600\">Please enter a valid email address</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Password Field -->\n    <div>\n      <label for=\"login-password\" class=\"block text-sm font-medium text-gray-700\">\n        Password\n      </label>\n      <div class=\"mt-1\">\n        <input\n          id=\"login-password\"\n          name=\"password\"\n          type=\"password\"\n          autocomplete=\"current-password\"\n          required\n          bind:value={password}\n          class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          class:border-red-300={!passwordValid}\n          class:focus:ring-red-500={!passwordValid}\n          class:focus:border-red-500={!passwordValid}\n          placeholder=\"Enter your password\"\n        />\n        {#if !passwordValid}\n          <p class=\"mt-1 text-sm text-red-600\">Password must be at least 8 characters</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- 2FA Code Field (shown when required) -->\n    {#if showTotpInput}\n      <div>\n        <label for=\"login-totp\" class=\"block text-sm font-medium text-gray-700\">\n          2FA Authentication Code\n        </label>\n        <div class=\"mt-1\">\n          <input\n            id=\"login-totp\"\n            name=\"totp\"\n            type=\"text\"\n            autocomplete=\"one-time-code\"\n            bind:value={totpCode}\n            maxlength=\"6\"\n            pattern=\"[0-9]{6}\"\n            class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n            placeholder=\"Enter 6-digit code\"\n          />\n          <p class=\"mt-1 text-sm text-gray-500\">\n            Enter the 6-digit code from your authenticator app\n          </p>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"rounded-md bg-red-50 p-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm text-red-800\">{error}</p>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Submit Button -->\n    <div>\n      <button\n        type=\"submit\"\n        disabled={!formValid || isLoading}\n        class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        {#if isLoading}\n          <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Signing in...\n        {:else}\n          Sign in\n        {/if}\n      </button>\n    </div>\n\n    <!-- Switch to Register -->\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={() => dispatch('switchMode')}\n        class=\"text-indigo-600 hover:text-indigo-500 text-sm font-medium\"\n      >\n        Don't have an account? Create one\n      </button>\n    </div>\n  </form>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  export let success = '';\n  export let fieldErrors: Record<string, string> = {};\n  \n  let email = '';\n  let password = '';\n  let confirmPassword = '';\n  let termsAccepted = false;\n  \n  // Password strength requirements\n  $: passwordLength = password.length >= 8;\n  $: passwordUppercase = /[A-Z]/.test(password);\n  $: passwordLowercase = /[a-z]/.test(password);\n  $: passwordNumber = /\\d/.test(password);\n  $: passwordSpecial = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n  \n  $: passwordStrength = [\n    passwordLength,\n    passwordUppercase,\n    passwordLowercase,\n    passwordNumber,\n    passwordSpecial\n  ].filter(Boolean).length;\n  \n  $: passwordStrengthText = passwordStrength === 0 ? '' :\n    passwordStrength <= 2 ? 'Weak' :\n    passwordStrength <= 3 ? 'Fair' :\n    passwordStrength <= 4 ? 'Good' : 'Strong';\n  \n  $: passwordStrengthColor = passwordStrength === 0 ? '' :\n    passwordStrength <= 2 ? 'text-red-600' :\n    passwordStrength <= 3 ? 'text-yellow-600' :\n    passwordStrength <= 4 ? 'text-blue-600' : 'text-green-600';\n  \n  // Validation\n  $: emailValid = email.length === 0 || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  $: passwordValid = password.length === 0 || (passwordLength && passwordStrength >= 3);\n  $: passwordsMatch = confirmPassword.length === 0 || password === confirmPassword;\n  $: formValid = emailValid && passwordValid && passwordsMatch && termsAccepted &&\n                 email.length > 0 && password.length > 0 && confirmPassword.length > 0;\n  \n  function handleSubmit() {\n    if (!formValid || isLoading) return;\n    \n    dispatch('register', {\n      email: email.trim(),\n      password,\n      confirm_password: confirmPassword,\n      terms_accepted: termsAccepted\n    });\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div>\n    <h2 class=\"text-center text-3xl font-extrabold text-gray-900\">\n      Create your account\n    </h2>\n    <p class=\"mt-2 text-center text-sm text-gray-600\">\n      Join the music blocklist community\n    </p>\n  </div>\n  \n  <form class=\"space-y-4\" on:submit|preventDefault={handleSubmit}>\n    <!-- Email Field -->\n    <div>\n      <label for=\"register-email\" class=\"block text-sm font-medium text-gray-700\">\n        Email address\n      </label>\n      <div class=\"mt-1\">\n        <input\n          id=\"register-email\"\n          name=\"email\"\n          type=\"email\"\n          autocomplete=\"email\"\n          required\n          bind:value={email}\n          class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          class:border-red-300={!emailValid}\n          class:focus:ring-red-500={!emailValid}\n          class:focus:border-red-500={!emailValid}\n          placeholder=\"Enter your email\"\n        />\n        {#if fieldErrors.email}\n          <p class=\"mt-1 text-sm text-red-600\">{fieldErrors.email}</p>\n        {:else if !emailValid}\n          <p class=\"mt-1 text-sm text-red-600\">Please enter a valid email address</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Password Field -->\n    <div>\n      <label for=\"register-password\" class=\"block text-sm font-medium text-gray-700\">\n        Password\n      </label>\n      <div class=\"mt-1\">\n        <input\n          id=\"register-password\"\n          name=\"password\"\n          type=\"password\"\n          autocomplete=\"new-password\"\n          required\n          bind:value={password}\n          class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          class:border-red-300={fieldErrors.password || (!passwordValid && password.length > 0)}\n          class:focus:ring-red-500={fieldErrors.password || (!passwordValid && password.length > 0)}\n          class:focus:border-red-500={fieldErrors.password || (!passwordValid && password.length > 0)}\n          placeholder=\"Create a strong password\"\n        />\n        \n        <!-- Password Strength Indicator -->\n        {#if password.length > 0}\n          <div class=\"mt-2\">\n            <div class=\"flex items-center justify-between\">\n              <span class=\"text-sm text-gray-600\">Password strength:</span>\n              <span class=\"text-sm font-medium {passwordStrengthColor}\">\n                {passwordStrengthText}\n              </span>\n            </div>\n            <div class=\"mt-1 flex space-x-1\">\n              {#each Array(5) as _, i}\n                <div \n                  class=\"h-1 flex-1 rounded-full\"\n                  class:bg-red-200={passwordStrength <= 2}\n                  class:bg-yellow-200={passwordStrength === 3}\n                  class:bg-blue-200={passwordStrength === 4}\n                  class:bg-green-200={passwordStrength === 5}\n                  class:bg-red-500={passwordStrength <= 2 && i < passwordStrength}\n                  class:bg-yellow-500={passwordStrength === 3 && i < passwordStrength}\n                  class:bg-blue-500={passwordStrength === 4 && i < passwordStrength}\n                  class:bg-green-500={passwordStrength === 5 && i < passwordStrength}\n                  class:bg-gray-200={i >= passwordStrength}\n                ></div>\n              {/each}\n            </div>\n          </div>\n          \n          <!-- Password Requirements -->\n          <div class=\"mt-2 space-y-1\">\n            <p class=\"text-xs text-gray-600\">Password must contain:</p>\n            <div class=\"grid grid-cols-1 gap-1 text-xs\">\n              <div class=\"flex items-center\">\n                <div class=\"w-3 h-3 mr-2 flex-shrink-0\">\n                  <svg class=\"w-full h-full\" class:text-green-500={passwordLength} class:text-gray-400={!passwordLength} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span class:text-green-600={passwordLength} class:text-gray-500={!passwordLength}>\n                  At least 8 characters\n                </span>\n              </div>\n              <div class=\"flex items-center\">\n                <div class=\"w-3 h-3 mr-2 flex-shrink-0\">\n                  <svg class=\"w-full h-full\" class:text-green-500={passwordUppercase} class:text-gray-400={!passwordUppercase} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span class:text-green-600={passwordUppercase} class:text-gray-500={!passwordUppercase}>\n                  One uppercase letter\n                </span>\n              </div>\n              <div class=\"flex items-center\">\n                <div class=\"w-3 h-3 mr-2 flex-shrink-0\">\n                  <svg class=\"w-full h-full\" class:text-green-500={passwordLowercase} class:text-gray-400={!passwordLowercase} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span class:text-green-600={passwordLowercase} class:text-gray-500={!passwordLowercase}>\n                  One lowercase letter\n                </span>\n              </div>\n              <div class=\"flex items-center\">\n                <div class=\"w-3 h-3 mr-2 flex-shrink-0\">\n                  <svg class=\"w-full h-full\" class:text-green-500={passwordNumber} class:text-gray-400={!passwordNumber} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span class:text-green-600={passwordNumber} class:text-gray-500={!passwordNumber}>\n                  One number\n                </span>\n              </div>\n              <div class=\"flex items-center\">\n                <div class=\"w-3 h-3 mr-2 flex-shrink-0\">\n                  <svg class=\"w-full h-full\" class:text-green-500={passwordSpecial} class:text-gray-400={!passwordSpecial} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <span class:text-green-600={passwordSpecial} class:text-gray-500={!passwordSpecial}>\n                  One special character\n                </span>\n              </div>\n            </div>\n          </div>\n        {/if}\n        \n        {#if fieldErrors.password}\n          <p class=\"mt-1 text-sm text-red-600\">{fieldErrors.password}</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Confirm Password Field -->\n    <div>\n      <label for=\"confirm-password\" class=\"block text-sm font-medium text-gray-700\">\n        Confirm Password\n      </label>\n      <div class=\"mt-1\">\n        <input\n          id=\"confirm-password\"\n          name=\"confirmPassword\"\n          type=\"password\"\n          autocomplete=\"new-password\"\n          required\n          bind:value={confirmPassword}\n          class=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          class:border-red-300={!passwordsMatch && confirmPassword.length > 0}\n          class:focus:ring-red-500={!passwordsMatch && confirmPassword.length > 0}\n          class:focus:border-red-500={!passwordsMatch && confirmPassword.length > 0}\n          placeholder=\"Confirm your password\"\n        />\n        {#if fieldErrors.confirm_password}\n          <p class=\"mt-1 text-sm text-red-600\">{fieldErrors.confirm_password}</p>\n        {:else if !passwordsMatch && confirmPassword.length > 0}\n          <p class=\"mt-1 text-sm text-red-600\">Passwords do not match</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Terms Acceptance -->\n    <div class=\"flex items-start\">\n      <div class=\"flex items-center h-5\">\n        <input\n          id=\"terms-accepted\"\n          name=\"termsAccepted\"\n          type=\"checkbox\"\n          required\n          bind:checked={termsAccepted}\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n        />\n      </div>\n      <div class=\"ml-3 text-sm\">\n        <label for=\"terms-accepted\" class=\"text-gray-700\">\n          I agree to the \n          <a href=\"/terms\" target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500 underline\">\n            Terms of Service\n          </a>\n          and \n          <a href=\"/privacy\" target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500 underline\">\n            Privacy Policy\n          </a>\n        </label>\n        {#if fieldErrors.terms_accepted}\n          <p class=\"mt-1 text-sm text-red-600\">{fieldErrors.terms_accepted}</p>\n        {:else if !termsAccepted && formValid === false}\n          <p class=\"mt-1 text-sm text-red-600\">You must accept the terms to continue</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Success Message -->\n    {#if success}\n      <div class=\"rounded-md bg-green-50 p-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm text-green-800\">{success}</p>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"rounded-md bg-red-50 p-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm text-red-800\">{error}</p>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Submit Button -->\n    <div>\n      <button\n        type=\"submit\"\n        disabled={!formValid || isLoading}\n        class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n      >\n        {#if isLoading}\n          <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Creating account...\n        {:else}\n          Create account\n        {/if}\n      </button>\n    </div>\n\n    <!-- Switch to Login -->\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={() => dispatch('switchMode')}\n        class=\"text-indigo-600 hover:text-indigo-500 text-sm font-medium\"\n      >\n        Already have an account? Sign in\n      </button>\n    </div>\n  </form>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let qrCodeUrl = '';\n  export let secret = '';\n  export let isLoading = false;\n  export let error = '';\n  \n  let verificationCode = '';\n  let step = 1; // 1: Show QR, 2: Verify code, 3: Success\n  \n  $: codeValid = verificationCode.length === 6 && /^\\d{6}$/.test(verificationCode);\n  \n  function handleVerify() {\n    if (!codeValid) return;\n    \n    dispatch('verify', {\n      code: verificationCode\n    });\n  }\n  \n  function handleCancel() {\n    dispatch('cancel');\n  }\n  \n  function copySecret() {\n    navigator.clipboard.writeText(secret).then(() => {\n      // Could add a toast notification here\n    });\n  }\n  \n  // Handle successful verification from parent\n  export function showSuccess() {\n    step = 3;\n  }\n</script>\n\n<div class=\"max-w-md mx-auto space-y-6\">\n  <div class=\"text-center\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">\n      Set up Two-Factor Authentication\n    </h2>\n    <p class=\"mt-2 text-sm text-gray-600\">\n      Add an extra layer of security to your account\n    </p>\n  </div>\n\n  {#if step === 1}\n    <!-- QR Code Setup Step -->\n    <div class=\"space-y-4\">\n      <div class=\"bg-gray-50 rounded-lg p-6 text-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n          Step 1: Scan QR Code\n        </h3>\n        \n        {#if qrCodeUrl}\n          <div class=\"bg-white p-4 rounded-lg inline-block\">\n            <img \n              src={qrCodeUrl} \n              alt=\"2FA QR Code\" \n              class=\"w-48 h-48 mx-auto\"\n            />\n          </div>\n        {:else}\n          <div class=\"w-48 h-48 mx-auto bg-gray-200 rounded-lg flex items-center justify-center\">\n            <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600\"></div>\n          </div>\n        {/if}\n        \n        <p class=\"mt-4 text-sm text-gray-600\">\n          Scan this QR code with your authenticator app (Google Authenticator, Authy, etc.)\n        </p>\n      </div>\n\n      <!-- Manual Entry Option -->\n      <div class=\"bg-blue-50 rounded-lg p-4\">\n        <h4 class=\"text-sm font-medium text-blue-900 mb-2\">\n          Can't scan? Enter manually:\n        </h4>\n        <div class=\"flex items-center space-x-2\">\n          <code class=\"flex-1 bg-white px-3 py-2 rounded border text-sm font-mono\">\n            {secret}\n          </code>\n          <button\n            type=\"button\"\n            on:click={copySecret}\n            class=\"px-3 py-2 text-sm bg-blue-600 text-white rounded hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            Copy\n          </button>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        on:click={() => step = 2}\n        class=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        I've added the account to my app\n      </button>\n    </div>\n  \n  {:else if step === 2}\n    <!-- Verification Step -->\n    <div class=\"space-y-4\">\n      <div class=\"bg-gray-50 rounded-lg p-6 text-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n          Step 2: Verify Setup\n        </h3>\n        \n        <p class=\"text-sm text-gray-600 mb-4\">\n          Enter the 6-digit code from your authenticator app to complete setup\n        </p>\n        \n        <div class=\"max-w-xs mx-auto\">\n          <input\n            type=\"text\"\n            bind:value={verificationCode}\n            maxlength=\"6\"\n            pattern=\"[0-9]{6}\"\n            placeholder=\"000000\"\n            class=\"block w-full text-center text-2xl font-mono px-3 py-3 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            class:border-red-300={verificationCode.length > 0 && !codeValid}\n          />\n          {#if verificationCode.length > 0 && !codeValid}\n            <p class=\"mt-1 text-sm text-red-600\">Please enter a 6-digit code</p>\n          {/if}\n        </div>\n      </div>\n\n      {#if error}\n        <div class=\"rounded-md bg-red-50 p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-red-800\">{error}</p>\n            </div>\n          </div>\n        </div>\n      {/if}\n\n      <div class=\"flex space-x-3\">\n        <button\n          type=\"button\"\n          on:click={() => step = 1}\n          class=\"flex-1 py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n          Back\n        </button>\n        <button\n          type=\"button\"\n          on:click={handleVerify}\n          disabled={!codeValid || isLoading}\n          class=\"flex-1 py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {#if isLoading}\n            <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            Verifying...\n          {:else}\n            Verify & Enable\n          {/if}\n        </button>\n      </div>\n    </div>\n  \n  {:else if step === 3}\n    <!-- Success Step -->\n    <div class=\"text-center space-y-4\">\n      <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100\">\n        <svg class=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n        </svg>\n      </div>\n      \n      <div>\n        <h3 class=\"text-lg font-medium text-gray-900\">\n          Two-Factor Authentication Enabled!\n        </h3>\n        <p class=\"mt-2 text-sm text-gray-600\">\n          Your account is now protected with 2FA. You'll need to enter a code from your authenticator app each time you sign in.\n        </p>\n      </div>\n\n      <div class=\"bg-yellow-50 rounded-lg p-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm text-yellow-800\">\n              <strong>Important:</strong> Save your recovery codes in a safe place. You'll need them if you lose access to your authenticator app.\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        on:click={() => dispatch('complete')}\n        class=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Continue to Dashboard\n      </button>\n    </div>\n  {/if}\n\n  <!-- Cancel Button (except on success step) -->\n  {#if step !== 3}\n    <div class=\"text-center\">\n      <button\n        type=\"button\"\n        on:click={handleCancel}\n        class=\"text-sm text-gray-500 hover:text-gray-700\"\n      >\n        Skip for now\n      </button>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let isLoading = false;\n  export let error = '';\n  export let email = '';\n  \n  let verificationCode = '';\n  \n  $: codeValid = verificationCode.length === 6 && /^\\d{6}$/.test(verificationCode);\n  \n  function handleSubmit() {\n    if (!codeValid) return;\n    \n    dispatch('verify', {\n      code: verificationCode\n    });\n  }\n  \n  function handleBack() {\n    dispatch('back');\n  }\n  \n  // Auto-submit when 6 digits are entered\n  $: if (codeValid && !isLoading) {\n    handleSubmit();\n  }\n</script>\n\n<div class=\"max-w-md mx-auto space-y-6\">\n  <div class=\"text-center\">\n    <div class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100\">\n      <svg class=\"h-6 w-6 text-indigo-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n      </svg>\n    </div>\n    \n    <h2 class=\"mt-4 text-2xl font-bold text-gray-900\">\n      Two-Factor Authentication\n    </h2>\n    <p class=\"mt-2 text-sm text-gray-600\">\n      Enter the 6-digit code from your authenticator app\n    </p>\n    {#if email}\n      <p class=\"text-sm text-gray-500\">\n        Signing in as <span class=\"font-medium\">{email}</span>\n      </p>\n    {/if}\n  </div>\n\n  <div class=\"space-y-4\">\n    <!-- Code Input -->\n    <div>\n      <label for=\"verification-code\" class=\"block text-sm font-medium text-gray-700 text-center mb-2\">\n        Authentication Code\n      </label>\n      <div class=\"max-w-xs mx-auto\">\n        <input\n          id=\"verification-code\"\n          type=\"text\"\n          bind:value={verificationCode}\n          maxlength=\"6\"\n          pattern=\"[0-9]{6}\"\n          placeholder=\"000000\"\n          autocomplete=\"one-time-code\"\n          class=\"block w-full text-center text-2xl font-mono px-3 py-3 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n          class:border-red-300={verificationCode.length > 0 && !codeValid}\n          class:border-green-300={codeValid}\n        />\n        {#if verificationCode.length > 0 && !codeValid}\n          <p class=\"mt-1 text-sm text-red-600 text-center\">Please enter a 6-digit code</p>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Error Message -->\n    {#if error}\n      <div class=\"rounded-md bg-red-50 p-4\">\n        <div class=\"flex\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <p class=\"text-sm text-red-800\">{error}</p>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Loading State -->\n    {#if isLoading}\n      <div class=\"text-center\">\n        <div class=\"inline-flex items-center px-4 py-2 text-sm text-gray-600\">\n          <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-indigo-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Verifying code...\n        </div>\n      </div>\n    {/if}\n\n    <!-- Manual Submit Button (if auto-submit fails) -->\n    {#if codeValid && !isLoading}\n      <button\n        type=\"button\"\n        on:click={handleSubmit}\n        class=\"w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Verify Code\n      </button>\n    {/if}\n\n    <!-- Help Text -->\n    <div class=\"text-center space-y-2\">\n      <p class=\"text-xs text-gray-500\">\n        The code will automatically verify when you enter all 6 digits\n      </p>\n      \n      <div class=\"space-y-1\">\n        <button\n          type=\"button\"\n          class=\"text-sm text-indigo-600 hover:text-indigo-500\"\n          on:click={() => dispatch('resend')}\n        >\n          Didn't receive a code? Try again\n        </button>\n        \n        <div>\n          <button\n            type=\"button\"\n            on:click={handleBack}\n            class=\"text-sm text-gray-500 hover:text-gray-700\"\n          >\n            ← Back to login\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Troubleshooting -->\n  <div class=\"bg-gray-50 rounded-lg p-4\">\n    <h4 class=\"text-sm font-medium text-gray-900 mb-2\">\n      Having trouble?\n    </h4>\n    <ul class=\"text-xs text-gray-600 space-y-1\">\n      <li>• Make sure your device's time is correct</li>\n      <li>• Try generating a new code in your authenticator app</li>\n      <li>• Check that you're using the right account in your app</li>\n    </ul>\n  </div>\n</div>","<script lang=\"ts\">\n  import { authActions } from '../stores/auth';\n  import LoginForm from './LoginForm.svelte';\n  import RegisterForm from './RegisterForm.svelte';\n  import TwoFactorSetup from './TwoFactorSetup.svelte';\n  import TwoFactorVerification from './TwoFactorVerification.svelte';\n  \n  let mode = 'login'; // 'login', 'register', '2fa-setup', '2fa-verify'\n  let isLoading = false;\n  let error = '';\n  let success = '';\n  let fieldErrors: Record<string, string> = {};\n  \n  // 2FA setup data\n  let qrCodeUrl = '';\n  let secret = '';\n  let pendingEmail = '';\n  \n  // Component references\n  let twoFactorSetupRef: TwoFactorSetup;\n\n  async function handleLogin(event: CustomEvent) {\n    const { email, password, totpCode } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.login(email, password, totpCode);\n      \n      if (!result.success) {\n        if (result.message?.toLowerCase().includes('2fa') || result.message?.toLowerCase().includes('totp')) {\n          pendingEmail = email;\n          mode = '2fa-verify';\n        } else {\n          error = result.message || 'Login failed';\n        }\n      }\n      // Success is handled by the auth store updating isAuthenticated\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handleRegister(event: CustomEvent) {\n    const { email, password, confirm_password, terms_accepted } = event.detail;\n    isLoading = true;\n    error = '';\n    success = '';\n    fieldErrors = {};\n    \n    try {\n      const result = await authActions.register(email, password, confirm_password, terms_accepted);\n      \n      if (result.success) {\n        if (result.autoLogin) {\n          // Auto-login successful, user will be redirected by the auth state change\n          success = 'Account created successfully! Welcome to No Drake in the House.';\n          // Small delay to show success message before redirect\n          setTimeout(() => {\n            // The redirect will happen automatically via the auth store\n          }, 1500);\n        } else {\n          success = 'Account created successfully! You can now sign in.';\n          mode = 'login';\n        }\n      } else {\n        if (result.errors) {\n          // Handle field-specific errors\n          fieldErrors = {};\n          result.errors.forEach((err: any) => {\n            fieldErrors[err.field] = err.message;\n          });\n          error = result.message || 'Please fix the errors below';\n        } else {\n          error = result.message || 'Registration failed';\n        }\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FAVerification(event: CustomEvent) {\n    const { code } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      // For login verification, we need to retry the login with the TOTP code\n      // This assumes we stored the email/password from the previous attempt\n      // In a real implementation, you might want to handle this differently\n      const result = await authActions.verify2FA(code);\n      \n      if (!result.success) {\n        error = result.message || 'Invalid verification code';\n      }\n      // Success is handled by the auth store\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FASetup() {\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.setup2FA();\n      \n      if (result.success) {\n        qrCodeUrl = result.qrCodeUrl;\n        secret = result.secret;\n        mode = '2fa-setup';\n      } else {\n        error = result.message || 'Failed to setup 2FA';\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function handle2FASetupVerification(event: CustomEvent) {\n    const { code } = event.detail;\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await authActions.verify2FA(code);\n      \n      if (result.success) {\n        twoFactorSetupRef?.showSuccess();\n      } else {\n        error = result.message || 'Invalid verification code';\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  function switchToLogin() {\n    mode = 'login';\n    error = '';\n    success = '';\n    fieldErrors = {};\n  }\n\n  function switchToRegister() {\n    mode = 'register';\n    error = '';\n    success = '';\n    fieldErrors = {};\n  }\n\n  function backToLogin() {\n    mode = 'login';\n    error = '';\n    pendingEmail = '';\n  }\n\n  function cancel2FASetup() {\n    mode = 'login';\n    error = '';\n    qrCodeUrl = '';\n    secret = '';\n  }\n\n  function complete2FASetup() {\n    // 2FA setup complete, user should now be authenticated\n    mode = 'login';\n    qrCodeUrl = '';\n    secret = '';\n  }\n</script>\n\n<div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n  <div class=\"max-w-md w-full\">\n    {#if mode === 'login'}\n      <LoginForm \n        {isLoading} \n        {error} \n        on:login={handleLogin}\n        on:switchMode={switchToRegister}\n      />\n      \n      <!-- Optional 2FA Setup Link for existing users -->\n      <div class=\"mt-6 text-center\">\n        <button\n          type=\"button\"\n          on:click={handle2FASetup}\n          class=\"text-sm text-gray-500 hover:text-gray-700\"\n        >\n          Set up Two-Factor Authentication\n        </button>\n      </div>\n      \n    {:else if mode === 'register'}\n      <RegisterForm \n        {isLoading} \n        {error}\n        {success}\n        {fieldErrors}\n        on:register={handleRegister}\n        on:switchMode={switchToLogin}\n      />\n      \n    {:else if mode === '2fa-verify'}\n      <TwoFactorVerification\n        {isLoading}\n        {error}\n        email={pendingEmail}\n        on:verify={handle2FAVerification}\n        on:back={backToLogin}\n        on:resend={() => {\n          // Could implement resend logic here\n          error = 'Please try logging in again';\n          backToLogin();\n        }}\n      />\n      \n    {:else if mode === '2fa-setup'}\n      <TwoFactorSetup\n        bind:this={twoFactorSetupRef}\n        {qrCodeUrl}\n        {secret}\n        {isLoading}\n        {error}\n        on:verify={handle2FASetupVerification}\n        on:cancel={cancel2FASetup}\n        on:complete={complete2FASetup}\n      />\n    {/if}\n  </div>\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    connections: [],\n    isLoading: false,\n    error: null,\n};\nexport const connectionsStore = writable(initialState);\nexport const connectedServices = derived(connectionsStore, ($connections) => $connections.connections.filter(conn => conn.status === 'active'));\nexport const spotifyConnection = derived(connectionsStore, ($connections) => $connections.connections.find(conn => conn.provider === 'spotify'));\nexport const hasActiveSpotifyConnection = derived(spotifyConnection, ($spotify) => $spotify?.status === 'active');\n// Connection actions\nexport const connectionActions = {\n    fetchConnections: async () => {\n        connectionsStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/connections', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                connectionsStore.update(state => ({\n                    ...state,\n                    connections: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                connectionsStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch connections',\n                isLoading: false,\n            }));\n        }\n    },\n    initiateSpotifyAuth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/auth', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Redirect to Spotify authorization\n                window.location.href = result.data.auth_url;\n            }\n            else {\n                throw new Error(result.message);\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: `Failed to initiate Spotify auth: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            }));\n        }\n    },\n    handleSpotifyCallback: async (code, state) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/callback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ code, state }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to complete Spotify connection' };\n        }\n    },\n    disconnectSpotify: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/connection', {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to disconnect Spotify' };\n        }\n    },\n    checkSpotifyHealth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/health', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Update connection status if needed\n                await connectionActions.fetchConnections();\n                return result.data;\n            }\n        }\n        catch (error) {\n            console.error('Spotify health check failed:', error);\n        }\n    },\n};\n","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    entries: [],\n    isLoading: false,\n    error: null,\n    searchResults: [],\n    isSearching: false,\n};\nexport const dnpStore = writable(initialState);\nexport const dnpArtists = derived(dnpStore, ($dnp) => $dnp.entries.map(entry => entry.artist));\nexport const dnpCount = derived(dnpStore, ($dnp) => $dnp.entries.length);\nexport const dnpTags = derived(dnpStore, ($dnp) => {\n    const allTags = $dnp.entries.flatMap(entry => entry.tags);\n    return [...new Set(allTags)].sort();\n});\n// DNP actions\nexport const dnpActions = {\n    fetchDnpList: async () => {\n        dnpStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/list', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    entries: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch DNP list',\n                isLoading: false,\n            }));\n        }\n    },\n    searchArtists: async (query, limit = 10) => {\n        if (!query.trim()) {\n            dnpStore.update(state => ({ ...state, searchResults: [] }));\n            return;\n        }\n        dnpStore.update(state => ({ ...state, isSearching: true }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/search?q=${encodeURIComponent(query)}&limit=${limit}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    searchResults: result.data,\n                    isSearching: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isSearching: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Artist search failed',\n                isSearching: false,\n            }));\n        }\n    },\n    addArtist: async (artistQuery, tags = [], note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/artists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: artistQuery,\n                    tags,\n                    note,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to add artist to DNP list' };\n        }\n    },\n    removeArtist: async (artistId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to remove artist from DNP list' };\n        }\n    },\n    updateEntry: async (artistId, tags, note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ tags, note }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update DNP entry' };\n        }\n    },\n    bulkImport: async (data, format) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/import', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ data, format }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Bulk import failed' };\n        }\n    },\n    exportList: async (format = 'json') => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/export?format=${format}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Export failed' };\n        }\n    },\n    clearSearch: () => {\n        dnpStore.update(state => ({ ...state, searchResults: [] }));\n    },\n};\n","<script lang=\"ts\">\n  import { currentRoute, router } from '../utils/router';\n  import { authActions, currentUser } from '../stores/auth';\n  import { dnpCount } from '../stores/dnp';\n\n  function handleLogout() {\n    authActions.logout();\n  }\n\n  function navigate(route: string) {\n    router.navigate(route);\n  }\n</script>\n\n<!-- Top Navigation -->\n<nav class=\"bg-white shadow-sm border-b border-gray-200\">\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <div class=\"flex justify-between h-16\">\n      <div class=\"flex items-center\">\n        <h1 class=\"text-xl font-semibold text-gray-900\">\n          No Drake in the House\n        </h1>\n      </div>\n      \n      <div class=\"flex items-center space-x-4\">\n        <span class=\"text-sm text-gray-700\">\n          {$currentUser?.email}\n        </span>\n        <button\n          on:click={() => navigate('profile')}\n          class=\"text-sm text-gray-500 hover:text-gray-700\"\n        >\n          Settings\n        </button>\n        <button\n          on:click={handleLogout}\n          class=\"text-sm text-gray-500 hover:text-gray-700\"\n        >\n          Sign out\n        </button>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<!-- Tab Navigation -->\n<div class=\"bg-white shadow-sm\">\n  <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    <nav class=\"flex space-x-8\" aria-label=\"Tabs\">\n      <button\n        on:click={() => navigate('overview')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {$currentRoute === 'overview' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Overview\n      </button>\n      <button\n        on:click={() => navigate('connections')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {$currentRoute === 'connections' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Connections\n      </button>\n      <button\n        on:click={() => navigate('dnp')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {$currentRoute === 'dnp' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        DNP List ({$dnpCount})\n      </button>\n      <button\n        on:click={() => navigate('enforcement')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {$currentRoute === 'enforcement' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Enforcement\n      </button>\n      <button\n        on:click={() => navigate('community')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {$currentRoute === 'community' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Community Lists\n      </button>\n    </nav>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { connectionActions, spotifyConnection } from '../stores/connections';\n  \n  let isConnecting = false;\n  let error = '';\n\n  onMount(() => {\n    // Handle OAuth callback if present\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n    \n    if (code && state) {\n      handleSpotifyCallback(code, state);\n      // Clean up URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  });\n\n  async function handleSpotifyCallback(code: string, state: string) {\n    isConnecting = true;\n    error = '';\n    \n    const result = await connectionActions.handleSpotifyCallback(code, state);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to connect Spotify';\n    }\n    \n    isConnecting = false;\n  }\n\n  async function connectSpotify() {\n    isConnecting = true;\n    error = '';\n    \n    try {\n      await connectionActions.initiateSpotifyAuth();\n    } catch (err) {\n      error = 'Failed to initiate Spotify connection';\n      isConnecting = false;\n    }\n  }\n\n  async function disconnectSpotify() {\n    const result = await connectionActions.disconnectSpotify();\n    \n    if (!result.success) {\n      error = result.message || 'Failed to disconnect Spotify';\n    }\n  }\n\n  async function checkHealth() {\n    await connectionActions.checkSpotifyHealth();\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'active': return 'text-green-600 bg-green-100';\n      case 'expired': return 'text-yellow-600 bg-yellow-100';\n      case 'error': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">Service Connections</h2>\n    <p class=\"mt-1 text-sm text-gray-600\">\n      Connect your streaming service accounts to manage your blocklist across platforms.\n    </p>\n  </div>\n\n  {#if error}\n    <div class=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{error}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    <ul class=\"divide-y divide-gray-200\">\n      <!-- Spotify Connection -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-green-500 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">Spotify</p>\n                {#if $spotifyConnection}\n                  <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor($spotifyConnection.status)}\">\n                    {$spotifyConnection.status}\n                  </span>\n                {/if}\n              </div>\n              <div class=\"mt-1\">\n                {#if $spotifyConnection}\n                  <p class=\"text-sm text-gray-500\">\n                    Connected {formatDate($spotifyConnection.created_at)}\n                    {#if $spotifyConnection.provider_user_id}\n                      • User ID: {$spotifyConnection.provider_user_id}\n                    {/if}\n                  </p>\n                  {#if $spotifyConnection.scopes.length > 0}\n                    <p class=\"text-xs text-gray-400 mt-1\">\n                      Permissions: {$spotifyConnection.scopes.join(', ')}\n                    </p>\n                  {/if}\n                {:else}\n                  <p class=\"text-sm text-gray-500\">\n                    Connect your Spotify account to manage your music library\n                  </p>\n                {/if}\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-2\">\n            {#if $spotifyConnection}\n              <button\n                on:click={checkHealth}\n                class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Check Health\n              </button>\n              <button\n                on:click={disconnectSpotify}\n                class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Disconnect\n              </button>\n            {:else}\n              <button\n                on:click={connectSpotify}\n                disabled={isConnecting}\n                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {#if isConnecting}\n                  <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Connecting...\n                {:else}\n                  Connect\n                {/if}\n              </button>\n            {/if}\n          </div>\n        </div>\n      </li>\n\n      <!-- Apple Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-gray-400 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.997 6.124c0-.738-.065-1.47-.24-2.19-.317-1.31-1.062-2.31-2.18-3.043C21.003.517 20.373.285 19.7.164c-.517-.093-1.038-.135-1.564-.15-.04-.001-.08-.004-.12-.004H5.986c-.04 0-.08.003-.12.004-.526.015-1.047.057-1.564.15-.673.121-1.303.353-1.877.727C1.307 1.624.562 2.624.245 3.934.07 4.654.005 5.386.005 6.124v11.748c0 .738.065 1.47.24 2.19.317 1.31 1.062 2.31 2.18 3.043.574.374 1.204.606 1.877.727.517.093 1.038.135 1.564.15.04.001.08.004.12.004h12.014c.04 0 .08-.003.12-.004.526-.015 1.047-.057 1.564-.15.673-.121 1.303-.353 1.877-.727 1.118-.733 1.863-1.733 2.18-3.043.175-.72.24-1.452.24-2.19V6.124zM12.001 4.009c2.47 0 4.471 2.001 4.471 4.471s-2.001 4.471-4.471 4.471-4.471-2.001-4.471-4.471 2.001-4.471 4.471-4.471zm0 7.542c1.693 0 3.071-1.378 3.071-3.071s-1.378-3.071-3.071-3.071-3.071 1.378-3.071 3.071 1.378 3.071 3.071 3.071z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">Apple Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-gray-600 bg-gray-100\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-sm text-gray-500 mt-1\">\n                Apple Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n\n      <!-- YouTube Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-red-500 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">YouTube Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-gray-600 bg-gray-100\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-sm text-gray-500 mt-1\">\n                YouTube Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!-- Connection Info -->\n  <div class=\"mt-6 bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Service Connections\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Service connections allow you to apply your Do-Not-Play list across different streaming platforms. \n            Each connection is secured with OAuth 2.0 and only requests the minimum permissions needed to manage your blocklist.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Spotify: Full library management and playlist modification</li>\n            <li>Apple Music: Limited library access (coming soon)</li>\n            <li>YouTube Music: Browser extension support only (coming soon)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions, dnpStore } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  let searchQuery = '';\n  let selectedArtist: any = null;\n  let tags = '';\n  let note = '';\n  let isAdding = false;\n  let error = '';\n  \n  let searchTimeout: any;\n  \n  $: {\n    if (searchTimeout) clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(() => {\n      if (searchQuery.trim()) {\n        dnpActions.searchArtists(searchQuery);\n      } else {\n        dnpActions.clearSearch();\n      }\n    }, 300);\n  }\n\n  function selectArtist(artist: any) {\n    selectedArtist = artist;\n    searchQuery = artist.canonical_name;\n    dnpActions.clearSearch();\n  }\n\n  function clearSelection() {\n    selectedArtist = null;\n    searchQuery = '';\n    dnpActions.clearSearch();\n  }\n\n  async function handleSubmit() {\n    if (!searchQuery.trim()) {\n      error = 'Please enter an artist name';\n      return;\n    }\n\n    isAdding = true;\n    error = '';\n\n    const tagArray = tags.split(',').map(t => t.trim()).filter(t => t);\n    \n    const result = await dnpActions.addArtist(\n      searchQuery,\n      tagArray,\n      note.trim() || undefined\n    );\n\n    if (result.success) {\n      // Reset form\n      searchQuery = '';\n      selectedArtist = null;\n      tags = '';\n      note = '';\n      dispatch('artistAdded');\n    } else {\n      error = result.message || 'Failed to add artist';\n    }\n\n    isAdding = false;\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-4\">\n  <!-- Artist Search -->\n  <div class=\"relative\">\n    <label for=\"artist-search\" class=\"block text-sm font-medium text-gray-700\">\n      Artist Name\n    </label>\n    <div class=\"mt-1 relative\">\n      <input\n        id=\"artist-search\"\n        type=\"text\"\n        bind:value={searchQuery}\n        placeholder=\"Search for an artist...\"\n        class=\"block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      />\n      \n      {#if selectedArtist}\n        <button\n          type=\"button\"\n          on:click={clearSelection}\n          class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n        >\n          <svg class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      {/if}\n    </div>\n\n    <!-- Search Results -->\n    {#if $dnpStore.searchResults.length > 0 && !selectedArtist}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n        {#each $dnpStore.searchResults as artist}\n          <button\n            type=\"button\"\n            on:click={() => selectArtist(artist)}\n            class=\"w-full text-left px-4 py-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-3\">\n                {#if artist.metadata.image}\n                  <img\n                    src={artist.metadata.image}\n                    alt={artist.canonical_name}\n                    class=\"h-8 w-8 rounded-full object-cover\"\n                  />\n                {:else}\n                  <div class=\"h-8 w-8 rounded-full bg-gray-300 flex items-center justify-center\">\n                    <svg class=\"h-4 w-4 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                <div>\n                  <div class=\"text-sm font-medium text-gray-900\">\n                    {artist.canonical_name}\n                  </div>\n                  {#if artist.metadata.genres && artist.metadata.genres.length > 0}\n                    <div class=\"text-xs text-gray-500\">\n                      {artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                </div>\n              </div>\n              \n              <div class=\"flex space-x-1\">\n                {#each getProviderBadges(artist) as badge}\n                  <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                    {badge.name}\n                  </span>\n                {/each}\n              </div>\n            </div>\n          </button>\n        {/each}\n      </div>\n    {/if}\n\n    {#if $dnpStore.isSearching}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-md py-2 text-center\">\n        <svg class=\"animate-spin mx-auto h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"text-sm text-gray-500 mt-1\">Searching...</p>\n      </div>\n    {/if}\n  </div>\n\n  <!-- Selected Artist Preview -->\n  {#if selectedArtist}\n    <div class=\"bg-gray-50 rounded-lg p-4\">\n      <h4 class=\"text-sm font-medium text-gray-900 mb-2\">Selected Artist</h4>\n      <div class=\"flex items-center space-x-3\">\n        {#if selectedArtist.metadata.image}\n          <img\n            src={selectedArtist.metadata.image}\n            alt={selectedArtist.canonical_name}\n            class=\"h-12 w-12 rounded-full object-cover\"\n          />\n        {:else}\n          <div class=\"h-12 w-12 rounded-full bg-gray-300 flex items-center justify-center\">\n            <svg class=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n        {/if}\n        <div class=\"flex-1\">\n          <div class=\"text-sm font-medium text-gray-900\">\n            {selectedArtist.canonical_name}\n          </div>\n          {#if selectedArtist.metadata.genres && selectedArtist.metadata.genres.length > 0}\n            <div class=\"text-xs text-gray-500\">\n              {selectedArtist.metadata.genres.join(', ')}\n            </div>\n          {/if}\n          <div class=\"flex space-x-1 mt-1\">\n            {#each getProviderBadges(selectedArtist) as badge}\n              <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                {badge.name}\n              </span>\n            {/each}\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tags -->\n  <div>\n    <label for=\"tags\" class=\"block text-sm font-medium text-gray-700\">\n      Tags (optional)\n    </label>\n    <input\n      id=\"tags\"\n      type=\"text\"\n      bind:value={tags}\n      placeholder=\"e.g., controversial, personal, explicit (comma-separated)\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    />\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Use tags to organize your DNP list. Separate multiple tags with commas.\n    </p>\n  </div>\n\n  <!-- Note -->\n  <div>\n    <label for=\"note\" class=\"block text-sm font-medium text-gray-700\">\n      Note (optional)\n    </label>\n    <textarea\n      id=\"note\"\n      bind:value={note}\n      rows=\"2\"\n      placeholder=\"Add a personal note about why you're blocking this artist...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    ></textarea>\n  </div>\n\n  {#if error}\n    <div class=\"text-red-600 text-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('artistAdded')}\n      class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isAdding || !searchQuery.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isAdding}\n        <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Adding...\n      {:else}\n        Add to DNP List\n      {/if}\n    </button>\n  </div>\n</form>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let entry: any;\n  export let selected = false;\n  \n  let isEditing = false;\n  let editTags = entry.tags.join(', ');\n  let editNote = entry.note || '';\n  let isUpdating = false;\n  let isRemoving = false;\n  let error = '';\n\n  function toggleSelect() {\n    dispatch('toggleSelect');\n  }\n\n  function startEdit() {\n    isEditing = true;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  function cancelEdit() {\n    isEditing = false;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  async function saveEdit() {\n    isUpdating = true;\n    error = '';\n\n    const tagArray = editTags.split(',').map((t: string) => t.trim()).filter((t: string) => t);\n    \n    const result = await dnpActions.updateEntry(\n      entry.artist.id,\n      tagArray,\n      editNote.trim() || undefined\n    );\n\n    if (result.success) {\n      isEditing = false;\n    } else {\n      error = result.message || 'Failed to update entry';\n    }\n\n    isUpdating = false;\n  }\n\n  async function removeArtist() {\n    if (!confirm(`Are you sure you want to remove \"${entry.artist.canonical_name}\" from your DNP list?`)) {\n      return;\n    }\n\n    isRemoving = true;\n    \n    const result = await dnpActions.removeArtist(entry.artist.id);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to remove artist';\n    }\n    \n    isRemoving = false;\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<li class=\"px-4 py-4 sm:px-6 {selected ? 'bg-indigo-50' : 'hover:bg-gray-50'}\">\n  <div class=\"flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4\">\n    <!-- Mobile: Checkbox and Actions Row -->\n    <div class=\"flex items-center justify-between sm:hidden\">\n      <input\n        type=\"checkbox\"\n        checked={selected}\n        on:change={toggleSelect}\n        class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n      />\n      <div class=\"flex items-center space-x-2\">\n        {#if !isEditing}\n          <button\n            on:click={startEdit}\n            class=\"text-indigo-600 hover:text-indigo-900 text-sm\"\n          >\n            Edit\n          </button>\n          <button\n            on:click={removeArtist}\n            disabled={isRemoving}\n            class=\"text-red-600 hover:text-red-900 text-sm disabled:opacity-50\"\n          >\n            {isRemoving ? 'Removing...' : 'Remove'}\n          </button>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Desktop: Checkbox -->\n    <input\n      type=\"checkbox\"\n      checked={selected}\n      on:change={toggleSelect}\n      class=\"hidden sm:block h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded flex-shrink-0\"\n    />\n\n    <!-- Artist Image -->\n    <div class=\"flex-shrink-0\">\n      {#if entry.artist.metadata.image}\n        <img\n          src={entry.artist.metadata.image}\n          alt={entry.artist.canonical_name}\n          class=\"h-12 w-12 sm:h-10 sm:w-10 rounded-full object-cover\"\n        />\n      {:else}\n        <div class=\"h-12 w-12 sm:h-10 sm:w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n          <svg class=\"h-6 w-6 sm:h-5 sm:w-5 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        </div>\n      {/if}\n    </div>\n\n    <!-- Artist Info -->\n    <div class=\"flex-1 min-w-0\">\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div class=\"flex-1 min-w-0\">\n          <p class=\"text-sm font-medium text-gray-900 truncate\">\n            {entry.artist.canonical_name}\n          </p>\n          \n          {#if entry.artist.metadata.genres && entry.artist.metadata.genres.length > 0}\n            <p class=\"text-xs text-gray-500 truncate\">\n              {entry.artist.metadata.genres.slice(0, 2).join(', ')}\n            </p>\n          {/if}\n          \n          <div class=\"flex flex-wrap items-center gap-2 mt-1\">\n            <!-- Provider Badges -->\n            <div class=\"flex flex-wrap gap-1\">\n              {#each getProviderBadges(entry.artist) as badge}\n                <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                  {badge.name}\n                </span>\n              {/each}\n            </div>\n            \n            <!-- Added Date -->\n            <span class=\"text-xs text-gray-400 whitespace-nowrap\">\n              Added {formatDate(entry.created_at)}\n            </span>\n          </div>\n        </div>\n\n        <!-- Desktop Actions -->\n        <div class=\"hidden sm:flex items-center space-x-2 ml-4\">\n          {#if !isEditing}\n            <button\n              on:click={startEdit}\n              class=\"text-indigo-600 hover:text-indigo-900 text-sm whitespace-nowrap\"\n            >\n              Edit\n            </button>\n            <button\n              on:click={removeArtist}\n              disabled={isRemoving}\n              class=\"text-red-600 hover:text-red-900 text-sm disabled:opacity-50 whitespace-nowrap\"\n            >\n              {isRemoving ? 'Removing...' : 'Remove'}\n            </button>\n          {/if}\n        </div>\n      </div>\n\n      <!-- Tags and Note Display -->\n      {#if !isEditing}\n        <div class=\"mt-2\">\n          {#if entry.tags.length > 0}\n            <div class=\"flex flex-wrap gap-1 mb-2\">\n              {#each entry.tags as tag}\n                <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                  {tag}\n                </span>\n              {/each}\n            </div>\n          {/if}\n          \n          {#if entry.note}\n            <p class=\"text-sm text-gray-600 italic\">\n              \"{entry.note}\"\n            </p>\n          {/if}\n        </div>\n      {/if}\n\n      <!-- Edit Form -->\n      {#if isEditing}\n        <div class=\"mt-3 space-y-3 sm:mt-4\">\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n            <div>\n              <label for=\"edit-tags-{entry.artist.id}\" class=\"block text-xs font-medium text-gray-700\">Tags</label>\n              <input\n                id=\"edit-tags-{entry.artist.id}\"\n                type=\"text\"\n                bind:value={editTags}\n                placeholder=\"comma-separated tags\"\n                class=\"mt-1 block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              />\n            </div>\n            \n            <div class=\"sm:col-span-2\">\n              <label for=\"edit-note-{entry.artist.id}\" class=\"block text-xs font-medium text-gray-700\">Note</label>\n              <textarea\n                id=\"edit-note-{entry.artist.id}\"\n                bind:value={editNote}\n                rows=\"2\"\n                placeholder=\"Personal note...\"\n                class=\"mt-1 block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              ></textarea>\n            </div>\n          </div>\n\n          {#if error}\n            <p class=\"text-xs text-red-600\">{error}</p>\n          {/if}\n\n          <div class=\"flex flex-col sm:flex-row justify-end space-y-2 sm:space-y-0 sm:space-x-2\">\n            <button\n              type=\"button\"\n              on:click={cancelEdit}\n              class=\"w-full sm:w-auto px-3 py-2 sm:py-1 border border-gray-300 rounded-md text-sm sm:text-xs font-medium text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={saveEdit}\n              disabled={isUpdating}\n              class=\"w-full sm:w-auto px-3 py-2 sm:py-1 border border-transparent rounded-md text-sm sm:text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {isUpdating ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</li>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let selectedCount = 0;\n  \n  function handleBulkDelete() {\n    dispatch('bulkDelete');\n  }\n  \n  function handleClearSelection() {\n    dispatch('clearSelection');\n  }\n</script>\n\n<div class=\"bg-indigo-50 border border-indigo-200 rounded-md p-4\">\n  <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0\">\n    <div class=\"flex items-center\">\n      <svg class=\"h-5 w-5 text-indigo-400 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <p class=\"ml-3 text-sm text-indigo-800\">\n        <span class=\"font-medium\">{selectedCount}</span>\n        {selectedCount === 1 ? 'artist' : 'artists'} selected\n      </p>\n    </div>\n    \n    <div class=\"flex flex-col sm:flex-row items-stretch sm:items-center space-y-2 sm:space-y-0 sm:space-x-3\">\n      <button\n        on:click={handleClearSelection}\n        class=\"text-sm text-indigo-600 hover:text-indigo-500 text-center sm:text-left\"\n      >\n        Clear selection\n      </button>\n      \n      <button\n        on:click={handleBulkDelete}\n        class=\"inline-flex items-center justify-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n      >\n        <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n        </svg>\n        Remove selected\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { dnpActions, dnpStore, dnpTags } from '../stores/dnp';\n  import ArtistSearch from './ArtistSearch.svelte';\n  import DnpEntry from './DnpEntry.svelte';\n  import BulkActions from './BulkActions.svelte';\n  \n  let searchQuery = '';\n  let selectedTag = '';\n  let showAddForm = false;\n  let selectedEntries = new Set();\n\n  $: filteredEntries = $dnpStore.entries.filter(entry => {\n    const matchesSearch = !searchQuery || \n      entry.artist.canonical_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      entry.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase())) ||\n      (entry.note && entry.note.toLowerCase().includes(searchQuery.toLowerCase()));\n    \n    const matchesTag = !selectedTag || entry.tags.includes(selectedTag);\n    \n    return matchesSearch && matchesTag;\n  });\n\n  function toggleSelectAll() {\n    if (selectedEntries.size === filteredEntries.length) {\n      selectedEntries.clear();\n    } else {\n      selectedEntries = new Set(filteredEntries.map(entry => entry.artist.id));\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function toggleSelectEntry(artistId: string) {\n    if (selectedEntries.has(artistId)) {\n      selectedEntries.delete(artistId);\n    } else {\n      selectedEntries.add(artistId);\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function clearSelection() {\n    selectedEntries.clear();\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  async function handleBulkDelete() {\n    if (selectedEntries.size === 0) return;\n    \n    if (confirm(`Are you sure you want to remove ${selectedEntries.size} artist(s) from your DNP list?`)) {\n      const promises = Array.from(selectedEntries).map((artistId: any) => \n        dnpActions.removeArtist(artistId as string)\n      );\n      \n      await Promise.all(promises);\n      clearSelection();\n    }\n  }\n\n  function handleArtistAdded() {\n    showAddForm = false;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-2xl font-bold text-gray-900\">Do-Not-Play List</h2>\n        <p class=\"mt-1 text-sm text-gray-600\">\n          Manage artists you want to avoid across your streaming services.\n        </p>\n      </div>\n      <button\n        on:click={() => showAddForm = !showAddForm}\n        class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Add Artist\n      </button>\n    </div>\n  </div>\n\n  <!-- Add Artist Form -->\n  {#if showAddForm}\n    <div class=\"mb-6 bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Add Artist to DNP List</h3>\n      <ArtistSearch on:artistAdded={handleArtistAdded} />\n    </div>\n  {/if}\n\n  <!-- Filters and Search -->\n  <div class=\"mb-6 bg-white shadow rounded-lg p-4\">\n    <div class=\"flex flex-col sm:flex-row gap-4\">\n      <div class=\"flex-1\">\n        <label for=\"search\" class=\"sr-only\">Search artists</label>\n        <div class=\"relative\">\n          <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <input\n            id=\"search\"\n            bind:value={searchQuery}\n            type=\"text\"\n            placeholder=\"Search artists, tags, or notes...\"\n            class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"sm:w-48\">\n        <label for=\"tag-filter\" class=\"sr-only\">Filter by tag</label>\n        <select\n          id=\"tag-filter\"\n          bind:value={selectedTag}\n          class=\"block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n        >\n          <option value=\"\">All tags</option>\n          {#each $dnpTags as tag}\n            <option value={tag}>{tag}</option>\n          {/each}\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bulk Actions -->\n  {#if selectedEntries.size > 0}\n    <div class=\"mb-4\">\n      <BulkActions \n        selectedCount={selectedEntries.size}\n        on:bulkDelete={handleBulkDelete}\n        on:clearSelection={clearSelection}\n      />\n    </div>\n  {/if}\n\n  <!-- DNP List -->\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    {#if $dnpStore.isLoading}\n      <div class=\"p-6 text-center\">\n        <svg class=\"animate-spin mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"mt-2 text-sm text-gray-500\">Loading DNP list...</p>\n      </div>\n    {:else if $dnpStore.error}\n      <div class=\"p-6 text-center\">\n        <svg class=\"mx-auto h-8 w-8 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <p class=\"mt-2 text-sm text-red-600\">{$dnpStore.error}</p>\n        <button\n          on:click={() => dnpActions.fetchDnpList()}\n          class=\"mt-2 text-sm text-indigo-600 hover:text-indigo-500\"\n        >\n          Try again\n        </button>\n      </div>\n    {:else if filteredEntries.length === 0}\n      <div class=\"p-6 text-center\">\n        {#if $dnpStore.entries.length === 0}\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No artists in your DNP list</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Get started by adding artists you want to avoid.</p>\n          <div class=\"mt-6\">\n            <button\n              on:click={() => showAddForm = true}\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add your first artist\n            </button>\n          </div>\n        {:else}\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No artists match your search</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Try adjusting your search terms or filters.</p>\n        {/if}\n      </div>\n    {:else}\n      <div class=\"px-4 py-3 bg-gray-50 border-b border-gray-200 sm:px-6\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <input\n              id=\"select-all\"\n              type=\"checkbox\"\n              checked={selectedEntries.size === filteredEntries.length && filteredEntries.length > 0}\n              on:change={toggleSelectAll}\n              class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            />\n            <label for=\"select-all\" class=\"ml-3 text-sm text-gray-900\">\n              {filteredEntries.length} artist{filteredEntries.length !== 1 ? 's' : ''}\n              {#if selectedEntries.size > 0}\n                ({selectedEntries.size} selected)\n              {/if}\n            </label>\n          </div>\n          \n          {#if searchQuery || selectedTag}\n            <button\n              on:click={() => { searchQuery = ''; selectedTag = ''; }}\n              class=\"text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Clear filters\n            </button>\n          {/if}\n        </div>\n      </div>\n      \n      <ul class=\"divide-y divide-gray-200\">\n        {#each filteredEntries as entry (entry.artist.id)}\n          <DnpEntry \n            {entry}\n            selected={selectedEntries.has(entry.artist.id)}\n            on:toggleSelect={() => toggleSelectEntry(entry.artist.id)}\n          />\n        {/each}\n      </ul>\n    {/if}\n  </div>\n\n  <!-- Stats -->\n  {#if $dnpStore.entries.length > 0}\n    <div class=\"mt-6 bg-gray-50 rounded-lg p-4\">\n      <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">{$dnpStore.entries.length}</div>\n          <div class=\"text-sm text-gray-500\">Total Artists</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">{$dnpTags.length}</div>\n          <div class=\"text-sm text-gray-500\">Unique Tags</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">\n            {$dnpStore.entries.filter(e => e.note).length}\n          </div>\n          <div class=\"text-sm text-gray-500\">With Notes</div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst defaultOptions = {\n    aggressiveness: 'moderate',\n    blockCollabs: true,\n    blockFeaturing: true,\n    blockSongwriterOnly: false,\n};\nconst initialState = {\n    currentPlan: null,\n    isPlanning: false,\n    isExecuting: false,\n    currentBatch: null,\n    actionHistory: [],\n    options: defaultOptions,\n    error: null,\n};\nexport const enforcementStore = writable(initialState);\nexport const hasActivePlan = derived(enforcementStore, ($enforcement) => $enforcement.currentPlan !== null);\nexport const executionProgress = derived(enforcementStore, ($enforcement) => {\n    if (!$enforcement.currentBatch)\n        return null;\n    const { totalItems, completedItems, failedItems, skippedItems } = $enforcement.currentBatch.summary;\n    const processedItems = completedItems + failedItems + skippedItems;\n    return {\n        total: totalItems,\n        processed: processedItems,\n        completed: completedItems,\n        failed: failedItems,\n        skipped: skippedItems,\n        percentage: totalItems > 0 ? Math.round((processedItems / totalItems) * 100) : 0,\n    };\n});\nexport const canRollback = derived(enforcementStore, ($enforcement) => $enforcement.actionHistory.some(batch => batch.status === 'completed' && batch.items.some(item => item.status === 'completed')));\n// Enforcement actions\nexport const enforcementActions = {\n    updateOptions: (options) => {\n        enforcementStore.update(state => ({\n            ...state,\n            options: { ...state.options, ...options },\n        }));\n    },\n    createPlan: async (providers, dryRun = true) => {\n        let currentOptions = defaultOptions;\n        enforcementStore.update(state => {\n            currentOptions = state.options;\n            return { ...state, isPlanning: true, error: null };\n        });\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/library/plan', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    providers,\n                    options: currentOptions,\n                    dryRun,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentPlan: result.data,\n                    isPlanning: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isPlanning: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to create enforcement plan',\n                isPlanning: false,\n            }));\n            return { success: false, message: 'Failed to create enforcement plan' };\n        }\n    },\n    executePlan: async (planId) => {\n        enforcementStore.update(state => ({ ...state, isExecuting: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/execute', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    planId,\n                    dryRun: false,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                const batch = result.data;\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentBatch: batch,\n                    isExecuting: false,\n                }));\n                // Start polling for progress\n                enforcementActions.pollProgress(batch.id);\n                return { success: true, data: batch };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isExecuting: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to execute enforcement plan',\n                isExecuting: false,\n            }));\n            return { success: false, message: 'Failed to execute enforcement plan' };\n        }\n    },\n    pollProgress: async (batchId) => {\n        const pollInterval = setInterval(async () => {\n            try {\n                const token = localStorage.getItem('auth_token');\n                const response = await fetch(`http://localhost:3000/api/v1/spotify/enforcement/progress/${batchId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n                const result = await response.json();\n                if (result.success) {\n                    const batch = result.data;\n                    enforcementStore.update(state => ({\n                        ...state,\n                        currentBatch: batch,\n                    }));\n                    // Stop polling if batch is complete\n                    if (batch.status === 'completed' || batch.status === 'failed' || batch.status === 'cancelled') {\n                        clearInterval(pollInterval);\n                        // Move to history\n                        enforcementStore.update(state => ({\n                            ...state,\n                            actionHistory: [batch, ...state.actionHistory],\n                            currentBatch: null,\n                            currentPlan: null,\n                        }));\n                    }\n                }\n            }\n            catch (error) {\n                console.error('Failed to poll progress:', error);\n            }\n        }, 2000); // Poll every 2 seconds\n    },\n    rollbackBatch: async (batchId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/rollback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ batchId }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh action history\n                await enforcementActions.fetchActionHistory();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to rollback actions' };\n        }\n    },\n    fetchActionHistory: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/history', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    actionHistory: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch action history:', error);\n        }\n    },\n    clearPlan: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            currentPlan: null,\n            error: null,\n        }));\n    },\n    clearError: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            error: null,\n        }));\n    },\n};\n","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore } from '../stores/enforcement';\n  \n  $: options = $enforcementStore.options;\n\n  function updateAggressiveness(level: 'conservative' | 'moderate' | 'aggressive') {\n    enforcementActions.updateOptions({ aggressiveness: level });\n  }\n\n  function toggleOption(option: keyof typeof options) {\n    enforcementActions.updateOptions({ [option]: !options[option] });\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <!-- Aggressiveness Level -->\n  <div>\n    <h4 class=\"text-base font-medium text-gray-900\">Enforcement Aggressiveness</h4>\n    <p class=\"text-sm leading-5 text-gray-500\">\n      Choose how thoroughly to apply your blocklist across your music library.\n    </p>\n    <fieldset class=\"mt-4\">\n      <legend class=\"sr-only\">Aggressiveness level</legend>\n      <div class=\"space-y-4\">\n        <div class=\"flex items-center\">\n          <input\n            id=\"conservative\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'conservative'}\n            on:change={() => updateAggressiveness('conservative')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"conservative\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Conservative\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Only remove explicitly saved/liked content. Preserves playlists and recommendations.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"moderate\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'moderate'}\n            on:change={() => updateAggressiveness('moderate')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"moderate\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Moderate (Recommended)\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Remove from saved content and playlists. Filters recommendations where possible.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"aggressive\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'aggressive'}\n            on:change={() => updateAggressiveness('aggressive')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"aggressive\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Aggressive\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Maximum removal including radio seeds, recommendations, and related content.\n        </div>\n      </div>\n    </fieldset>\n  </div>\n\n  <!-- Collaboration and Featuring Options -->\n  <div>\n    <h4 class=\"text-base font-medium text-gray-900\">Collaboration Handling</h4>\n    <p class=\"text-sm leading-5 text-gray-500\">\n      Configure how to handle songs where blocked artists appear as collaborators or featured artists.\n    </p>\n    <div class=\"mt-4 space-y-4\">\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-collabs\"\n            type=\"checkbox\"\n            checked={options.blockCollabs}\n            on:change={() => toggleOption('blockCollabs')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-collabs\" class=\"font-medium text-gray-700\">\n            Block collaborations\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are listed as collaborators or co-writers.\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-featuring\"\n            type=\"checkbox\"\n            checked={options.blockFeaturing}\n            on:change={() => toggleOption('blockFeaturing')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-featuring\" class=\"font-medium text-gray-700\">\n            Block featuring\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are featured (e.g., \"Song Title (feat. Blocked Artist)\").\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-songwriter-only\"\n            type=\"checkbox\"\n            checked={options.blockSongwriterOnly}\n            on:change={() => toggleOption('blockSongwriterOnly')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-songwriter-only\" class=\"font-medium text-gray-700\">\n            Block songwriter credits only\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are credited only as songwriters (most restrictive).\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Warning for Aggressive Settings -->\n  {#if options.aggressiveness === 'aggressive' || options.blockSongwriterOnly}\n    <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-yellow-800\">\n            Aggressive Settings Warning\n          </h3>\n          <div class=\"mt-2 text-sm text-yellow-700\">\n            <p>\n              These settings may remove a significant amount of content from your library. \n              We recommend reviewing the enforcement preview carefully before executing.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementStore } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  \n  function formatDuration(duration: string) {\n    const seconds = parseInt(duration.replace('s', ''));\n    if (seconds < 60) return `${seconds} seconds`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  }\n\n  function getProviderIcon(provider: string) {\n    switch (provider) {\n      case 'spotify':\n        return 'M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z';\n      default:\n        return 'M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1';\n    }\n  }\n\n  function getCapabilityColor(capability: string) {\n    switch (capability) {\n      case 'SUPPORTED':\n        return 'text-green-600 bg-green-100';\n      case 'LIMITED':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'UNSUPPORTED':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n{#if plan}\n  <div class=\"space-y-6\">\n    <!-- Plan Summary -->\n    <div class=\"bg-gray-50 rounded-lg p-4\">\n      <div class=\"flex items-center justify-between\">\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900\">Plan Summary</h4>\n          <p class=\"text-sm text-gray-500\">\n            Estimated duration: {formatDuration(plan.estimatedDuration)}\n            {#if plan.resumable}\n              • Resumable if interrupted\n            {/if}\n          </p>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-sm font-medium text-gray-900\">Plan ID</div>\n          <div class=\"text-xs text-gray-500 font-mono\">{plan.planId.slice(0, 8)}...</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Provider Impact -->\n    {#each Object.entries(plan.impact) as [provider, impact]}\n      <div class=\"border border-gray-200 rounded-lg p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-8 w-8 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d={getProviderIcon(provider)} />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <h4 class=\"text-lg font-medium text-gray-900 capitalize\">{provider}</h4>\n            <p class=\"text-sm text-gray-500\">Impact preview for your {provider} library</p>\n          </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n          <!-- Liked Songs -->\n          {#if impact.likedSongs}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Liked Songs</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.likedSongs.toRemove} to remove\n                    {#if impact.likedSongs.collabsFound > 0}\n                      <br /><span class=\"text-xs\">({impact.likedSongs.collabsFound} collaborations)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Playlists -->\n          {#if impact.playlists}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Playlists</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.playlists.toScrub} playlists affected\n                    <br /><span class=\"text-xs\">{impact.playlists.tracksToRemove} tracks to remove</span>\n                    {#if impact.playlists.featuringFound > 0}\n                      <br /><span class=\"text-xs\">({impact.playlists.featuringFound} featuring)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Following -->\n          {#if impact.following}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Following</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.following.toUnfollow} to unfollow\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Radio Seeds -->\n          {#if impact.radioSeeds}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-orange-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2M7 4h10\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Radio Seeds</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.radioSeeds.toFilter} to filter\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Capabilities -->\n        {#if plan.capabilities[provider]}\n          <div class=\"mt-4 pt-4 border-t border-gray-200\">\n            <h5 class=\"text-sm font-medium text-gray-900 mb-2\">Platform Capabilities</h5>\n            <div class=\"flex flex-wrap gap-2\">\n              {#each Object.entries(plan.capabilities[provider]) as [capability, support]}\n                <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getCapabilityColor(support)}\">\n                  {capability.replace(/_/g, ' ').toLowerCase()}\n                </span>\n              {/each}\n            </div>\n          </div>\n        {/if}\n      </div>\n    {/each}\n\n    <!-- Important Notes -->\n    <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-blue-800\">\n            Before You Execute\n          </h3>\n          <div class=\"mt-2 text-sm text-blue-700\">\n            <ul class=\"list-disc list-inside space-y-1\">\n              <li>This is a preview - no changes have been made yet</li>\n              <li>Execution will modify your actual music library</li>\n              <li>Some actions may not be reversible depending on platform limitations</li>\n              <li>The process can be interrupted and resumed if needed</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-6\">\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n    </svg>\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement plan</h3>\n    <p class=\"mt-1 text-sm text-gray-500\">Create a plan to see the preview.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, executionProgress } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  $: currentBatch = $enforcementStore.currentBatch;\n  $: progress = $executionProgress;\n\n  async function executePlan() {\n    if (!plan) return;\n    \n    const confirmed = confirm(\n      'Are you sure you want to execute this enforcement plan? This will modify your music library and some changes may not be reversible.'\n    );\n    \n    if (confirmed) {\n      await enforcementActions.executePlan(plan.planId);\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function getActionIcon(action: string) {\n    switch (action) {\n      case 'remove_liked_song':\n        return 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z';\n      case 'remove_playlist_track':\n        return 'M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3';\n      case 'unfollow_artist':\n        return 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z';\n      default:\n        return 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z';\n    }\n  }\n\n\n</script>\n\n<div class=\"space-y-6\">\n  {#if !plan}\n    <!-- No Plan Available -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement plan available</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">Create a plan first to execute enforcement.</p>\n    </div>\n  {:else if currentBatch}\n    <!-- Execution in Progress -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900\">Enforcement Execution</h3>\n          <p class=\"text-sm text-gray-500\">\n            Batch ID: <span class=\"font-mono\">{currentBatch.id.slice(0, 8)}...</span>\n          </p>\n        </div>\n        <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor(currentBatch.status)}\">\n          {currentBatch.status}\n        </span>\n      </div>\n\n      <!-- Progress Bar -->\n      {#if progress}\n        <div class=\"mb-6\">\n          <div class=\"flex justify-between text-sm text-gray-600 mb-2\">\n            <span>Progress</span>\n            <span>{progress.processed} / {progress.total} ({progress.percentage}%)</span>\n          </div>\n          <div class=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              class=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\n              style=\"width: {progress.percentage}%\"\n            ></div>\n          </div>\n          <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\n            <span>{progress.completed} completed</span>\n            <span>{progress.failed} failed</span>\n            <span>{progress.skipped} skipped</span>\n          </div>\n        </div>\n      {/if}\n\n      <!-- Batch Summary -->\n      <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-4 mb-6\">\n        <div class=\"bg-gray-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-gray-900\">{currentBatch.summary.totalItems}</div>\n          <div class=\"text-xs text-gray-500\">Total Items</div>\n        </div>\n        <div class=\"bg-green-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-green-600\">{currentBatch.summary.completedItems}</div>\n          <div class=\"text-xs text-gray-500\">Completed</div>\n        </div>\n        <div class=\"bg-red-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-red-600\">{currentBatch.summary.failedItems}</div>\n          <div class=\"text-xs text-gray-500\">Failed</div>\n        </div>\n        <div class=\"bg-yellow-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-yellow-600\">{currentBatch.summary.skippedItems}</div>\n          <div class=\"text-xs text-gray-500\">Skipped</div>\n        </div>\n      </div>\n\n      <!-- Recent Actions -->\n      {#if currentBatch.items.length > 0}\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Recent Actions</h4>\n          <div class=\"space-y-2 max-h-64 overflow-y-auto\">\n            {#each currentBatch.items.slice(0, 10) as item}\n              <div class=\"flex items-center justify-between py-2 px-3 bg-gray-50 rounded-md\">\n                <div class=\"flex items-center space-x-3\">\n                  <svg class=\"h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d={getActionIcon(item.action)} />\n                  </svg>\n                  <div>\n                    <div class=\"text-sm font-medium text-gray-900\">\n                      {item.action.replace(/_/g, ' ')}\n                    </div>\n                    <div class=\"text-xs text-gray-500\">\n                      {item.entityType}: {item.entityId.slice(0, 20)}...\n                    </div>\n                  </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getStatusColor(item.status)}\">\n                    {item.status}\n                  </span>\n                  {#if item.status === 'failed' && item.errorMessage}\n                    <button\n                      title={item.errorMessage}\n                      class=\"text-red-400 hover:text-red-600\"\n                    >\n                      <svg class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </button>\n                  {/if}\n                </div>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else}\n    <!-- Ready to Execute -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"text-center\">\n        <svg class=\"mx-auto h-12 w-12 text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <h3 class=\"mt-2 text-lg font-medium text-gray-900\">Ready to Execute</h3>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Your enforcement plan is ready. Click execute to apply changes to your music library.\n        </p>\n        \n        <div class=\"mt-6\">\n          <button\n            on:click={executePlan}\n            disabled={$enforcementStore.isExecuting}\n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isExecuting}\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Starting Execution...\n            {:else}\n              <svg class=\"-ml-1 mr-3 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Execute Enforcement Plan\n            {/if}\n          </button>\n        </div>\n\n        <div class=\"mt-4 text-xs text-gray-500\">\n          <p>⚠️ This action will modify your music library</p>\n          <p>Some changes may not be reversible</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Error Display -->\n  {#if $enforcementStore.error}\n    <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{$enforcementStore.error}</p>\n          <button\n            on:click={() => enforcementActions.clearError()}\n            class=\"mt-2 text-sm text-red-600 hover:text-red-500\"\n          >\n            Dismiss\n          </button>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, canRollback } from '../stores/enforcement';\n  \n  $: actionHistory = $enforcementStore.actionHistory;\n\n  async function rollbackBatch(batchId: string) {\n    const confirmed = confirm(\n      'Are you sure you want to rollback this batch? This will attempt to undo the changes made during this enforcement.'\n    );\n    \n    if (confirmed) {\n      const result = await enforcementActions.rollbackBatch(batchId);\n      if (!result.success) {\n        alert(`Rollback failed: ${result.message}`);\n      }\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleString();\n  }\n\n  function getSuccessRate(batch: any) {\n    const total = batch.summary.totalItems;\n    const completed = batch.summary.completedItems;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div class=\"flex justify-between items-center\">\n    <div>\n      <h3 class=\"text-lg font-medium text-gray-900\">Action History</h3>\n      <p class=\"text-sm text-gray-500\">\n        View and manage your past enforcement executions.\n      </p>\n    </div>\n    \n    {#if $canRollback}\n      <div class=\"text-sm text-gray-500\">\n        <svg class=\"inline h-4 w-4 text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        Rollback available\n      </div>\n    {/if}\n  </div>\n\n  {#if actionHistory.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement history</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        Your enforcement executions will appear here after you run them.\n      </p>\n    </div>\n  {:else}\n    <!-- History List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each actionHistory as batch}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"flex-shrink-0\">\n                    <svg class=\"h-8 w-8 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                    </svg>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-sm font-medium text-gray-900 capitalize\">\n                        {batch.provider} Enforcement\n                      </p>\n                      <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor(batch.status)}\">\n                        {batch.status}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\n                      <p>\n                        Executed {formatDate(batch.createdAt)}\n                        {#if batch.completedAt}\n                          • Completed {formatDate(batch.completedAt)}\n                        {/if}\n                      </p>\n                    </div>\n                    <div class=\"mt-1 text-xs text-gray-400\">\n                      Batch ID: <span class=\"font-mono\">{batch.id.slice(0, 8)}...</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-4\">\n                  <!-- Stats -->\n                  <div class=\"text-right\">\n                    <div class=\"text-sm font-medium text-gray-900\">\n                      {getSuccessRate(batch)}% success\n                    </div>\n                    <div class=\"text-xs text-gray-500\">\n                      {batch.summary.completedItems} / {batch.summary.totalItems} items\n                    </div>\n                  </div>\n                  \n                  <!-- Actions -->\n                  {#if batch.status === 'completed' && batch.summary.completedItems > 0}\n                    <button\n                      on:click={() => rollbackBatch(batch.id)}\n                      class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" />\n                      </svg>\n                      Rollback\n                    </button>\n                  {/if}\n                </div>\n              </div>\n              \n              <!-- Detailed Stats -->\n              <div class=\"mt-4\">\n                <div class=\"grid grid-cols-2 gap-4 sm:grid-cols-4\">\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-gray-900\">{batch.summary.totalItems}</div>\n                    <div class=\"text-xs text-gray-500\">Total</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-green-600\">{batch.summary.completedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Completed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-red-600\">{batch.summary.failedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Failed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-yellow-600\">{batch.summary.skippedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Skipped</div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Options Used -->\n              <div class=\"mt-3 pt-3 border-t border-gray-200\">\n                <div class=\"text-xs text-gray-500\">\n                  <span class=\"font-medium\">Options:</span>\n                  {batch.options.aggressiveness} aggressiveness\n                  {#if batch.options.blockCollabs}, block collaborations{/if}\n                  {#if batch.options.blockFeaturing}, block featuring{/if}\n                  {#if batch.options.blockSongwriterOnly}, block songwriter credits{/if}\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Rollbacks\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Rollback attempts to undo changes made during enforcement. Success depends on platform capabilities:\n          </p>\n          <ul class=\"list-disc list-inside mt-1 space-y-1\">\n            <li>Re-adding liked songs and follows: Usually successful</li>\n            <li>Re-adding playlist tracks: May not preserve original order</li>\n            <li>Radio seed changes: May not be fully reversible</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { enforcementActions, enforcementStore, hasActivePlan } from '../stores/enforcement';\n  import { hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpCount } from '../stores/dnp';\n  import EnforcementOptions from './EnforcementOptions.svelte';\n  import EnforcementPreview from './EnforcementPreview.svelte';\n  import EnforcementExecution from './EnforcementExecution.svelte';\n  import ActionHistory from './ActionHistory.svelte';\n  \n  let activeTab = 'plan';\n  \n  onMount(() => {\n    enforcementActions.fetchActionHistory();\n  });\n\n  async function createPlan() {\n    const providers = [];\n    if ($hasActiveSpotifyConnection) {\n      providers.push('spotify');\n    }\n    \n    if (providers.length === 0) {\n      return;\n    }\n    \n    await enforcementActions.createPlan(providers, true);\n  }\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">Enforcement Planning</h2>\n    <p class=\"mt-1 text-sm text-gray-600\">\n      Plan and execute blocklist enforcement across your connected streaming services.\n    </p>\n  </div>\n\n  <!-- Prerequisites Check -->\n  {#if !$hasActiveSpotifyConnection || $dnpCount === 0}\n    <div class=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-yellow-800\">\n            Setup Required\n          </h3>\n          <div class=\"mt-2 text-sm text-yellow-700\">\n            <p>Before you can plan enforcement, you need:</p>\n            <ul class=\"list-disc list-inside mt-1 space-y-1\">\n              {#if !$hasActiveSpotifyConnection}\n                <li>Connect at least one streaming service (Spotify)</li>\n              {/if}\n              {#if $dnpCount === 0}\n                <li>Add artists to your Do-Not-Play list</li>\n              {/if}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('plan')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'plan' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Plan Enforcement\n      </button>\n      <button\n        on:click={() => setActiveTab('execute')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'execute' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        disabled={!$hasActivePlan}\n      >\n        Execute Plan\n      </button>\n      <button\n        on:click={() => setActiveTab('history')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'history' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Action History\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'plan'}\n    <div class=\"space-y-6\">\n      <!-- Enforcement Options -->\n      <div class=\"bg-white shadow rounded-lg p-6\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Enforcement Options</h3>\n        <EnforcementOptions />\n      </div>\n\n      <!-- Current Plan Preview -->\n      {#if $hasActivePlan}\n        <div class=\"bg-white shadow rounded-lg p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg font-medium text-gray-900\">Enforcement Preview</h3>\n            <button\n              on:click={() => enforcementActions.clearPlan()}\n              class=\"text-sm text-gray-500 hover:text-gray-700\"\n            >\n              Clear Plan\n            </button>\n          </div>\n          <EnforcementPreview />\n        </div>\n      {:else}\n        <!-- Create Plan -->\n        <div class=\"bg-white shadow rounded-lg p-6\">\n          <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Create Enforcement Plan</h3>\n          <p class=\"text-sm text-gray-600 mb-4\">\n            Generate a dry-run preview to see what changes will be made to your music library.\n          </p>\n          \n          <button\n            on:click={createPlan}\n            disabled={$enforcementStore.isPlanning || !$hasActiveSpotifyConnection || $dnpCount === 0}\n            class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isPlanning}\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Creating Plan...\n            {:else}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n              </svg>\n              Create Enforcement Plan\n            {/if}\n          </button>\n        </div>\n      {/if}\n\n      <!-- Error Display -->\n      {#if $enforcementStore.error}\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-red-800\">{$enforcementStore.error}</p>\n              <button\n                on:click={() => enforcementActions.clearError()}\n                class=\"mt-2 text-sm text-red-600 hover:text-red-500\"\n              >\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else if activeTab === 'execute'}\n    <EnforcementExecution />\n  {:else if activeTab === 'history'}\n    <ActionHistory />\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    lists: [],\n    currentList: null,\n    subscriptions: [],\n    subscriptionImpact: null,\n    isLoading: false,\n    isLoadingList: false,\n    isLoadingImpact: false,\n    searchQuery: '',\n    sortBy: 'updated_at',\n    sortOrder: 'desc',\n    error: null,\n};\nexport const communityStore = writable(initialState);\nexport const filteredLists = derived(communityStore, ($community) => {\n    let filtered = $community.lists;\n    // Apply search filter\n    if ($community.searchQuery.trim()) {\n        const query = $community.searchQuery.toLowerCase();\n        filtered = filtered.filter(list => list.name.toLowerCase().includes(query) ||\n            list.description.toLowerCase().includes(query) ||\n            list.criteria.toLowerCase().includes(query));\n    }\n    // Apply sorting\n    filtered.sort((a, b) => {\n        let aValue = a[$community.sortBy];\n        let bValue = b[$community.sortBy];\n        if ($community.sortBy === 'created_at' || $community.sortBy === 'updated_at') {\n            aValue = new Date(aValue).getTime();\n            bValue = new Date(bValue).getTime();\n        }\n        if (typeof aValue === 'string') {\n            aValue = aValue.toLowerCase();\n            bValue = bValue.toLowerCase();\n        }\n        const comparison = aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n        return $community.sortOrder === 'asc' ? comparison : -comparison;\n    });\n    return filtered;\n});\nexport const subscribedListIds = derived(communityStore, ($community) => new Set($community.subscriptions.map(sub => sub.list_id)));\nexport const isSubscribed = derived(subscribedListIds, ($subscribedIds) => (listId) => $subscribedIds.has(listId));\n// Community actions\nexport const communityActions = {\n    fetchLists: async () => {\n        communityStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    lists: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch community lists',\n                isLoading: false,\n            }));\n        }\n    },\n    fetchListDetails: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingList: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/artists`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    currentList: result.data,\n                    isLoadingList: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingList: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch list details',\n                isLoadingList: false,\n            }));\n        }\n    },\n    fetchSubscriptions: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/subscriptions', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptions: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch subscriptions:', error);\n        }\n    },\n    getSubscriptionImpact: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingImpact: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/impact`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptionImpact: result.data,\n                    isLoadingImpact: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingImpact: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to get subscription impact',\n                isLoadingImpact: false,\n            }));\n            return { success: false, message: 'Failed to get subscription impact' };\n        }\n    },\n    subscribe: async (listId, versionPinned, autoUpdate = true) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to subscribe to list' };\n        }\n    },\n    unsubscribe: async (listId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/unsubscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to unsubscribe from list' };\n        }\n    },\n    updateSubscription: async (listId, versionPinned, autoUpdate) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscription`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update subscription' };\n        }\n    },\n    createList: async (listData) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(listData),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh lists\n                await communityActions.fetchLists();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to create community list' };\n        }\n    },\n    updateSearch: (query) => {\n        communityStore.update(state => ({ ...state, searchQuery: query }));\n    },\n    updateSort: (sortBy, sortOrder) => {\n        communityStore.update(state => ({ ...state, sortBy, sortOrder }));\n    },\n    clearCurrentList: () => {\n        communityStore.update(state => ({ ...state, currentList: null }));\n    },\n    clearError: () => {\n        communityStore.update(state => ({ ...state, error: null }));\n    },\n};\n","<script lang=\"ts\">\n  import { communityActions, subscribedListIds, type CommunityList } from '../stores/community';\n  \n  export let list: CommunityList;\n  \n  $: isSubscribed = $subscribedListIds.has(list.id);\n\n  async function viewDetails() {\n    await communityActions.fetchListDetails(list.id);\n  }\n\n  async function toggleSubscription() {\n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      // Show impact preview first\n      const impact = await communityActions.getSubscriptionImpact(list.id);\n      if (impact.success) {\n        const confirmed = confirm(\n          `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n        );\n        if (confirmed) {\n          const result = await communityActions.subscribe(list.id);\n          if (!result.success) {\n            alert(`Failed to subscribe: ${result.message}`);\n          }\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n<div class=\"bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow\">\n  <div class=\"p-6\">\n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex items-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 truncate\">\n          {list.name}\n        </h3>\n        {#if isSubscribed}\n          <span class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium text-green-800 bg-green-100\">\n            Subscribed\n          </span>\n        {/if}\n      </div>\n      <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getUpdateCadenceColor(list.update_cadence)}\">\n        {list.update_cadence}\n      </span>\n    </div>\n    \n    <p class=\"mt-2 text-sm text-gray-600 line-clamp-2\">\n      {list.description}\n    </p>\n    \n    <div class=\"mt-3\">\n      <h4 class=\"text-xs font-medium text-gray-900 uppercase tracking-wide\">Criteria</h4>\n      <p class=\"mt-1 text-sm text-gray-600 line-clamp-2\">\n        {list.criteria}\n      </p>\n    </div>\n    \n    <div class=\"mt-4 flex items-center justify-between text-sm text-gray-500\">\n      <div class=\"flex items-center space-x-4\">\n        <span>\n          <svg class=\"inline h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          {list.artist_count || 0} artists\n        </span>\n        <span>\n          <svg class=\"inline h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n          </svg>\n          {list.subscriber_count || 0} subscribers\n        </span>\n      </div>\n      <span>v{list.version}</span>\n    </div>\n    \n    <div class=\"mt-4 text-xs text-gray-400\">\n      Updated {formatDate(list.updated_at)}\n      {#if list.governance_url}\n        • <a href={list.governance_url} target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500\">Governance</a>\n      {/if}\n    </div>\n  </div>\n  \n  <div class=\"bg-gray-50 px-6 py-3\">\n    <div class=\"flex justify-between items-center\">\n      <button\n        on:click={viewDetails}\n        class=\"text-sm text-indigo-600 hover:text-indigo-500 font-medium\"\n      >\n        View Details\n      </button>\n      \n      <button\n        on:click={toggleSubscription}\n        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md {isSubscribed \n          ? 'text-red-700 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n          : 'text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n      >\n        {#if isSubscribed}\n          <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n          Unsubscribe\n        {:else}\n          <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n          Subscribe\n        {/if}\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { communityActions, communityStore, subscribedListIds } from '../stores/community';\n  \n  $: list = $communityStore.currentList;\n  $: isSubscribed = list ? $subscribedListIds.has(list.id) : false;\n  \n  let showSubscriptionOptions = false;\n  let versionPinned: number | null = null;\n  let autoUpdate = true;\n\n  function goBack() {\n    communityActions.clearCurrentList();\n  }\n\n  async function toggleSubscription() {\n    if (!list) return;\n    \n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      showSubscriptionOptions = true;\n    }\n  }\n\n  async function confirmSubscription() {\n    if (!list) return;\n    \n    // Get impact preview\n    const impact = await communityActions.getSubscriptionImpact(list.id);\n    if (impact.success) {\n      const confirmed = confirm(\n        `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n      );\n      if (confirmed) {\n        const result = await communityActions.subscribe(\n          list.id, \n          versionPinned || undefined, \n          autoUpdate\n        );\n        if (result.success) {\n          showSubscriptionOptions = false;\n        } else {\n          alert(`Failed to subscribe: ${result.message}`);\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n{#if list}\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <button\n          on:click={goBack}\n          class=\"inline-flex items-center text-sm text-gray-500 hover:text-gray-700\"\n        >\n          <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n          Back to lists\n        </button>\n        \n        <div class=\"flex items-center space-x-2\">\n          {#if isSubscribed}\n            <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-green-800 bg-green-100\">\n              Subscribed\n            </span>\n          {/if}\n          <span class=\"text-sm text-gray-500\">v{list.version}</span>\n        </div>\n      </div>\n      \n      <div class=\"flex justify-between items-start\">\n        <div class=\"flex-1\">\n          <h1 class=\"text-2xl font-bold text-gray-900\">{list.name}</h1>\n          <p class=\"mt-2 text-gray-600\">{list.description}</p>\n          \n          <div class=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.artists?.length || 0}</div>\n              <div class=\"text-sm text-gray-500\">Artists</div>\n            </div>\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.subscriber_count || 0}</div>\n              <div class=\"text-sm text-gray-500\">Subscribers</div>\n            </div>\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.update_cadence}</div>\n              <div class=\"text-sm text-gray-500\">Updates</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"ml-6\">\n          <button\n            on:click={toggleSubscription}\n            class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm {isSubscribed \n              ? 'text-red-700 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n              : 'text-white bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n          >\n            {#if isSubscribed}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n              Unsubscribe\n            {:else}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Subscribe\n            {/if}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Subscription Options Modal -->\n    {#if showSubscriptionOptions}\n      <div class=\"bg-white shadow rounded-lg p-6 border-2 border-indigo-200\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Subscription Options</h3>\n        \n        <div class=\"space-y-4\">\n          <div>\n            <h4 class=\"block text-sm font-medium text-gray-700\">Version Pinning</h4>\n            <div class=\"mt-2 space-y-2\">\n              <div class=\"flex items-center\">\n                <input\n                  id=\"auto-update\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={null}\n                  class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                />\n                <label for=\"auto-update\" class=\"ml-3 block text-sm text-gray-700\">\n                  Auto-update to latest version (recommended)\n                </label>\n              </div>\n              <div class=\"flex items-center\">\n                <input\n                  id=\"pin-version\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={list.version}\n                  class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                />\n                <label for=\"pin-version\" class=\"ml-3 block text-sm text-gray-700\">\n                  Pin to current version (v{list.version})\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-start\">\n            <div class=\"flex items-center h-5\">\n              <input\n                id=\"auto-update-checkbox\"\n                type=\"checkbox\"\n                bind:checked={autoUpdate}\n                class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n              />\n            </div>\n            <div class=\"ml-3 text-sm\">\n              <label for=\"auto-update-checkbox\" class=\"font-medium text-gray-700\">\n                Enable automatic updates\n              </label>\n              <p class=\"text-gray-500\">\n                Receive notifications when the list is updated and apply changes automatically.\n              </p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mt-6 flex justify-end space-x-3\">\n          <button\n            on:click={() => showSubscriptionOptions = false}\n            class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Cancel\n          </button>\n          <button\n            on:click={confirmSubscription}\n            class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Subscribe\n          </button>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Criteria and Governance -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">List Criteria & Governance</h3>\n      \n      <div class=\"space-y-4\">\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900\">Inclusion Criteria</h4>\n          <p class=\"mt-1 text-sm text-gray-600\">{list.criteria}</p>\n        </div>\n        \n        <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Update Cadence</h4>\n            <p class=\"mt-1 text-sm text-gray-600 capitalize\">{list.update_cadence}</p>\n          </div>\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Last Updated</h4>\n            <p class=\"mt-1 text-sm text-gray-600\">{formatDate(list.updated_at)}</p>\n          </div>\n        </div>\n        \n        {#if list.governance_url}\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Governance Process</h4>\n            <a \n              href={list.governance_url} \n              target=\"_blank\" \n              class=\"mt-1 text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              View governance documentation →\n            </a>\n          </div>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Artists List -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n        Artists ({list.artists?.length || 0})\n      </h3>\n      \n      {#if $communityStore.isLoadingList}\n        <div class=\"text-center py-6\">\n          <svg class=\"animate-spin mx-auto h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          <p class=\"mt-2 text-sm text-gray-500\">Loading artists...</p>\n        </div>\n      {:else if list.artists && list.artists.length > 0}\n        <div class=\"space-y-3 max-h-96 overflow-y-auto\">\n          {#each list.artists as item}\n            <div class=\"flex items-center justify-between py-3 px-4 bg-gray-50 rounded-lg\">\n              <div class=\"flex items-center space-x-3\">\n                {#if item.artist.metadata.image}\n                  <img\n                    src={item.artist.metadata.image}\n                    alt={item.artist.canonical_name}\n                    class=\"h-10 w-10 rounded-full object-cover\"\n                  />\n                {:else}\n                  <div class=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                    <svg class=\"h-5 w-5 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                \n                <div>\n                  <div class=\"text-sm font-medium text-gray-900\">\n                    {item.artist.canonical_name}\n                  </div>\n                  {#if item.artist.metadata.genres && item.artist.metadata.genres.length > 0}\n                    <div class=\"text-xs text-gray-500\">\n                      {item.artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                  <div class=\"flex space-x-1 mt-1\">\n                    {#each getProviderBadges(item.artist) as badge}\n                      <span class=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium {badge.color}\">\n                        {badge.name}\n                      </span>\n                    {/each}\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"text-right\">\n                <div class=\"text-xs text-gray-500\">\n                  Added {formatDate(item.added_at)}\n                </div>\n                {#if item.rationale_link}\n                  <a \n                    href={item.rationale_link} \n                    target=\"_blank\" \n                    class=\"text-xs text-indigo-600 hover:text-indigo-500\"\n                  >\n                    View rationale\n                  </a>\n                {/if}\n              </div>\n            </div>\n          {/each}\n        </div>\n      {:else}\n        <div class=\"text-center py-6\">\n          <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          <p class=\"mt-2 text-sm text-gray-500\">No artists in this list yet.</p>\n        </div>\n      {/if}\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-12\">\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n    </svg>\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No list selected</h3>\n    <p class=\"mt-1 text-sm text-gray-500\">Select a list to view its details.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { communityActions } from '../stores/community';\n  \n  const dispatch = createEventDispatcher();\n  \n  let name = '';\n  let description = '';\n  let criteria = '';\n  let governanceUrl = '';\n  let updateCadence = 'monthly';\n  let visibility = 'public';\n  let isCreating = false;\n  let error = '';\n\n  async function handleSubmit() {\n    if (!name.trim() || !description.trim() || !criteria.trim()) {\n      error = 'Please fill in all required fields';\n      return;\n    }\n\n    isCreating = true;\n    error = '';\n\n    const result = await communityActions.createList({\n      name: name.trim(),\n      description: description.trim(),\n      criteria: criteria.trim(),\n      governance_url: governanceUrl.trim() || undefined,\n      update_cadence: updateCadence,\n      visibility: visibility as 'public' | 'private',\n    });\n\n    if (result.success) {\n      // Reset form\n      name = '';\n      description = '';\n      criteria = '';\n      governanceUrl = '';\n      updateCadence = 'monthly';\n      visibility = 'public';\n      dispatch('listCreated');\n    } else {\n      error = result.message || 'Failed to create community list';\n    }\n\n    isCreating = false;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-6\">\n  <!-- Name -->\n  <div>\n    <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n      List Name *\n    </label>\n    <input\n      id=\"name\"\n      type=\"text\"\n      bind:value={name}\n      placeholder=\"e.g., Controversial Artists List\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    />\n  </div>\n\n  <!-- Description -->\n  <div>\n    <label for=\"description\" class=\"block text-sm font-medium text-gray-700\">\n      Description *\n    </label>\n    <textarea\n      id=\"description\"\n      bind:value={description}\n      rows=\"3\"\n      placeholder=\"Describe the purpose and scope of this list...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    ></textarea>\n  </div>\n\n  <!-- Criteria -->\n  <div>\n    <label for=\"criteria\" class=\"block text-sm font-medium text-gray-700\">\n      Inclusion Criteria *\n    </label>\n    <textarea\n      id=\"criteria\"\n      bind:value={criteria}\n      rows=\"4\"\n      placeholder=\"Define clear, neutral criteria for including artists in this list. Avoid subjective language or personal opinions.\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    ></textarea>\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Criteria must be factual and neutral. Avoid subjective terms or personal opinions.\n    </p>\n  </div>\n\n  <!-- Governance URL -->\n  <div>\n    <label for=\"governance-url\" class=\"block text-sm font-medium text-gray-700\">\n      Governance Documentation URL\n    </label>\n    <input\n      id=\"governance-url\"\n      type=\"url\"\n      bind:value={governanceUrl}\n      placeholder=\"https://example.com/governance-process\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    />\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Link to documentation explaining your list's governance process and appeals procedure.\n    </p>\n  </div>\n\n  <!-- Update Cadence -->\n  <div>\n    <label for=\"update-cadence\" class=\"block text-sm font-medium text-gray-700\">\n      Update Cadence\n    </label>\n    <select\n      id=\"update-cadence\"\n      bind:value={updateCadence}\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    >\n      <option value=\"daily\">Daily</option>\n      <option value=\"weekly\">Weekly</option>\n      <option value=\"monthly\">Monthly</option>\n      <option value=\"as-needed\">As Needed</option>\n    </select>\n  </div>\n\n  <!-- Visibility -->\n  <div>\n    <h4 class=\"block text-sm font-medium text-gray-700\">Visibility</h4>\n    <div class=\"mt-2 space-y-2\">\n      <div class=\"flex items-center\">\n        <input\n          id=\"public\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"public\"\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n        />\n        <label for=\"public\" class=\"ml-3 block text-sm text-gray-700\">\n          Public - Anyone can discover and subscribe\n        </label>\n      </div>\n      <div class=\"flex items-center\">\n        <input\n          id=\"private\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"private\"\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n        />\n        <label for=\"private\" class=\"ml-3 block text-sm text-gray-700\">\n          Private - Only you can manage, others need direct link\n        </label>\n      </div>\n    </div>\n  </div>\n\n  {#if error}\n    <div class=\"text-red-600 text-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('listCreated')}\n      class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isCreating || !name.trim() || !description.trim() || !criteria.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isCreating}\n        <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Creating...\n      {:else}\n        Create List\n      {/if}\n    </button>\n  </div>\n\n  <!-- Guidelines -->\n  <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-yellow-800\">\n          Community List Guidelines\n        </h3>\n        <div class=\"mt-2 text-sm text-yellow-700\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li>Use neutral, factual language in criteria</li>\n            <li>Provide clear governance and appeals processes</li>\n            <li>Maintain transparency about list updates</li>\n            <li>Respect platform terms of service</li>\n            <li>Focus on user preferences, not personal judgments</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","<script lang=\"ts\">\n  import { communityActions, communityStore } from '../stores/community';\n  \n  $: subscriptions = $communityStore.subscriptions;\n\n  async function updateSubscription(listId: string, versionPinned?: number, autoUpdate?: boolean) {\n    const result = await communityActions.updateSubscription(listId, versionPinned, autoUpdate);\n    if (!result.success) {\n      alert(`Failed to update subscription: ${result.message}`);\n    }\n  }\n\n  async function unsubscribe(listId: string, listName: string) {\n    const confirmed = confirm(`Are you sure you want to unsubscribe from \"${listName}\"?`);\n    if (confirmed) {\n      const result = await communityActions.unsubscribe(listId);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    }\n  }\n\n  async function viewListDetails(listId: string) {\n    await communityActions.fetchListDetails(listId);\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function handleAutoUpdateChange(listId: string, versionPinned: number | undefined, event: Event) {\n    const target = event.target as HTMLInputElement;\n    updateSubscription(listId, versionPinned, target.checked);\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div>\n    <h3 class=\"text-lg font-medium text-gray-900\">My Subscriptions</h3>\n    <p class=\"text-sm text-gray-500\">\n      Manage your community list subscriptions and update preferences.\n    </p>\n  </div>\n\n  {#if subscriptions.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No subscriptions yet</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        Browse community lists to find ones that match your preferences.\n      </p>\n    </div>\n  {:else}\n    <!-- Subscriptions List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each subscriptions as subscription}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"flex-shrink-0\">\n                    <div class=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                      <svg class=\"h-5 w-5 text-indigo-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-sm font-medium text-gray-900\">\n                        {subscription.list.name}\n                      </p>\n                      <span class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getUpdateCadenceColor(subscription.list.update_cadence)}\">\n                        {subscription.list.update_cadence}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\n                      <p>\n                        Subscribed {formatDate(subscription.created_at)}\n                        • v{subscription.list.version}\n                        {#if subscription.version_pinned}\n                          (pinned to v{subscription.version_pinned})\n                        {/if}\n                      </p>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-600 line-clamp-1\">\n                      {subscription.list.description}\n                    </p>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-2\">\n                  <button\n                    on:click={() => viewListDetails(subscription.list_id)}\n                    class=\"text-indigo-600 hover:text-indigo-900 text-sm font-medium\"\n                  >\n                    View Details\n                  </button>\n                  <button\n                    on:click={() => unsubscribe(subscription.list_id, subscription.list.name)}\n                    class=\"text-red-600 hover:text-red-900 text-sm font-medium\"\n                  >\n                    Unsubscribe\n                  </button>\n                </div>\n              </div>\n              \n              <!-- Subscription Settings -->\n              <div class=\"mt-4 pt-4 border-t border-gray-200\">\n                <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <!-- Version Pinning -->\n                  <div>\n                    <h5 class=\"block text-xs font-medium text-gray-700 mb-2\">Version Preference</h5>\n                    <div class=\"space-y-2\">\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"auto-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, undefined, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"auto-{subscription.list_id}\" class=\"ml-2 block text-xs text-gray-700\">\n                          Auto-update to latest\n                        </label>\n                      </div>\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"pin-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, subscription.list.version, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"pin-{subscription.list_id}\" class=\"ml-2 block text-xs text-gray-700\">\n                          Pin to v{subscription.list.version}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Auto Update -->\n                  <div>\n                    <h5 class=\"block text-xs font-medium text-gray-700 mb-2\">Update Notifications</h5>\n                    <div class=\"flex items-start\">\n                      <div class=\"flex items-center h-4\">\n                        <input\n                          id=\"auto-update-{subscription.list_id}\"\n                          type=\"checkbox\"\n                          checked={subscription.auto_update}\n                          on:change={(e) => handleAutoUpdateChange(subscription.list_id, subscription.version_pinned, e)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300 rounded\"\n                        />\n                      </div>\n                      <div class=\"ml-2 text-xs\">\n                        <label for=\"auto-update-{subscription.list_id}\" class=\"font-medium text-gray-700\">\n                          Enable automatic updates\n                        </label>\n                        <p class=\"text-gray-500\">\n                          Apply changes when the list is updated\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Subscription Management Info -->\n  <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          Managing Your Subscriptions\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li><strong>Auto-update:</strong> Automatically apply changes when lists are updated</li>\n            <li><strong>Version pinning:</strong> Stay on a specific version to avoid unexpected changes</li>\n            <li><strong>Notifications:</strong> Get notified about list updates and changes</li>\n            <li><strong>Impact preview:</strong> See what changes will be made before they're applied</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { communityActions, communityStore, filteredLists, subscribedListIds } from '../stores/community';\n  import CommunityListCard from './CommunityListCard.svelte';\n  import CommunityListDetail from './CommunityListDetail.svelte';\n  import CreateCommunityList from './CreateCommunityList.svelte';\n  import MySubscriptions from './MySubscriptions.svelte';\n  \n  let activeTab = 'browse';\n  let showCreateForm = false;\n  \n  onMount(async () => {\n    await communityActions.fetchLists();\n    await communityActions.fetchSubscriptions();\n  });\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n    showCreateForm = false;\n    communityActions.clearCurrentList();\n  }\n\n  function handleSearch(event: Event) {\n    const target = event.target as HTMLInputElement;\n    communityActions.updateSearch(target.value);\n  }\n\n  function handleSort(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    const [sortBy, sortOrder] = target.value.split(':');\n    communityActions.updateSort(sortBy as any, sortOrder as any);\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-2xl font-bold text-gray-900\">Community Lists</h2>\n        <p class=\"mt-1 text-sm text-gray-600\">\n          Discover and subscribe to community-curated blocklists.\n        </p>\n      </div>\n      <button\n        on:click={() => showCreateForm = !showCreateForm}\n        class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Create List\n      </button>\n    </div>\n  </div>\n\n  <!-- Create List Form -->\n  {#if showCreateForm}\n    <div class=\"mb-6 bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Create Community List</h3>\n      <CreateCommunityList on:listCreated={() => showCreateForm = false} />\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('browse')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'browse' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Browse Lists\n      </button>\n      <button\n        on:click={() => setActiveTab('subscriptions')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'subscriptions' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        My Subscriptions ({$subscribedListIds.size})\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'browse'}\n    <!-- List Detail View -->\n    {#if $communityStore.currentList}\n      <CommunityListDetail />\n    {:else}\n      <!-- Browse Lists -->\n      <div class=\"space-y-6\">\n        <!-- Search and Filter -->\n        <div class=\"bg-white shadow rounded-lg p-4\">\n          <div class=\"flex flex-col sm:flex-row gap-4\">\n            <div class=\"flex-1\">\n              <label for=\"search\" class=\"sr-only\">Search lists</label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\"Search lists by name, description, or criteria...\"\n                  value={$communityStore.searchQuery}\n                  on:input={handleSearch}\n                  class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n            \n            <div class=\"sm:w-48\">\n              <label for=\"sort\" class=\"sr-only\">Sort by</label>\n              <select\n                id=\"sort\"\n                on:change={handleSort}\n                class=\"block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"updated_at:desc\">Recently Updated</option>\n                <option value=\"created_at:desc\">Newest First</option>\n                <option value=\"name:asc\">Name A-Z</option>\n                <option value=\"name:desc\">Name Z-A</option>\n                <option value=\"artist_count:desc\">Most Artists</option>\n                <option value=\"subscriber_count:desc\">Most Subscribers</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Lists Grid -->\n        {#if $communityStore.isLoading}\n          <div class=\"text-center py-12\">\n            <svg class=\"animate-spin mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <p class=\"mt-2 text-sm text-gray-500\">Loading community lists...</p>\n          </div>\n        {:else if $communityStore.error}\n          <div class=\"text-center py-12\">\n            <svg class=\"mx-auto h-8 w-8 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p class=\"mt-2 text-sm text-red-600\">{$communityStore.error}</p>\n            <button\n              on:click={() => communityActions.fetchLists()}\n              class=\"mt-2 text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Try again\n            </button>\n          </div>\n        {:else if $filteredLists.length === 0}\n          <div class=\"text-center py-12\">\n            {#if $communityStore.lists.length === 0}\n              <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n              <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No community lists yet</h3>\n              <p class=\"mt-1 text-sm text-gray-500\">Be the first to create a community list.</p>\n              <div class=\"mt-6\">\n                <button\n                  on:click={() => showCreateForm = true}\n                  class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Create your first list\n                </button>\n              </div>\n            {:else}\n              <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No lists match your search</h3>\n              <p class=\"mt-1 text-sm text-gray-500\">Try adjusting your search terms or filters.</p>\n            {/if}\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n            {#each $filteredLists as list (list.id)}\n              <CommunityListCard {list} />\n            {/each}\n          </div>\n        {/if}\n      </div>\n    {/if}\n  {:else if activeTab === 'subscriptions'}\n    <MySubscriptions />\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"mt-8 bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Community Lists\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Community lists are curated blocklists created and maintained by other users. \n            Each list has clear criteria and governance processes to ensure quality and transparency.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Subscribe to lists that match your preferences</li>\n            <li>Pin specific versions or enable auto-updates</li>\n            <li>Preview impact before subscribing</li>\n            <li>Appeal decisions through structured processes</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { authActions } from '../stores/auth';\n  import { api } from '../utils/api';\n  import TwoFactorSetup from './TwoFactorSetup.svelte';\n\n  interface UserSettings {\n    two_factor_enabled: boolean;\n    email_notifications: boolean;\n    privacy_mode: boolean;\n  }\n\n  interface UserProfile {\n    id: string;\n    email: string;\n    email_verified: boolean;\n    totp_enabled: boolean;\n    created_at: string;\n    updated_at: string;\n    last_login?: string;\n    settings: UserSettings;\n  }\n\n  let profile: UserProfile | null = null;\n  let isLoading = false;\n  let error = '';\n  let success = '';\n  let activeTab = 'profile';\n  \n  // Profile editing\n  let editingProfile = false;\n  let editEmail = '';\n  \n  // Settings editing\n  let editSettings: UserSettings = {\n    two_factor_enabled: false,\n    email_notifications: true,\n    privacy_mode: false\n  };\n\n  // 2FA management\n  let show2FASetup = false;\n  let show2FADisable = false;\n\n  // Data export\n  let exportLoading = false;\n\n  // Account deletion\n  let showDeleteConfirm = false;\n  let deleteConfirmEmail = '';\n  let deleteReason = '';\n  let deleteLoading = false;\n\n  onMount(async () => {\n    await loadProfile();\n  });\n\n  async function loadProfile() {\n    isLoading = true;\n    error = '';\n    \n    try {\n      const result = await api.get('/users/profile');\n      if (result.success) {\n        profile = result.data;\n        editEmail = profile?.email || '';\n        editSettings = { \n          two_factor_enabled: profile?.settings?.two_factor_enabled || false,\n          email_notifications: profile?.settings?.email_notifications || true,\n          privacy_mode: profile?.settings?.privacy_mode || false\n        };\n      } else {\n        error = result.message || 'Failed to load profile';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to load profile';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function updateProfile() {\n    if (!profile) return;\n    \n    isLoading = true;\n    error = '';\n    success = '';\n\n    try {\n      const result = await api.put('/users/profile', {\n        email: editEmail !== profile.email ? editEmail : undefined\n      });\n\n      if (result.success) {\n        profile = result.data;\n        editingProfile = false;\n        success = 'Profile updated successfully';\n        // Update auth store\n        await authActions.fetchProfile();\n      } else {\n        error = result.message || 'Failed to update profile';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to update profile';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function updateSettings() {\n    if (!profile) return;\n    \n    isLoading = true;\n    error = '';\n    success = '';\n\n    try {\n      const result = await api.put('/users/profile', {\n        settings: editSettings\n      });\n\n      if (result.success) {\n        profile = result.data;\n        success = 'Settings updated successfully';\n      } else {\n        error = result.message || 'Failed to update settings';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to update settings';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  async function exportData() {\n    exportLoading = true;\n    error = '';\n\n    try {\n      const result = await api.get('/users/export');\n      if (result.success) {\n        // Create and download file\n        const blob = new Blob([JSON.stringify(result.data, null, 2)], { \n          type: 'application/json' \n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `no-drake-data-export-${new Date().toISOString().split('T')[0]}.json`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n        URL.revokeObjectURL(url);\n        success = 'Data exported successfully';\n      } else {\n        error = result.message || 'Failed to export data';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to export data';\n    } finally {\n      exportLoading = false;\n    }\n  }\n\n  async function deleteAccount() {\n    if (!profile || deleteConfirmEmail !== profile.email) {\n      error = 'Email confirmation does not match';\n      return;\n    }\n\n    deleteLoading = true;\n    error = '';\n\n    try {\n      const result = await api.delete('/users/account', {\n        confirmation_email: deleteConfirmEmail,\n        reason: deleteReason || undefined\n      });\n\n      if (result.success) {\n        // Account deleted, logout user\n        await authActions.logout();\n      } else {\n        error = result.message || 'Failed to delete account';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to delete account';\n    } finally {\n      deleteLoading = false;\n    }\n  }\n\n  function handle2FASetupComplete() {\n    show2FASetup = false;\n    loadProfile(); // Reload to get updated 2FA status\n    success = '2FA enabled successfully';\n  }\n\n  function handle2FASetupCancel() {\n    show2FASetup = false;\n  }\n\n  async function handle2FADisable(code: string) {\n    try {\n      const result = await authActions.disable2FA(code);\n      if (result.success) {\n        show2FADisable = false;\n        await loadProfile();\n        success = '2FA disabled successfully';\n      } else {\n        error = result.message || 'Failed to disable 2FA';\n      }\n    } catch (err: any) {\n      error = err.message || 'Failed to disable 2FA';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  function handleTotpInput(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const code = target.value;\n    if (code.length === 6 && /^\\d{6}$/.test(code)) {\n      handle2FADisable(code);\n    }\n  }\n</script>\n\n<div class=\"max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n  <!-- Header -->\n  <div class=\"mb-8\">\n    <h1 class=\"text-2xl font-bold text-gray-900\">Account Settings</h1>\n    <p class=\"mt-1 text-sm text-gray-600\">\n      Manage your account information, security settings, and preferences.\n    </p>\n  </div>\n\n  <!-- Error/Success Messages -->\n  {#if error}\n    <div class=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{error}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  {#if success}\n    <div class=\"mb-6 bg-green-50 border border-green-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <svg class=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-green-800\">{success}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  {#if isLoading && !profile}\n    <div class=\"text-center py-12\">\n      <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto\"></div>\n      <p class=\"mt-2 text-gray-600\">Loading profile...</p>\n    </div>\n  {:else if profile}\n    <!-- Tab Navigation -->\n    <div class=\"border-b border-gray-200 mb-6\">\n      <nav class=\"-mb-px flex space-x-8\">\n        <button\n          on:click={() => activeTab = 'profile'}\n          class=\"py-2 px-1 border-b-2 font-medium text-sm {activeTab === 'profile' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Profile\n        </button>\n        <button\n          on:click={() => activeTab = 'security'}\n          class=\"py-2 px-1 border-b-2 font-medium text-sm {activeTab === 'security' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Security\n        </button>\n        <button\n          on:click={() => activeTab = 'preferences'}\n          class=\"py-2 px-1 border-b-2 font-medium text-sm {activeTab === 'preferences' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Preferences\n        </button>\n        <button\n          on:click={() => activeTab = 'data'}\n          class=\"py-2 px-1 border-b-2 font-medium text-sm {activeTab === 'data' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Data & Privacy\n        </button>\n      </nav>\n    </div>\n\n    <!-- Profile Tab -->\n    {#if activeTab === 'profile'}\n      <div class=\"bg-white shadow rounded-lg\">\n        <div class=\"px-6 py-4 border-b border-gray-200\">\n          <h3 class=\"text-lg font-medium text-gray-900\">Profile Information</h3>\n          <p class=\"mt-1 text-sm text-gray-600\">\n            Update your account's profile information and email address.\n          </p>\n        </div>\n        <div class=\"px-6 py-4\">\n          <div class=\"space-y-6\">\n            <!-- Email -->\n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email</label>\n              {#if editingProfile}\n                <div class=\"mt-1 flex rounded-md shadow-sm\">\n                  <input\n                    type=\"email\"\n                    id=\"email\"\n                    bind:value={editEmail}\n                    class=\"flex-1 min-w-0 block w-full px-3 py-2 rounded-md border-gray-300 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n              {:else}\n                <div class=\"mt-1 flex items-center justify-between\">\n                  <span class=\"text-sm text-gray-900\">{profile.email}</span>\n                  <button\n                    on:click={() => editingProfile = true}\n                    class=\"text-sm text-indigo-600 hover:text-indigo-500\"\n                  >\n                    Edit\n                  </button>\n                </div>\n              {/if}\n            </div>\n\n            <!-- Account Info -->\n            <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2\">\n              <div>\n                <span class=\"block text-sm font-medium text-gray-700\">Account Created</span>\n                <p class=\"mt-1 text-sm text-gray-900\">{formatDate(profile.created_at)}</p>\n              </div>\n              <div>\n                <span class=\"block text-sm font-medium text-gray-700\">Last Updated</span>\n                <p class=\"mt-1 text-sm text-gray-900\">{formatDate(profile.updated_at)}</p>\n              </div>\n              {#if profile.last_login}\n                <div>\n                  <span class=\"block text-sm font-medium text-gray-700\">Last Login</span>\n                  <p class=\"mt-1 text-sm text-gray-900\">{formatDate(profile.last_login)}</p>\n                </div>\n              {/if}\n            </div>\n\n            <!-- Action Buttons -->\n            {#if editingProfile}\n              <div class=\"flex justify-end space-x-3\">\n                <button\n                  on:click={() => {\n                    editingProfile = false;\n                    editEmail = profile?.email || '';\n                  }}\n                  class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  on:click={updateProfile}\n                  disabled={isLoading}\n                  class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n                >\n                  {isLoading ? 'Saving...' : 'Save Changes'}\n                </button>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Security Tab -->\n    {#if activeTab === 'security'}\n      <div class=\"space-y-6\">\n        <!-- Two-Factor Authentication -->\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-6 py-4 border-b border-gray-200\">\n            <h3 class=\"text-lg font-medium text-gray-900\">Two-Factor Authentication</h3>\n            <p class=\"mt-1 text-sm text-gray-600\">\n              Add an extra layer of security to your account with 2FA.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <p class=\"text-sm font-medium text-gray-900\">\n                  Status: {profile.totp_enabled ? 'Enabled' : 'Disabled'}\n                </p>\n                <p class=\"text-sm text-gray-600\">\n                  {profile.totp_enabled \n                    ? 'Your account is protected with 2FA' \n                    : 'Enable 2FA to secure your account'}\n                </p>\n              </div>\n              <div>\n                {#if profile.totp_enabled}\n                  <button\n                    on:click={() => show2FADisable = true}\n                    class=\"px-4 py-2 border border-red-300 rounded-md text-sm font-medium text-red-700 hover:bg-red-50\"\n                  >\n                    Disable 2FA\n                  </button>\n                {:else}\n                  <button\n                    on:click={() => show2FASetup = true}\n                    class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700\"\n                  >\n                    Enable 2FA\n                  </button>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Preferences Tab -->\n    {#if activeTab === 'preferences'}\n      <div class=\"bg-white shadow rounded-lg\">\n        <div class=\"px-6 py-4 border-b border-gray-200\">\n          <h3 class=\"text-lg font-medium text-gray-900\">Preferences</h3>\n          <p class=\"mt-1 text-sm text-gray-600\">\n            Customize your experience and notification settings.\n          </p>\n        </div>\n        <div class=\"px-6 py-4\">\n          <div class=\"space-y-6\">\n            <!-- Email Notifications -->\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <span class=\"text-sm font-medium text-gray-900\">Email Notifications</span>\n                <p class=\"text-sm text-gray-600\">Receive email updates about your account activity</p>\n              </div>\n              <label class=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  bind:checked={editSettings.email_notifications}\n                  class=\"sr-only peer\"\n                />\n                <div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\n              </label>\n            </div>\n\n            <!-- Privacy Mode -->\n            <div class=\"flex items-center justify-between\">\n              <div>\n                <span class=\"text-sm font-medium text-gray-900\">Privacy Mode</span>\n                <p class=\"text-sm text-gray-600\">Hide your activity from other users</p>\n              </div>\n              <label class=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  bind:checked={editSettings.privacy_mode}\n                  class=\"sr-only peer\"\n                />\n                <div class=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-indigo-600\"></div>\n              </label>\n            </div>\n\n            <!-- Save Button -->\n            <div class=\"flex justify-end\">\n              <button\n                on:click={updateSettings}\n                disabled={isLoading}\n                class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n              >\n                {isLoading ? 'Saving...' : 'Save Preferences'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Data & Privacy Tab -->\n    {#if activeTab === 'data'}\n      <div class=\"space-y-6\">\n        <!-- Data Export -->\n        <div class=\"bg-white shadow rounded-lg\">\n          <div class=\"px-6 py-4 border-b border-gray-200\">\n            <h3 class=\"text-lg font-medium text-gray-900\">Data Export</h3>\n            <p class=\"mt-1 text-sm text-gray-600\">\n              Download a copy of all your data for your records.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            <button\n              on:click={exportData}\n              disabled={exportLoading}\n              class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {exportLoading ? 'Exporting...' : 'Export My Data'}\n            </button>\n          </div>\n        </div>\n\n        <!-- Account Deletion -->\n        <div class=\"bg-white shadow rounded-lg border-red-200\">\n          <div class=\"px-6 py-4 border-b border-red-200\">\n            <h3 class=\"text-lg font-medium text-red-900\">Delete Account</h3>\n            <p class=\"mt-1 text-sm text-red-600\">\n              Permanently delete your account and all associated data.\n            </p>\n          </div>\n          <div class=\"px-6 py-4\">\n            {#if !showDeleteConfirm}\n              <button\n                on:click={() => showDeleteConfirm = true}\n                class=\"px-4 py-2 border border-red-300 rounded-md text-sm font-medium text-red-700 hover:bg-red-50\"\n              >\n                Delete Account\n              </button>\n            {:else}\n              <div class=\"space-y-4\">\n                <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n                  <div class=\"flex\">\n                    <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                    </svg>\n                    <div class=\"ml-3\">\n                      <h3 class=\"text-sm font-medium text-red-800\">\n                        This action cannot be undone\n                      </h3>\n                      <p class=\"mt-2 text-sm text-red-700\">\n                        This will permanently delete your account, DNP lists, and all associated data.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label for=\"confirm-email\" class=\"block text-sm font-medium text-gray-700\">\n                    Confirm your email address\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"confirm-email\"\n                    bind:value={deleteConfirmEmail}\n                    placeholder={profile.email}\n                    class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label for=\"delete-reason\" class=\"block text-sm font-medium text-gray-700\">\n                    Reason for deletion (optional)\n                  </label>\n                  <textarea\n                    id=\"delete-reason\"\n                    bind:value={deleteReason}\n                    rows=\"3\"\n                    class=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                    placeholder=\"Help us improve by telling us why you're leaving...\"\n                  ></textarea>\n                </div>\n\n                <div class=\"flex justify-end space-x-3\">\n                  <button\n                    on:click={() => {\n                      showDeleteConfirm = false;\n                      deleteConfirmEmail = '';\n                      deleteReason = '';\n                    }}\n                    class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    on:click={deleteAccount}\n                    disabled={deleteLoading || deleteConfirmEmail !== profile.email}\n                    class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 disabled:opacity-50\"\n                  >\n                    {deleteLoading ? 'Deleting...' : 'Delete Account'}\n                  </button>\n                </div>\n              </div>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {/if}\n  {/if}\n</div>\n\n<!-- 2FA Setup Modal -->\n{#if show2FASetup}\n  <TwoFactorSetup\n    on:complete={handle2FASetupComplete}\n    on:cancel={handle2FASetupCancel}\n  />\n{/if}\n\n<!-- 2FA Disable Modal -->\n{#if show2FADisable}\n  <div class=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n    <div class=\"relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white\">\n      <div class=\"mt-3 text-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n          Disable Two-Factor Authentication\n        </h3>\n        <p class=\"text-sm text-gray-600 mb-6\">\n          Enter your 2FA code to disable two-factor authentication\n        </p>\n        \n        <div class=\"mb-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter 6-digit code\"\n            maxlength=\"6\"\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md text-center text-lg tracking-widest\"\n            on:input={handleTotpInput}\n          />\n        </div>\n        \n        <div class=\"flex justify-center space-x-3\">\n          <button\n            on:click={() => show2FADisable = false}\n            class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50\"\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { connectionActions, connectedServices, hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpActions, dnpCount } from '../stores/dnp';\n  import { router, currentRoute } from '../utils/router';\n  import Navigation from './Navigation.svelte';\n  import ServiceConnections from './ServiceConnections.svelte';\n  import DnpManager from './DnpManager.svelte';\n  import EnforcementPlanning from './EnforcementPlanning.svelte';\n  import CommunityLists from './CommunityLists.svelte';\n  import UserProfile from './UserProfile.svelte';\n  \n  onMount(async () => {\n    await connectionActions.fetchConnections();\n    await dnpActions.fetchDnpList();\n  });\n\n  function setActiveTab(tab: string) {\n    router.navigate(tab);\n  }\n</script>\n\n<div class=\"min-h-screen bg-gray-50\">\n  <Navigation />\n\n  <!-- Main Content -->\n  <main class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n    {#if $currentRoute === 'overview'}\n      <!-- Overview Tab -->\n      <div class=\"px-4 py-6 sm:px-0\">\n        <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          <!-- Connected Services Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      Connected Services\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$connectedServices.length}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                <button\n                  on:click={() => setActiveTab('connections')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage connections\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- DNP List Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      Blocked Artists\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$dnpCount}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                <button\n                  on:click={() => setActiveTab('dnp')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage DNP list\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Status Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 {$hasActiveSpotifyConnection ? 'text-green-400' : 'text-gray-400'}\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      System Status\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$hasActiveSpotifyConnection ? 'Active' : 'Setup Required'}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                {#if !$hasActiveSpotifyConnection}\n                  <button\n                    on:click={() => setActiveTab('connections')}\n                    class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                  >\n                    Connect Spotify\n                  </button>\n                {:else}\n                  <span class=\"text-green-700\">Ready to use</span>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"mt-8\">\n          <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n            Quick Actions\n          </h3>\n          <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n            <button\n              on:click={() => setActiveTab('dnp')}\n              class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                Add Artist to DNP List\n              </span>\n            </button>\n            \n            {#if $hasActiveSpotifyConnection && $dnpCount > 0}\n              <button\n                on:click={() => setActiveTab('enforcement')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                  Plan Enforcement\n                </span>\n              </button>\n            {:else}\n              <button\n                on:click={() => setActiveTab('connections')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                </svg>\n                <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                  Connect Spotify\n                </span>\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {:else if $currentRoute === 'connections'}\n      <ServiceConnections />\n    {:else if $currentRoute === 'dnp'}\n      <DnpManager />\n    {:else if $currentRoute === 'enforcement'}\n      <EnforcementPlanning />\n    {:else if $currentRoute === 'community'}\n      <CommunityLists />\n    {:else if $currentRoute === 'profile'}\n      <UserProfile />\n    {/if}\n  </main>\n</div>","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport { isAuthenticated, authActions } from \"./lib/stores/auth\";\n\timport { router } from \"./lib/utils/router\";\n\timport Login from \"./lib/components/Login.svelte\";\n\timport Dashboard from \"./lib/components/Dashboard.svelte\";\n\n\tlet isInitialized = false;\n\n\tonMount(async () => {\n\t\tconsole.log(\"App mounting...\");\n\t\ttry {\n\t\t\t// Initialize router\n\t\t\trouter.init();\n\t\t\tconsole.log(\"Router initialized\");\n\n\t\t\t// Initialize auth state\n\t\t\tawait authActions.fetchProfile();\n\t\t\tconsole.log(\"Auth profile fetched\");\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Error during app initialization:\", error);\n\t\t} finally {\n\t\t\tisInitialized = true;\n\t\t\tconsole.log(\"App initialized, isAuthenticated:\", $isAuthenticated);\n\t\t}\n\t});\n</script>\n\n{#if !isInitialized}\n\t<div class=\"min-h-screen flex items-center justify-center bg-gray-50\">\n\t\t<div class=\"text-center\">\n\t\t\t<div\n\t\t\t\tclass=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"\n\t\t\t></div>\n\t\t\t<p class=\"mt-4 text-gray-600\">Loading...</p>\n\t\t</div>\n\t</div>\n{:else if $isAuthenticated}\n\t<Dashboard />\n{:else}\n\t<Login />\n{/if}\n","import App from './App.svelte';\nimport './app.css';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","init_binding_group","group","_inputs","p","inputs","input","r","splice","indexOf","set_data","set_input_value","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","filter","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","$on","index","$set","obj","keys","window","__svelte","v","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","every","Boolean","auto","started","values","pending","cleanup","sync","result","unsubscribers","config","apiUrl","location","origin","apiVersion","appName","environment","features","twoFactorAuth","communityLists","analytics","development","hotReload","debugMode","external","spotifyClientId","appleMusicToken","ui","defaultTheme","performance","enableServiceWorker","cacheDuration","parseInt","isDevelopment","isProduction","getApiEndpoint","path","normalizedPath","startsWith","apiPath","ApiError","constructor","status","message","super","defineProperty","enumerable","configurable","async","apiCall","endpoint","token","localStorage","getItem","requestConfig","headers","Authorization","response","fetch","json","ok","error","api","method","body","JSON","stringify","authStore","user","refreshToken","isAuthenticated","isLoading","$auth","currentUser","authActions","login","email","password","totpCode","state","totp_code","success","access_token","refresh_token","setItem","fetchProfile","register","confirmPassword","termsAccepted","confirm_password","terms_accepted","autoLogin","errors","errorData","parse","parseError","console","logout","removeItem","newRefreshToken","setup2FA","qrCodeUrl","qr_code_url","secret","verify2FA","code","disable2FA","currentRoute","routes","overview","title","connections","dnp","enforcement","community","profile","router","route","routeConfig","history","pushState","pathname","find","div1","label","div0","div3","div2","svg","circle","create_if_block_4","create_if_block_3","create_if_block_2","create_if_block_1","create_if_block","button0","disabled","button0_disabled_value","div7","form","label0","input0","div4","label1","input1","div5","div6","button1","dispatch","$$props","showTotpInput","$$invalidate","emailValid","test","passwordValid","formValid","toLowerCase","includes","trim","t_value","t","each_value","span0","span1","div14","div13","svg0","path0","span2","svg1","path1","span3","div8","svg2","path2","span4","div10","div9","svg3","path3","span5","div12","div11","svg4","path4","span6","div","create_if_block_9","create_if_block_10","create_if_block_8","if_block2","create_if_block_7","create_if_block_5","create_if_block_6","input2","label2","input3","label3","fieldErrors","passwordLength","passwordUppercase","passwordLowercase","passwordNumber","passwordSpecial","passwordStrength","passwordStrengthText","passwordStrengthColor","passwordsMatch","checked","button","if_block0","button1_disabled_value","h3","h4","img","img_src_value","if_block1","verificationCode","step","codeValid","navigator","clipboard","writeText","span","if_block4","h2","p0","p1","handleSubmit","twoFactorSetupRef","mode","pendingEmail","backToLogin","err","setTimeout","field","showSuccess","$$value","connectionsStore","connectedServices","$connections","conn","spotifyConnection","provider","hasActiveSpotifyConnection","$spotify","connectionActions","fetchConnections","initiateSpotifyAuth","auth_url","handleSpotifyCallback","disconnectSpotify","checkSpotifyHealth","dnpStore","entries","searchResults","isSearching","$dnp","entry","artist","dnpCount","dnpTags","allTags","flatMap","tags","sort","dnpActions","fetchDnpList","searchArtists","query","limit","encodeURIComponent","addArtist","artistQuery","note","removeArtist","artistId","updateEntry","bulkImport","format","exportList","clearSearch","t2_value","button2","button2_class_value","button3","button3_class_value","button4","button4_class_value","button5","button5_class_value","button6","button6_class_value","nav0","nav1","t2","navigate","getStatusColor","formatDate","created_at","provider_user_id","scopes","t1","t1_value","join","div27","div21","ul0","li0","li1","li2","div26","dateString","Date","toLocaleDateString","isConnecting","urlParams","URLSearchParams","search","replaceState","each_value_1","metadata","image","img_alt_value","canonical_name","genres","t0_value","span_class_value","color","t0","each_value_2","getProviderBadges","t3_value","t3","textarea","badges","external_ids","spotify","apple","musicbrainz","searchTimeout","searchQuery","selectedArtist","isAdding","selectArtist","clearTimeout","tagArray","split","src","id","t9","t9_value","li","t4","t4_value","isEditing","editTags","editNote","isUpdating","isRemoving","confirm","selectedCount","bulkactions_changes","ul","current","dnpentry_changes","t8_value","t8","if_block3","selectedTag","showAddForm","selectedEntries","toggleSelectEntry","clearSelection","filteredEntries","$dnpStore","matchesSearch","some","tag","matchesTag","promises","all","defaultOptions","aggressiveness","blockCollabs","blockFeaturing","blockSongwriterOnly","enforcementStore","currentPlan","isPlanning","isExecuting","currentBatch","actionHistory","hasActivePlan","$enforcement","executionProgress","totalItems","completedItems","failedItems","skippedItems","summary","processedItems","total","processed","completed","failed","skipped","percentage","round","canRollback","batch","items","item","enforcementActions","updateOptions","createPlan","providers","dryRun","currentOptions","executePlan","planId","pollProgress","batchId","pollInterval","setInterval","clearInterval","rollbackBatch","fetchActionHistory","clearPlan","clearError","if_block","input3_checked_value","input4","input4_checked_value","input5","input5_checked_value","div19","h40","fieldset","legend","div18","h41","div17","div16","div15","updateAggressiveness","level","toggleOption","$enforcementStore","formatDuration","estimatedDuration","resumable","impact","likedSongs","toRemove","collabsFound","br","playlists","toScrub","tracksToRemove","featuringFound","t5","t5_value","following","toUnfollow","radioSeeds","toFilter","capabilities","h5","replace","getCapabilityColor","path_d_value","getProviderIcon","duration","seconds","floor","capability","plan","button_disabled_value","t6_value","t6","t13","t13_value","t17","t17_value","t21","t21_value","t10_value","t16_value","t10","t16","button_title_value","errorMessage","action","entityType","entityId","getActionIcon","progress","$executionProgress","completedAt","createdAt","t11_value","t14_value","getSuccessRate","div24","div23","div22","div20","div25","t7","t7_value","t11","t14","t19","t19_value","t23","t23_value","t27","t27_value","t31","t31_value","t35","t35_value","t41","t41_value","toLocaleString","alert","button0_class_value","button1_class_value","nav","activeTab","setActiveTab","tab","$hasActiveSpotifyConnection","communityStore","lists","currentList","subscriptions","subscriptionImpact","isLoadingList","isLoadingImpact","sortBy","sortOrder","filteredLists","$community","description","criteria","aValue","bValue","getTime","comparison","subscribedListIds","sub","list_id","$subscribedIds","listId","communityActions","fetchLists","fetchListDetails","fetchSubscriptions","getSubscriptionImpact","versionPinned","autoUpdate","version_pinned","auto_update","updateSubscription","createList","listData","updateSearch","updateSort","clearCurrentList","a_href_value","governance_url","update_cadence","artist_count","subscriber_count","t20_value","version","updated_at","getUpdateCadenceColor","t12","t12_value","t20","cadence","isSubscribed","$subscribedListIds","artists_to_add","artists","t18_value","t28_value","t32_value","t40_value","h1","h30","p2","h42","p3","h31","t18","t28","t32","t36","t36_value","t40","input1_value_value","rationale_link","added_at","showSubscriptionOptions","$communityStore","textarea0","textarea1","label4","option0","option1","option2","option3","label5","label6","governanceUrl","updateCadence","visibility","isCreating","input0_id_value","input0_checked_value","label0_for_value","input1_id_value","input1_checked_value","label1_for_value","input2_id_value","input2_checked_value","label2_for_value","h50","h51","t24","t24_value","listName","viewListDetails","handleAutoUpdateChange","subscription","input_value_value","option4","option5","showCreateForm","create_if_block_12","last_login","create_if_block_11","totp_enabled","email_notifications","privacy_mode","input_placeholder_value","create_if_block_14","create_if_block_13","year","month","day","hour","minute","editingProfile","editEmail","editSettings","two_factor_enabled","show2FASetup","show2FADisable","exportLoading","showDeleteConfirm","deleteConfirmEmail","deleteReason","deleteLoading","loadProfile","settings","blob","Blob","URL","createObjectURL","download","toISOString","click","revokeObjectURL","confirmation_email","reason","handle2FADisable","dl0","dt0","dd0","dl1","dt1","dd1","dl2","dt2","dd2","main","isInitialized","log","$isAuthenticated"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}