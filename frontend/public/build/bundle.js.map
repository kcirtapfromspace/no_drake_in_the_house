{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/store/index.js","../../src/lib/stores/auth.ts","../../src/lib/components/Login.svelte","../../src/lib/stores/connections.ts","../../src/lib/stores/dnp.ts","../../src/lib/components/ServiceConnections.svelte","../../src/lib/components/ArtistSearch.svelte","../../src/lib/components/DnpEntry.svelte","../../src/lib/components/BulkActions.svelte","../../src/lib/components/DnpManager.svelte","../../src/lib/stores/enforcement.ts","../../src/lib/components/EnforcementOptions.svelte","../../src/lib/components/EnforcementPreview.svelte","../../src/lib/components/EnforcementExecution.svelte","../../src/lib/components/ActionHistory.svelte","../../src/lib/components/EnforcementPlanning.svelte","../../src/lib/stores/community.ts","../../src/lib/components/CommunityListCard.svelte","../../src/lib/components/CommunityListDetail.svelte","../../src/lib/components/CreateCommunityList.svelte","../../src/lib/components/MySubscriptions.svelte","../../src/lib/components/CommunityLists.svelte","../../src/lib/components/Dashboard.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.$$l[type]) {\n\t\t\t\tconst idx = this.$$l[type].indexOf(listener);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tthis.$$l[type].splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.20';\nexport const PUBLIC_VERSION = '4';\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    user: null,\n    token: localStorage.getItem('auth_token'),\n    refreshToken: localStorage.getItem('refresh_token'),\n    isAuthenticated: false,\n    isLoading: false,\n};\nexport const authStore = writable(initialState);\nexport const isAuthenticated = derived(authStore, ($auth) => $auth.isAuthenticated && $auth.token !== null);\nexport const currentUser = derived(authStore, ($auth) => $auth.user);\n// Auth actions\nexport const authActions = {\n    login: async (email, password, totpCode) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const response = await fetch('http://localhost:3000/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password, totp_code: totpCode }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                const { access_token, refresh_token } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', refresh_token);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: refresh_token,\n                    isAuthenticated: true,\n                    isLoading: false,\n                }));\n                // Fetch user profile\n                await authActions.fetchProfile();\n                return { success: true };\n            }\n            else {\n                authStore.update(state => ({ ...state, isLoading: false }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            return { success: false, message: 'Network error occurred' };\n        }\n    },\n    register: async (email, password) => {\n        authStore.update(state => ({ ...state, isLoading: true }));\n        try {\n            const response = await fetch('http://localhost:3000/auth/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, password }),\n            });\n            const result = await response.json();\n            authStore.update(state => ({ ...state, isLoading: false }));\n            return { success: result.success, message: result.message };\n        }\n        catch (error) {\n            authStore.update(state => ({ ...state, isLoading: false }));\n            return { success: false, message: 'Network error occurred' };\n        }\n    },\n    fetchProfile: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (!token)\n            return;\n        try {\n            const response = await fetch('http://localhost:3000/auth/profile', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                authStore.update(state => ({\n                    ...state,\n                    user: result.data,\n                    isAuthenticated: true,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch profile:', error);\n        }\n    },\n    logout: async () => {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            try {\n                await fetch('http://localhost:3000/auth/logout', {\n                    method: 'POST',\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n            }\n            catch (error) {\n                console.error('Logout request failed:', error);\n            }\n        }\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('refresh_token');\n        authStore.set({\n            user: null,\n            token: null,\n            refreshToken: null,\n            isAuthenticated: false,\n            isLoading: false,\n        });\n    },\n    refreshToken: async () => {\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (!refreshToken)\n            return false;\n        try {\n            const response = await fetch('http://localhost:3000/auth/refresh', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ refresh_token: refreshToken }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                const { access_token, refresh_token: newRefreshToken } = result.data;\n                localStorage.setItem('auth_token', access_token);\n                localStorage.setItem('refresh_token', newRefreshToken);\n                authStore.update(state => ({\n                    ...state,\n                    token: access_token,\n                    refreshToken: newRefreshToken,\n                    isAuthenticated: true,\n                }));\n                return true;\n            }\n        }\n        catch (error) {\n            console.error('Token refresh failed:', error);\n        }\n        return false;\n    },\n};\n// Initialize auth state on app load\nif (typeof window !== 'undefined') {\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n        authStore.update(state => ({\n            ...state,\n            token,\n            isAuthenticated: true,\n        }));\n        authActions.fetchProfile();\n    }\n}\n","<script lang=\"ts\">\n  import { authActions } from '../stores/auth';\n  \n  let email = '';\n  let password = '';\n  let totpCode = '';\n  let isLogin = true;\n  let isLoading = false;\n  let error = '';\n  let requiresTotp = false;\n\n  async function handleSubmit() {\n    if (!email || !password) {\n      error = 'Please fill in all required fields';\n      return;\n    }\n\n    isLoading = true;\n    error = '';\n\n    try {\n      if (isLogin) {\n        const result = await authActions.login(email, password, totpCode || undefined);\n        if (!result.success) {\n          if (result.message?.includes('TOTP')) {\n            requiresTotp = true;\n            error = 'Please enter your 2FA code';\n          } else {\n            error = result.message || 'Login failed';\n          }\n        }\n      } else {\n        const result = await authActions.register(email, password);\n        if (result.success) {\n          isLogin = true;\n          error = '';\n          email = '';\n          password = '';\n        } else {\n          error = result.message || 'Registration failed';\n        }\n      }\n    } catch (err) {\n      error = 'An unexpected error occurred';\n    } finally {\n      isLoading = false;\n    }\n  }\n\n  function toggleMode() {\n    isLogin = !isLogin;\n    error = '';\n    requiresTotp = false;\n    totpCode = '';\n  }\n</script>\n\n<div class=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n  <div class=\"max-w-md w-full space-y-8\">\n    <div>\n      <h2 class=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n        {isLogin ? 'Sign in to your account' : 'Create your account'}\n      </h2>\n      <p class=\"mt-2 text-center text-sm text-gray-600\">\n        Music Streaming Blocklist Manager\n      </p>\n    </div>\n    \n    <form class=\"mt-8 space-y-6\" on:submit|preventDefault={handleSubmit}>\n      <div class=\"rounded-md shadow-sm -space-y-px\">\n        <div>\n          <label for=\"email\" class=\"sr-only\">Email address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            autocomplete=\"email\"\n            required\n            bind:value={email}\n            class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            placeholder=\"Email address\"\n          />\n        </div>\n        <div>\n          <label for=\"password\" class=\"sr-only\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            autocomplete={isLogin ? 'current-password' : 'new-password'}\n            required\n            bind:value={password}\n            class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 {requiresTotp ? '' : 'rounded-b-md'} focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            placeholder=\"Password\"\n          />\n        </div>\n        {#if requiresTotp}\n          <div>\n            <label for=\"totp\" class=\"sr-only\">2FA Code</label>\n            <input\n              id=\"totp\"\n              name=\"totp\"\n              type=\"text\"\n              autocomplete=\"one-time-code\"\n              bind:value={totpCode}\n              class=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n              placeholder=\"2FA Code\"\n            />\n          </div>\n        {/if}\n      </div>\n\n      {#if error}\n        <div class=\"text-red-600 text-sm text-center\">\n          {error}\n        </div>\n      {/if}\n\n      <div>\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          class=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {#if isLoading}\n            <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            {isLogin ? 'Signing in...' : 'Creating account...'}\n          {:else}\n            {isLogin ? 'Sign in' : 'Create account'}\n          {/if}\n        </button>\n      </div>\n\n      <div class=\"text-center\">\n        <button\n          type=\"button\"\n          on:click={toggleMode}\n          class=\"text-indigo-600 hover:text-indigo-500 text-sm\"\n        >\n          {isLogin ? \"Don't have an account? Sign up\" : 'Already have an account? Sign in'}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    connections: [],\n    isLoading: false,\n    error: null,\n};\nexport const connectionsStore = writable(initialState);\nexport const connectedServices = derived(connectionsStore, ($connections) => $connections.connections.filter(conn => conn.status === 'active'));\nexport const spotifyConnection = derived(connectionsStore, ($connections) => $connections.connections.find(conn => conn.provider === 'spotify'));\nexport const hasActiveSpotifyConnection = derived(spotifyConnection, ($spotify) => $spotify?.status === 'active');\n// Connection actions\nexport const connectionActions = {\n    fetchConnections: async () => {\n        connectionsStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/connections', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                connectionsStore.update(state => ({\n                    ...state,\n                    connections: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                connectionsStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch connections',\n                isLoading: false,\n            }));\n        }\n    },\n    initiateSpotifyAuth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/auth', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Redirect to Spotify authorization\n                window.location.href = result.data.auth_url;\n            }\n            else {\n                throw new Error(result.message);\n            }\n        }\n        catch (error) {\n            connectionsStore.update(state => ({\n                ...state,\n                error: `Failed to initiate Spotify auth: ${error instanceof Error ? error.message : 'Unknown error'}`,\n            }));\n        }\n    },\n    handleSpotifyCallback: async (code, state) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/callback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ code, state }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to complete Spotify connection' };\n        }\n    },\n    disconnectSpotify: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/connection', {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh connections\n                await connectionActions.fetchConnections();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to disconnect Spotify' };\n        }\n    },\n    checkSpotifyHealth: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/health', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Update connection status if needed\n                await connectionActions.fetchConnections();\n                return result.data;\n            }\n        }\n        catch (error) {\n            console.error('Spotify health check failed:', error);\n        }\n    },\n};\n","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    entries: [],\n    isLoading: false,\n    error: null,\n    searchResults: [],\n    isSearching: false,\n};\nexport const dnpStore = writable(initialState);\nexport const dnpArtists = derived(dnpStore, ($dnp) => $dnp.entries.map(entry => entry.artist));\nexport const dnpCount = derived(dnpStore, ($dnp) => $dnp.entries.length);\nexport const dnpTags = derived(dnpStore, ($dnp) => {\n    const allTags = $dnp.entries.flatMap(entry => entry.tags);\n    return [...new Set(allTags)].sort();\n});\n// DNP actions\nexport const dnpActions = {\n    fetchDnpList: async () => {\n        dnpStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/list', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    entries: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch DNP list',\n                isLoading: false,\n            }));\n        }\n    },\n    searchArtists: async (query, limit = 10) => {\n        if (!query.trim()) {\n            dnpStore.update(state => ({ ...state, searchResults: [] }));\n            return;\n        }\n        dnpStore.update(state => ({ ...state, isSearching: true }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/search?q=${encodeURIComponent(query)}&limit=${limit}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                dnpStore.update(state => ({\n                    ...state,\n                    searchResults: result.data,\n                    isSearching: false,\n                }));\n            }\n            else {\n                dnpStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isSearching: false,\n                }));\n            }\n        }\n        catch (error) {\n            dnpStore.update(state => ({\n                ...state,\n                error: 'Artist search failed',\n                isSearching: false,\n            }));\n        }\n    },\n    addArtist: async (artistQuery, tags = [], note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/artists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    query: artistQuery,\n                    tags,\n                    note,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to add artist to DNP list' };\n        }\n    },\n    removeArtist: async (artistId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to remove artist from DNP list' };\n        }\n    },\n    updateEntry: async (artistId, tags, note) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/artists/${artistId}`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ tags, note }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update DNP entry' };\n        }\n    },\n    bulkImport: async (data, format) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/dnp/import', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ data, format }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh the DNP list\n                await dnpActions.fetchDnpList();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Bulk import failed' };\n        }\n    },\n    exportList: async (format = 'json') => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/dnp/export?format=${format}`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Export failed' };\n        }\n    },\n    clearSearch: () => {\n        dnpStore.update(state => ({ ...state, searchResults: [] }));\n    },\n};\n","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { connectionActions, connectionsStore, spotifyConnection } from '../stores/connections';\n  \n  let isConnecting = false;\n  let error = '';\n\n  onMount(() => {\n    // Handle OAuth callback if present\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n    \n    if (code && state) {\n      handleSpotifyCallback(code, state);\n      // Clean up URL\n      window.history.replaceState({}, document.title, window.location.pathname);\n    }\n  });\n\n  async function handleSpotifyCallback(code: string, state: string) {\n    isConnecting = true;\n    error = '';\n    \n    const result = await connectionActions.handleSpotifyCallback(code, state);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to connect Spotify';\n    }\n    \n    isConnecting = false;\n  }\n\n  async function connectSpotify() {\n    isConnecting = true;\n    error = '';\n    \n    try {\n      await connectionActions.initiateSpotifyAuth();\n    } catch (err) {\n      error = 'Failed to initiate Spotify connection';\n      isConnecting = false;\n    }\n  }\n\n  async function disconnectSpotify() {\n    const result = await connectionActions.disconnectSpotify();\n    \n    if (!result.success) {\n      error = result.message || 'Failed to disconnect Spotify';\n    }\n  }\n\n  async function checkHealth() {\n    await connectionActions.checkSpotifyHealth();\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'active': return 'text-green-600 bg-green-100';\n      case 'expired': return 'text-yellow-600 bg-yellow-100';\n      case 'error': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">Service Connections</h2>\n    <p class=\"mt-1 text-sm text-gray-600\">\n      Connect your streaming service accounts to manage your blocklist across platforms.\n    </p>\n  </div>\n\n  {#if error}\n    <div class=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{error}</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    <ul class=\"divide-y divide-gray-200\">\n      <!-- Spotify Connection -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-green-500 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">Spotify</p>\n                {#if $spotifyConnection}\n                  <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor($spotifyConnection.status)}\">\n                    {$spotifyConnection.status}\n                  </span>\n                {/if}\n              </div>\n              <div class=\"mt-1\">\n                {#if $spotifyConnection}\n                  <p class=\"text-sm text-gray-500\">\n                    Connected {formatDate($spotifyConnection.created_at)}\n                    {#if $spotifyConnection.provider_user_id}\n                      • User ID: {$spotifyConnection.provider_user_id}\n                    {/if}\n                  </p>\n                  {#if $spotifyConnection.scopes.length > 0}\n                    <p class=\"text-xs text-gray-400 mt-1\">\n                      Permissions: {$spotifyConnection.scopes.join(', ')}\n                    </p>\n                  {/if}\n                {:else}\n                  <p class=\"text-sm text-gray-500\">\n                    Connect your Spotify account to manage your music library\n                  </p>\n                {/if}\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-2\">\n            {#if $spotifyConnection}\n              <button\n                on:click={checkHealth}\n                class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Check Health\n              </button>\n              <button\n                on:click={disconnectSpotify}\n                class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n              >\n                Disconnect\n              </button>\n            {:else}\n              <button\n                on:click={connectSpotify}\n                disabled={isConnecting}\n                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {#if isConnecting}\n                  <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                    <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Connecting...\n                {:else}\n                  Connect\n                {/if}\n              </button>\n            {/if}\n          </div>\n        </div>\n      </li>\n\n      <!-- Apple Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-gray-400 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.997 6.124c0-.738-.065-1.47-.24-2.19-.317-1.31-1.062-2.31-2.18-3.043C21.003.517 20.373.285 19.7.164c-.517-.093-1.038-.135-1.564-.15-.04-.001-.08-.004-.12-.004H5.986c-.04 0-.08.003-.12.004-.526.015-1.047.057-1.564.15-.673.121-1.303.353-1.877.727C1.307 1.624.562 2.624.245 3.934.07 4.654.005 5.386.005 6.124v11.748c0 .738.065 1.47.24 2.19.317 1.31 1.062 2.31 2.18 3.043.574.374 1.204.606 1.877.727.517.093 1.038.135 1.564.15.04.001.08.004.12.004h12.014c.04 0 .08-.003.12-.004.526-.015 1.047-.057 1.564-.15.673-.121 1.303-.353 1.877-.727 1.118-.733 1.863-1.733 2.18-3.043.175-.72.24-1.452.24-2.19V6.124zM12.001 4.009c2.47 0 4.471 2.001 4.471 4.471s-2.001 4.471-4.471 4.471-4.471-2.001-4.471-4.471 2.001-4.471 4.471-4.471zm0 7.542c1.693 0 3.071-1.378 3.071-3.071s-1.378-3.071-3.071-3.071-3.071 1.378-3.071 3.071 1.378 3.071 3.071 3.071z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">Apple Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-gray-600 bg-gray-100\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-sm text-gray-500 mt-1\">\n                Apple Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n\n      <!-- YouTube Music (Coming Soon) -->\n      <li>\n        <div class=\"px-4 py-4 flex items-center justify-between opacity-50\">\n          <div class=\"flex items-center\">\n            <div class=\"flex-shrink-0 h-10 w-10\">\n              <div class=\"h-10 w-10 rounded-full bg-red-500 flex items-center justify-center\">\n                <svg class=\"h-6 w-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"ml-4\">\n              <div class=\"flex items-center\">\n                <p class=\"text-sm font-medium text-gray-900\">YouTube Music</p>\n                <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-gray-600 bg-gray-100\">\n                  Coming Soon\n                </span>\n              </div>\n              <p class=\"text-sm text-gray-500 mt-1\">\n                YouTube Music integration will be available in a future update\n              </p>\n            </div>\n          </div>\n          \n          <button\n            disabled\n            class=\"inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed\"\n          >\n            Coming Soon\n          </button>\n        </div>\n      </li>\n    </ul>\n  </div>\n\n  <!-- Connection Info -->\n  <div class=\"mt-6 bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Service Connections\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Service connections allow you to apply your Do-Not-Play list across different streaming platforms. \n            Each connection is secured with OAuth 2.0 and only requests the minimum permissions needed to manage your blocklist.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Spotify: Full library management and playlist modification</li>\n            <li>Apple Music: Limited library access (coming soon)</li>\n            <li>YouTube Music: Browser extension support only (coming soon)</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions, dnpStore } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  let searchQuery = '';\n  let selectedArtist = null;\n  let tags = '';\n  let note = '';\n  let isAdding = false;\n  let error = '';\n  \n  let searchTimeout;\n  \n  $: {\n    if (searchTimeout) clearTimeout(searchTimeout);\n    searchTimeout = setTimeout(() => {\n      if (searchQuery.trim()) {\n        dnpActions.searchArtists(searchQuery);\n      } else {\n        dnpActions.clearSearch();\n      }\n    }, 300);\n  }\n\n  function selectArtist(artist) {\n    selectedArtist = artist;\n    searchQuery = artist.canonical_name;\n    dnpActions.clearSearch();\n  }\n\n  function clearSelection() {\n    selectedArtist = null;\n    searchQuery = '';\n    dnpActions.clearSearch();\n  }\n\n  async function handleSubmit() {\n    if (!searchQuery.trim()) {\n      error = 'Please enter an artist name';\n      return;\n    }\n\n    isAdding = true;\n    error = '';\n\n    const tagArray = tags.split(',').map(t => t.trim()).filter(t => t);\n    \n    const result = await dnpActions.addArtist(\n      searchQuery,\n      tagArray,\n      note.trim() || undefined\n    );\n\n    if (result.success) {\n      // Reset form\n      searchQuery = '';\n      selectedArtist = null;\n      tags = '';\n      note = '';\n      dispatch('artistAdded');\n    } else {\n      error = result.message || 'Failed to add artist';\n    }\n\n    isAdding = false;\n  }\n\n  function getProviderBadges(artist) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-4\">\n  <!-- Artist Search -->\n  <div class=\"relative\">\n    <label for=\"artist-search\" class=\"block text-sm font-medium text-gray-700\">\n      Artist Name\n    </label>\n    <div class=\"mt-1 relative\">\n      <input\n        id=\"artist-search\"\n        type=\"text\"\n        bind:value={searchQuery}\n        placeholder=\"Search for an artist...\"\n        class=\"block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      />\n      \n      {#if selectedArtist}\n        <button\n          type=\"button\"\n          on:click={clearSelection}\n          class=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n        >\n          <svg class=\"h-5 w-5 text-gray-400 hover:text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      {/if}\n    </div>\n\n    <!-- Search Results -->\n    {#if $dnpStore.searchResults.length > 0 && !selectedArtist}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n        {#each $dnpStore.searchResults as artist}\n          <button\n            type=\"button\"\n            on:click={() => selectArtist(artist)}\n            class=\"w-full text-left px-4 py-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"\n          >\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-3\">\n                {#if artist.metadata.image}\n                  <img\n                    src={artist.metadata.image}\n                    alt={artist.canonical_name}\n                    class=\"h-8 w-8 rounded-full object-cover\"\n                  />\n                {:else}\n                  <div class=\"h-8 w-8 rounded-full bg-gray-300 flex items-center justify-center\">\n                    <svg class=\"h-4 w-4 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                <div>\n                  <div class=\"text-sm font-medium text-gray-900\">\n                    {artist.canonical_name}\n                  </div>\n                  {#if artist.metadata.genres && artist.metadata.genres.length > 0}\n                    <div class=\"text-xs text-gray-500\">\n                      {artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                </div>\n              </div>\n              \n              <div class=\"flex space-x-1\">\n                {#each getProviderBadges(artist) as badge}\n                  <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                    {badge.name}\n                  </span>\n                {/each}\n              </div>\n            </div>\n          </button>\n        {/each}\n      </div>\n    {/if}\n\n    {#if $dnpStore.isSearching}\n      <div class=\"absolute z-10 mt-1 w-full bg-white shadow-lg rounded-md py-2 text-center\">\n        <svg class=\"animate-spin mx-auto h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"text-sm text-gray-500 mt-1\">Searching...</p>\n      </div>\n    {/if}\n  </div>\n\n  <!-- Selected Artist Preview -->\n  {#if selectedArtist}\n    <div class=\"bg-gray-50 rounded-lg p-4\">\n      <h4 class=\"text-sm font-medium text-gray-900 mb-2\">Selected Artist</h4>\n      <div class=\"flex items-center space-x-3\">\n        {#if selectedArtist.metadata.image}\n          <img\n            src={selectedArtist.metadata.image}\n            alt={selectedArtist.canonical_name}\n            class=\"h-12 w-12 rounded-full object-cover\"\n          />\n        {:else}\n          <div class=\"h-12 w-12 rounded-full bg-gray-300 flex items-center justify-center\">\n            <svg class=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n            </svg>\n          </div>\n        {/if}\n        <div class=\"flex-1\">\n          <div class=\"text-sm font-medium text-gray-900\">\n            {selectedArtist.canonical_name}\n          </div>\n          {#if selectedArtist.metadata.genres && selectedArtist.metadata.genres.length > 0}\n            <div class=\"text-xs text-gray-500\">\n              {selectedArtist.metadata.genres.join(', ')}\n            </div>\n          {/if}\n          <div class=\"flex space-x-1 mt-1\">\n            {#each getProviderBadges(selectedArtist) as badge}\n              <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                {badge.name}\n              </span>\n            {/each}\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tags -->\n  <div>\n    <label for=\"tags\" class=\"block text-sm font-medium text-gray-700\">\n      Tags (optional)\n    </label>\n    <input\n      id=\"tags\"\n      type=\"text\"\n      bind:value={tags}\n      placeholder=\"e.g., controversial, personal, explicit (comma-separated)\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    />\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Use tags to organize your DNP list. Separate multiple tags with commas.\n    </p>\n  </div>\n\n  <!-- Note -->\n  <div>\n    <label for=\"note\" class=\"block text-sm font-medium text-gray-700\">\n      Note (optional)\n    </label>\n    <textarea\n      id=\"note\"\n      bind:value={note}\n      rows=\"2\"\n      placeholder=\"Add a personal note about why you're blocking this artist...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    ></textarea>\n  </div>\n\n  {#if error}\n    <div class=\"text-red-600 text-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('artistAdded')}\n      class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isAdding || !searchQuery.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isAdding}\n        <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Adding...\n      {:else}\n        Add to DNP List\n      {/if}\n    </button>\n  </div>\n</form>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { dnpActions } from '../stores/dnp';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let entry;\n  export let selected = false;\n  \n  let isEditing = false;\n  let editTags = entry.tags.join(', ');\n  let editNote = entry.note || '';\n  let isUpdating = false;\n  let isRemoving = false;\n  let error = '';\n\n  function toggleSelect() {\n    dispatch('toggleSelect');\n  }\n\n  function startEdit() {\n    isEditing = true;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  function cancelEdit() {\n    isEditing = false;\n    editTags = entry.tags.join(', ');\n    editNote = entry.note || '';\n    error = '';\n  }\n\n  async function saveEdit() {\n    isUpdating = true;\n    error = '';\n\n    const tagArray = editTags.split(',').map(t => t.trim()).filter(t => t);\n    \n    const result = await dnpActions.updateEntry(\n      entry.artist.id,\n      tagArray,\n      editNote.trim() || undefined\n    );\n\n    if (result.success) {\n      isEditing = false;\n    } else {\n      error = result.message || 'Failed to update entry';\n    }\n\n    isUpdating = false;\n  }\n\n  async function removeArtist() {\n    if (!confirm(`Are you sure you want to remove \"${entry.artist.canonical_name}\" from your DNP list?`)) {\n      return;\n    }\n\n    isRemoving = true;\n    \n    const result = await dnpActions.removeArtist(entry.artist.id);\n    \n    if (!result.success) {\n      error = result.message || 'Failed to remove artist';\n    }\n    \n    isRemoving = false;\n  }\n\n  function getProviderBadges(artist) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n\n  function formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString();\n  }\n</script>\n\n<li class=\"px-4 py-4 {selected ? 'bg-indigo-50' : 'hover:bg-gray-50'}\">\n  <div class=\"flex items-center space-x-4\">\n    <!-- Checkbox -->\n    <input\n      type=\"checkbox\"\n      checked={selected}\n      on:change={toggleSelect}\n      class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n    />\n\n    <!-- Artist Image -->\n    <div class=\"flex-shrink-0\">\n      {#if entry.artist.metadata.image}\n        <img\n          src={entry.artist.metadata.image}\n          alt={entry.artist.canonical_name}\n          class=\"h-12 w-12 rounded-full object-cover\"\n        />\n      {:else}\n        <div class=\"h-12 w-12 rounded-full bg-gray-300 flex items-center justify-center\">\n          <svg class=\"h-6 w-6 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n        </div>\n      {/if}\n    </div>\n\n    <!-- Artist Info -->\n    <div class=\"flex-1 min-w-0\">\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex-1\">\n          <p class=\"text-sm font-medium text-gray-900 truncate\">\n            {entry.artist.canonical_name}\n          </p>\n          \n          {#if entry.artist.metadata.genres && entry.artist.metadata.genres.length > 0}\n            <p class=\"text-xs text-gray-500 truncate\">\n              {entry.artist.metadata.genres.slice(0, 2).join(', ')}\n            </p>\n          {/if}\n          \n          <div class=\"flex items-center space-x-2 mt-1\">\n            <!-- Provider Badges -->\n            <div class=\"flex space-x-1\">\n              {#each getProviderBadges(entry.artist) as badge}\n                <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {badge.color}\">\n                  {badge.name}\n                </span>\n              {/each}\n            </div>\n            \n            <!-- Added Date -->\n            <span class=\"text-xs text-gray-400\">\n              Added {formatDate(entry.created_at)}\n            </span>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex items-center space-x-2\">\n          {#if !isEditing}\n            <button\n              on:click={startEdit}\n              class=\"text-indigo-600 hover:text-indigo-900 text-sm\"\n            >\n              Edit\n            </button>\n            <button\n              on:click={removeArtist}\n              disabled={isRemoving}\n              class=\"text-red-600 hover:text-red-900 text-sm disabled:opacity-50\"\n            >\n              {isRemoving ? 'Removing...' : 'Remove'}\n            </button>\n          {/if}\n        </div>\n      </div>\n\n      <!-- Tags and Note Display -->\n      {#if !isEditing}\n        <div class=\"mt-2\">\n          {#if entry.tags.length > 0}\n            <div class=\"flex flex-wrap gap-1 mb-2\">\n              {#each entry.tags as tag}\n                <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n                  {tag}\n                </span>\n              {/each}\n            </div>\n          {/if}\n          \n          {#if entry.note}\n            <p class=\"text-sm text-gray-600 italic\">\n              \"{entry.note}\"\n            </p>\n          {/if}\n        </div>\n      {/if}\n\n      <!-- Edit Form -->\n      {#if isEditing}\n        <div class=\"mt-3 space-y-3\">\n          <div>\n            <label for=\"edit-tags-{entry.artist.id}\" class=\"block text-xs font-medium text-gray-700\">Tags</label>\n            <input\n              id=\"edit-tags-{entry.artist.id}\"\n              type=\"text\"\n              bind:value={editTags}\n              placeholder=\"comma-separated tags\"\n              class=\"mt-1 block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            />\n          </div>\n          \n          <div>\n            <label for=\"edit-note-{entry.artist.id}\" class=\"block text-xs font-medium text-gray-700\">Note</label>\n            <textarea\n              id=\"edit-note-{entry.artist.id}\"\n              bind:value={editNote}\n              rows=\"2\"\n              placeholder=\"Personal note...\"\n              class=\"mt-1 block w-full border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n            ></textarea>\n          </div>\n\n          {#if error}\n            <p class=\"text-xs text-red-600\">{error}</p>\n          {/if}\n\n          <div class=\"flex justify-end space-x-2\">\n            <button\n              type=\"button\"\n              on:click={cancelEdit}\n              class=\"px-3 py-1 border border-gray-300 rounded-md text-xs font-medium text-gray-700 bg-white hover:bg-gray-50\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              on:click={saveEdit}\n              disabled={isUpdating}\n              class=\"px-3 py-1 border border-transparent rounded-md text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50\"\n            >\n              {isUpdating ? 'Saving...' : 'Save'}\n            </button>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </div>\n</li>","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  \n  const dispatch = createEventDispatcher();\n  \n  export let selectedCount = 0;\n  \n  function handleBulkDelete() {\n    dispatch('bulkDelete');\n  }\n  \n  function handleClearSelection() {\n    dispatch('clearSelection');\n  }\n</script>\n\n<div class=\"bg-indigo-50 border border-indigo-200 rounded-md p-4\">\n  <div class=\"flex items-center justify-between\">\n    <div class=\"flex items-center\">\n      <svg class=\"h-5 w-5 text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <p class=\"ml-3 text-sm text-indigo-800\">\n        <span class=\"font-medium\">{selectedCount}</span>\n        {selectedCount === 1 ? 'artist' : 'artists'} selected\n      </p>\n    </div>\n    \n    <div class=\"flex items-center space-x-3\">\n      <button\n        on:click={handleClearSelection}\n        class=\"text-sm text-indigo-600 hover:text-indigo-500\"\n      >\n        Clear selection\n      </button>\n      \n      <button\n        on:click={handleBulkDelete}\n        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-red-700 bg-red-100 hover:bg-red-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n      >\n        <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n        </svg>\n        Remove selected\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { dnpActions, dnpStore, dnpTags } from '../stores/dnp';\n  import ArtistSearch from './ArtistSearch.svelte';\n  import DnpEntry from './DnpEntry.svelte';\n  import BulkActions from './BulkActions.svelte';\n  \n  let searchQuery = '';\n  let selectedTag = '';\n  let showAddForm = false;\n  let selectedEntries = new Set();\n\n  $: filteredEntries = $dnpStore.entries.filter(entry => {\n    const matchesSearch = !searchQuery || \n      entry.artist.canonical_name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      entry.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase())) ||\n      (entry.note && entry.note.toLowerCase().includes(searchQuery.toLowerCase()));\n    \n    const matchesTag = !selectedTag || entry.tags.includes(selectedTag);\n    \n    return matchesSearch && matchesTag;\n  });\n\n  function toggleSelectAll() {\n    if (selectedEntries.size === filteredEntries.length) {\n      selectedEntries.clear();\n    } else {\n      selectedEntries = new Set(filteredEntries.map(entry => entry.artist.id));\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function toggleSelectEntry(artistId: string) {\n    if (selectedEntries.has(artistId)) {\n      selectedEntries.delete(artistId);\n    } else {\n      selectedEntries.add(artistId);\n    }\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  function clearSelection() {\n    selectedEntries.clear();\n    selectedEntries = selectedEntries; // Trigger reactivity\n  }\n\n  async function handleBulkDelete() {\n    if (selectedEntries.size === 0) return;\n    \n    if (confirm(`Are you sure you want to remove ${selectedEntries.size} artist(s) from your DNP list?`)) {\n      const promises = Array.from(selectedEntries).map(artistId => \n        dnpActions.removeArtist(artistId)\n      );\n      \n      await Promise.all(promises);\n      clearSelection();\n    }\n  }\n\n  function handleArtistAdded() {\n    showAddForm = false;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-2xl font-bold text-gray-900\">Do-Not-Play List</h2>\n        <p class=\"mt-1 text-sm text-gray-600\">\n          Manage artists you want to avoid across your streaming services.\n        </p>\n      </div>\n      <button\n        on:click={() => showAddForm = !showAddForm}\n        class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Add Artist\n      </button>\n    </div>\n  </div>\n\n  <!-- Add Artist Form -->\n  {#if showAddForm}\n    <div class=\"mb-6 bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Add Artist to DNP List</h3>\n      <ArtistSearch on:artistAdded={handleArtistAdded} />\n    </div>\n  {/if}\n\n  <!-- Filters and Search -->\n  <div class=\"mb-6 bg-white shadow rounded-lg p-4\">\n    <div class=\"flex flex-col sm:flex-row gap-4\">\n      <div class=\"flex-1\">\n        <label for=\"search\" class=\"sr-only\">Search artists</label>\n        <div class=\"relative\">\n          <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <input\n            id=\"search\"\n            bind:value={searchQuery}\n            type=\"text\"\n            placeholder=\"Search artists, tags, or notes...\"\n            class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n          />\n        </div>\n      </div>\n      \n      <div class=\"sm:w-48\">\n        <label for=\"tag-filter\" class=\"sr-only\">Filter by tag</label>\n        <select\n          id=\"tag-filter\"\n          bind:value={selectedTag}\n          class=\"block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n        >\n          <option value=\"\">All tags</option>\n          {#each $dnpTags as tag}\n            <option value={tag}>{tag}</option>\n          {/each}\n        </select>\n      </div>\n    </div>\n  </div>\n\n  <!-- Bulk Actions -->\n  {#if selectedEntries.size > 0}\n    <div class=\"mb-4\">\n      <BulkActions \n        selectedCount={selectedEntries.size}\n        on:bulkDelete={handleBulkDelete}\n        on:clearSelection={clearSelection}\n      />\n    </div>\n  {/if}\n\n  <!-- DNP List -->\n  <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    {#if $dnpStore.isLoading}\n      <div class=\"p-6 text-center\">\n        <svg class=\"animate-spin mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <p class=\"mt-2 text-sm text-gray-500\">Loading DNP list...</p>\n      </div>\n    {:else if $dnpStore.error}\n      <div class=\"p-6 text-center\">\n        <svg class=\"mx-auto h-8 w-8 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <p class=\"mt-2 text-sm text-red-600\">{$dnpStore.error}</p>\n        <button\n          on:click={() => dnpActions.fetchDnpList()}\n          class=\"mt-2 text-sm text-indigo-600 hover:text-indigo-500\"\n        >\n          Try again\n        </button>\n      </div>\n    {:else if filteredEntries.length === 0}\n      <div class=\"p-6 text-center\">\n        {#if $dnpStore.entries.length === 0}\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No artists in your DNP list</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Get started by adding artists you want to avoid.</p>\n          <div class=\"mt-6\">\n            <button\n              on:click={() => showAddForm = true}\n              class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Add your first artist\n            </button>\n          </div>\n        {:else}\n          <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n          <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No artists match your search</h3>\n          <p class=\"mt-1 text-sm text-gray-500\">Try adjusting your search terms or filters.</p>\n        {/if}\n      </div>\n    {:else}\n      <div class=\"px-4 py-3 bg-gray-50 border-b border-gray-200 sm:px-6\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center\">\n            <input\n              id=\"select-all\"\n              type=\"checkbox\"\n              checked={selectedEntries.size === filteredEntries.length && filteredEntries.length > 0}\n              on:change={toggleSelectAll}\n              class=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n            />\n            <label for=\"select-all\" class=\"ml-3 text-sm text-gray-900\">\n              {filteredEntries.length} artist{filteredEntries.length !== 1 ? 's' : ''}\n              {#if selectedEntries.size > 0}\n                ({selectedEntries.size} selected)\n              {/if}\n            </label>\n          </div>\n          \n          {#if searchQuery || selectedTag}\n            <button\n              on:click={() => { searchQuery = ''; selectedTag = ''; }}\n              class=\"text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Clear filters\n            </button>\n          {/if}\n        </div>\n      </div>\n      \n      <ul class=\"divide-y divide-gray-200\">\n        {#each filteredEntries as entry (entry.artist.id)}\n          <DnpEntry \n            {entry}\n            selected={selectedEntries.has(entry.artist.id)}\n            on:toggleSelect={() => toggleSelectEntry(entry.artist.id)}\n          />\n        {/each}\n      </ul>\n    {/if}\n  </div>\n\n  <!-- Stats -->\n  {#if $dnpStore.entries.length > 0}\n    <div class=\"mt-6 bg-gray-50 rounded-lg p-4\">\n      <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-3\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">{$dnpStore.entries.length}</div>\n          <div class=\"text-sm text-gray-500\">Total Artists</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">{$dnpTags.length}</div>\n          <div class=\"text-sm text-gray-500\">Unique Tags</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900\">\n            {$dnpStore.entries.filter(e => e.note).length}\n          </div>\n          <div class=\"text-sm text-gray-500\">With Notes</div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst defaultOptions = {\n    aggressiveness: 'moderate',\n    blockCollabs: true,\n    blockFeaturing: true,\n    blockSongwriterOnly: false,\n};\nconst initialState = {\n    currentPlan: null,\n    isPlanning: false,\n    isExecuting: false,\n    currentBatch: null,\n    actionHistory: [],\n    options: defaultOptions,\n    error: null,\n};\nexport const enforcementStore = writable(initialState);\nexport const hasActivePlan = derived(enforcementStore, ($enforcement) => $enforcement.currentPlan !== null);\nexport const executionProgress = derived(enforcementStore, ($enforcement) => {\n    if (!$enforcement.currentBatch)\n        return null;\n    const { totalItems, completedItems, failedItems, skippedItems } = $enforcement.currentBatch.summary;\n    const processedItems = completedItems + failedItems + skippedItems;\n    return {\n        total: totalItems,\n        processed: processedItems,\n        completed: completedItems,\n        failed: failedItems,\n        skipped: skippedItems,\n        percentage: totalItems > 0 ? Math.round((processedItems / totalItems) * 100) : 0,\n    };\n});\nexport const canRollback = derived(enforcementStore, ($enforcement) => $enforcement.actionHistory.some(batch => batch.status === 'completed' && batch.items.some(item => item.status === 'completed')));\n// Enforcement actions\nexport const enforcementActions = {\n    updateOptions: (options) => {\n        enforcementStore.update(state => ({\n            ...state,\n            options: { ...state.options, ...options },\n        }));\n    },\n    createPlan: async (providers, dryRun = true) => {\n        let currentOptions = defaultOptions;\n        enforcementStore.update(state => {\n            currentOptions = state.options;\n            return { ...state, isPlanning: true, error: null };\n        });\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/library/plan', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    providers,\n                    options: currentOptions,\n                    dryRun,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentPlan: result.data,\n                    isPlanning: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isPlanning: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to create enforcement plan',\n                isPlanning: false,\n            }));\n            return { success: false, message: 'Failed to create enforcement plan' };\n        }\n    },\n    executePlan: async (planId) => {\n        enforcementStore.update(state => ({ ...state, isExecuting: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/execute', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    planId,\n                    dryRun: false,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                const batch = result.data;\n                enforcementStore.update(state => ({\n                    ...state,\n                    currentBatch: batch,\n                    isExecuting: false,\n                }));\n                // Start polling for progress\n                enforcementActions.pollProgress(batch.id);\n                return { success: true, data: batch };\n            }\n            else {\n                enforcementStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isExecuting: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            enforcementStore.update(state => ({\n                ...state,\n                error: 'Failed to execute enforcement plan',\n                isExecuting: false,\n            }));\n            return { success: false, message: 'Failed to execute enforcement plan' };\n        }\n    },\n    pollProgress: async (batchId) => {\n        const pollInterval = setInterval(async () => {\n            try {\n                const token = localStorage.getItem('auth_token');\n                const response = await fetch(`http://localhost:3000/api/v1/spotify/enforcement/progress/${batchId}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                    },\n                });\n                const result = await response.json();\n                if (result.success) {\n                    const batch = result.data;\n                    enforcementStore.update(state => ({\n                        ...state,\n                        currentBatch: batch,\n                    }));\n                    // Stop polling if batch is complete\n                    if (batch.status === 'completed' || batch.status === 'failed' || batch.status === 'cancelled') {\n                        clearInterval(pollInterval);\n                        // Move to history\n                        enforcementStore.update(state => ({\n                            ...state,\n                            actionHistory: [batch, ...state.actionHistory],\n                            currentBatch: null,\n                            currentPlan: null,\n                        }));\n                    }\n                }\n            }\n            catch (error) {\n                console.error('Failed to poll progress:', error);\n            }\n        }, 2000); // Poll every 2 seconds\n    },\n    rollbackBatch: async (batchId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/rollback', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ batchId }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh action history\n                await enforcementActions.fetchActionHistory();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to rollback actions' };\n        }\n    },\n    fetchActionHistory: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/spotify/enforcement/history', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                enforcementStore.update(state => ({\n                    ...state,\n                    actionHistory: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch action history:', error);\n        }\n    },\n    clearPlan: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            currentPlan: null,\n            error: null,\n        }));\n    },\n    clearError: () => {\n        enforcementStore.update(state => ({\n            ...state,\n            error: null,\n        }));\n    },\n};\n","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore } from '../stores/enforcement';\n  \n  $: options = $enforcementStore.options;\n\n  function updateAggressiveness(level: 'conservative' | 'moderate' | 'aggressive') {\n    enforcementActions.updateOptions({ aggressiveness: level });\n  }\n\n  function toggleOption(option: keyof typeof options) {\n    enforcementActions.updateOptions({ [option]: !options[option] });\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <!-- Aggressiveness Level -->\n  <div>\n    <h4 class=\"text-base font-medium text-gray-900\">Enforcement Aggressiveness</h4>\n    <p class=\"text-sm leading-5 text-gray-500\">\n      Choose how thoroughly to apply your blocklist across your music library.\n    </p>\n    <fieldset class=\"mt-4\">\n      <legend class=\"sr-only\">Aggressiveness level</legend>\n      <div class=\"space-y-4\">\n        <div class=\"flex items-center\">\n          <input\n            id=\"conservative\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'conservative'}\n            on:change={() => updateAggressiveness('conservative')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"conservative\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Conservative\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Only remove explicitly saved/liked content. Preserves playlists and recommendations.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"moderate\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'moderate'}\n            on:change={() => updateAggressiveness('moderate')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"moderate\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Moderate (Recommended)\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Remove from saved content and playlists. Filters recommendations where possible.\n        </div>\n\n        <div class=\"flex items-center\">\n          <input\n            id=\"aggressive\"\n            name=\"aggressiveness\"\n            type=\"radio\"\n            checked={options.aggressiveness === 'aggressive'}\n            on:change={() => updateAggressiveness('aggressive')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n          />\n          <label for=\"aggressive\" class=\"ml-3 block text-sm font-medium text-gray-700\">\n            Aggressive\n          </label>\n        </div>\n        <div class=\"ml-7 text-sm text-gray-500\">\n          Maximum removal including radio seeds, recommendations, and related content.\n        </div>\n      </div>\n    </fieldset>\n  </div>\n\n  <!-- Collaboration and Featuring Options -->\n  <div>\n    <h4 class=\"text-base font-medium text-gray-900\">Collaboration Handling</h4>\n    <p class=\"text-sm leading-5 text-gray-500\">\n      Configure how to handle songs where blocked artists appear as collaborators or featured artists.\n    </p>\n    <div class=\"mt-4 space-y-4\">\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-collabs\"\n            type=\"checkbox\"\n            checked={options.blockCollabs}\n            on:change={() => toggleOption('blockCollabs')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-collabs\" class=\"font-medium text-gray-700\">\n            Block collaborations\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are listed as collaborators or co-writers.\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-featuring\"\n            type=\"checkbox\"\n            checked={options.blockFeaturing}\n            on:change={() => toggleOption('blockFeaturing')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-featuring\" class=\"font-medium text-gray-700\">\n            Block featuring\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are featured (e.g., \"Song Title (feat. Blocked Artist)\").\n          </p>\n        </div>\n      </div>\n\n      <div class=\"flex items-start\">\n        <div class=\"flex items-center h-5\">\n          <input\n            id=\"block-songwriter-only\"\n            type=\"checkbox\"\n            checked={options.blockSongwriterOnly}\n            on:change={() => toggleOption('blockSongwriterOnly')}\n            class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n          />\n        </div>\n        <div class=\"ml-3 text-sm\">\n          <label for=\"block-songwriter-only\" class=\"font-medium text-gray-700\">\n            Block songwriter credits only\n          </label>\n          <p class=\"text-gray-500\">\n            Remove songs where blocked artists are credited only as songwriters (most restrictive).\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Warning for Aggressive Settings -->\n  {#if options.aggressiveness === 'aggressive' || options.blockSongwriterOnly}\n    <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-yellow-800\">\n            Aggressive Settings Warning\n          </h3>\n          <div class=\"mt-2 text-sm text-yellow-700\">\n            <p>\n              These settings may remove a significant amount of content from your library. \n              We recommend reviewing the enforcement preview carefully before executing.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementStore } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  \n  function formatDuration(duration: string) {\n    const seconds = parseInt(duration.replace('s', ''));\n    if (seconds < 60) return `${seconds} seconds`;\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}m ${remainingSeconds}s`;\n  }\n\n  function getProviderIcon(provider: string) {\n    switch (provider) {\n      case 'spotify':\n        return 'M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z';\n      default:\n        return 'M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1';\n    }\n  }\n\n  function getCapabilityColor(capability: string) {\n    switch (capability) {\n      case 'SUPPORTED':\n        return 'text-green-600 bg-green-100';\n      case 'LIMITED':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'UNSUPPORTED':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n{#if plan}\n  <div class=\"space-y-6\">\n    <!-- Plan Summary -->\n    <div class=\"bg-gray-50 rounded-lg p-4\">\n      <div class=\"flex items-center justify-between\">\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900\">Plan Summary</h4>\n          <p class=\"text-sm text-gray-500\">\n            Estimated duration: {formatDuration(plan.estimatedDuration)}\n            {#if plan.resumable}\n              • Resumable if interrupted\n            {/if}\n          </p>\n        </div>\n        <div class=\"text-right\">\n          <div class=\"text-sm font-medium text-gray-900\">Plan ID</div>\n          <div class=\"text-xs text-gray-500 font-mono\">{plan.planId.slice(0, 8)}...</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Provider Impact -->\n    {#each Object.entries(plan.impact) as [provider, impact]}\n      <div class=\"border border-gray-200 rounded-lg p-6\">\n        <div class=\"flex items-center mb-4\">\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-8 w-8 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path d={getProviderIcon(provider)} />\n            </svg>\n          </div>\n          <div class=\"ml-3\">\n            <h4 class=\"text-lg font-medium text-gray-900 capitalize\">{provider}</h4>\n            <p class=\"text-sm text-gray-500\">Impact preview for your {provider} library</p>\n          </div>\n        </div>\n\n        <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n          <!-- Liked Songs -->\n          {#if impact.likedSongs}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Liked Songs</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.likedSongs.toRemove} to remove\n                    {#if impact.likedSongs.collabsFound > 0}\n                      <br /><span class=\"text-xs\">({impact.likedSongs.collabsFound} collaborations)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Playlists -->\n          {#if impact.playlists}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-blue-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Playlists</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.playlists.toScrub} playlists affected\n                    <br /><span class=\"text-xs\">{impact.playlists.tracksToRemove} tracks to remove</span>\n                    {#if impact.playlists.featuringFound > 0}\n                      <br /><span class=\"text-xs\">({impact.playlists.featuringFound} featuring)</span>\n                    {/if}\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Following -->\n          {#if impact.following}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-purple-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Following</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.following.toUnfollow} to unfollow\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n\n          <!-- Radio Seeds -->\n          {#if impact.radioSeeds}\n            <div class=\"bg-white border border-gray-200 rounded-lg p-4\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-orange-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2m-9 0h10m-10 0a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V6a2 2 0 00-2-2M7 4h10\" />\n                  </svg>\n                </div>\n                <div class=\"ml-3\">\n                  <p class=\"text-sm font-medium text-gray-900\">Radio Seeds</p>\n                  <p class=\"text-sm text-gray-500\">\n                    {impact.radioSeeds.toFilter} to filter\n                  </p>\n                </div>\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Capabilities -->\n        {#if plan.capabilities[provider]}\n          <div class=\"mt-4 pt-4 border-t border-gray-200\">\n            <h5 class=\"text-sm font-medium text-gray-900 mb-2\">Platform Capabilities</h5>\n            <div class=\"flex flex-wrap gap-2\">\n              {#each Object.entries(plan.capabilities[provider]) as [capability, support]}\n                <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getCapabilityColor(support)}\">\n                  {capability.replace(/_/g, ' ').toLowerCase()}\n                </span>\n              {/each}\n            </div>\n          </div>\n        {/if}\n      </div>\n    {/each}\n\n    <!-- Important Notes -->\n    <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-blue-800\">\n            Before You Execute\n          </h3>\n          <div class=\"mt-2 text-sm text-blue-700\">\n            <ul class=\"list-disc list-inside space-y-1\">\n              <li>This is a preview - no changes have been made yet</li>\n              <li>Execution will modify your actual music library</li>\n              <li>Some actions may not be reversible depending on platform limitations</li>\n              <li>The process can be interrupted and resumed if needed</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-6\">\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n    </svg>\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement plan</h3>\n    <p class=\"mt-1 text-sm text-gray-500\">Create a plan to see the preview.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, executionProgress } from '../stores/enforcement';\n  \n  $: plan = $enforcementStore.currentPlan;\n  $: currentBatch = $enforcementStore.currentBatch;\n  $: progress = $executionProgress;\n\n  async function executePlan() {\n    if (!plan) return;\n    \n    const confirmed = confirm(\n      'Are you sure you want to execute this enforcement plan? This will modify your music library and some changes may not be reversible.'\n    );\n    \n    if (confirmed) {\n      await enforcementActions.executePlan(plan.planId);\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function getActionIcon(action: string) {\n    switch (action) {\n      case 'remove_liked_song':\n        return 'M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z';\n      case 'remove_playlist_track':\n        return 'M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3';\n      case 'unfollow_artist':\n        return 'M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z';\n      default:\n        return 'M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleString();\n  }\n</script>\n\n<div class=\"space-y-6\">\n  {#if !plan}\n    <!-- No Plan Available -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement plan available</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">Create a plan first to execute enforcement.</p>\n    </div>\n  {:else if currentBatch}\n    <!-- Execution in Progress -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 class=\"text-lg font-medium text-gray-900\">Enforcement Execution</h3>\n          <p class=\"text-sm text-gray-500\">\n            Batch ID: <span class=\"font-mono\">{currentBatch.id.slice(0, 8)}...</span>\n          </p>\n        </div>\n        <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor(currentBatch.status)}\">\n          {currentBatch.status}\n        </span>\n      </div>\n\n      <!-- Progress Bar -->\n      {#if progress}\n        <div class=\"mb-6\">\n          <div class=\"flex justify-between text-sm text-gray-600 mb-2\">\n            <span>Progress</span>\n            <span>{progress.processed} / {progress.total} ({progress.percentage}%)</span>\n          </div>\n          <div class=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              class=\"bg-indigo-600 h-2 rounded-full transition-all duration-300\"\n              style=\"width: {progress.percentage}%\"\n            ></div>\n          </div>\n          <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\n            <span>{progress.completed} completed</span>\n            <span>{progress.failed} failed</span>\n            <span>{progress.skipped} skipped</span>\n          </div>\n        </div>\n      {/if}\n\n      <!-- Batch Summary -->\n      <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-4 mb-6\">\n        <div class=\"bg-gray-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-gray-900\">{currentBatch.summary.totalItems}</div>\n          <div class=\"text-xs text-gray-500\">Total Items</div>\n        </div>\n        <div class=\"bg-green-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-green-600\">{currentBatch.summary.completedItems}</div>\n          <div class=\"text-xs text-gray-500\">Completed</div>\n        </div>\n        <div class=\"bg-red-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-red-600\">{currentBatch.summary.failedItems}</div>\n          <div class=\"text-xs text-gray-500\">Failed</div>\n        </div>\n        <div class=\"bg-yellow-50 rounded-lg p-3 text-center\">\n          <div class=\"text-lg font-semibold text-yellow-600\">{currentBatch.summary.skippedItems}</div>\n          <div class=\"text-xs text-gray-500\">Skipped</div>\n        </div>\n      </div>\n\n      <!-- Recent Actions -->\n      {#if currentBatch.items.length > 0}\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900 mb-3\">Recent Actions</h4>\n          <div class=\"space-y-2 max-h-64 overflow-y-auto\">\n            {#each currentBatch.items.slice(0, 10) as item}\n              <div class=\"flex items-center justify-between py-2 px-3 bg-gray-50 rounded-md\">\n                <div class=\"flex items-center space-x-3\">\n                  <svg class=\"h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d={getActionIcon(item.action)} />\n                  </svg>\n                  <div>\n                    <div class=\"text-sm font-medium text-gray-900\">\n                      {item.action.replace(/_/g, ' ')}\n                    </div>\n                    <div class=\"text-xs text-gray-500\">\n                      {item.entityType}: {item.entityId.slice(0, 20)}...\n                    </div>\n                  </div>\n                </div>\n                <div class=\"flex items-center space-x-2\">\n                  <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getStatusColor(item.status)}\">\n                    {item.status}\n                  </span>\n                  {#if item.status === 'failed' && item.errorMessage}\n                    <button\n                      title={item.errorMessage}\n                      class=\"text-red-400 hover:text-red-600\"\n                    >\n                      <svg class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                      </svg>\n                    </button>\n                  {/if}\n                </div>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else}\n    <!-- Ready to Execute -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"text-center\">\n        <svg class=\"mx-auto h-12 w-12 text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        <h3 class=\"mt-2 text-lg font-medium text-gray-900\">Ready to Execute</h3>\n        <p class=\"mt-1 text-sm text-gray-500\">\n          Your enforcement plan is ready. Click execute to apply changes to your music library.\n        </p>\n        \n        <div class=\"mt-6\">\n          <button\n            on:click={executePlan}\n            disabled={$enforcementStore.isExecuting}\n            class=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isExecuting}\n              <svg class=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Starting Execution...\n            {:else}\n              <svg class=\"-ml-1 mr-3 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              Execute Enforcement Plan\n            {/if}\n          </button>\n        </div>\n\n        <div class=\"mt-4 text-xs text-gray-500\">\n          <p>⚠️ This action will modify your music library</p>\n          <p>Some changes may not be reversible</p>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Error Display -->\n  {#if $enforcementStore.error}\n    <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <p class=\"text-sm text-red-800\">{$enforcementStore.error}</p>\n          <button\n            on:click={() => enforcementActions.clearError()}\n            class=\"mt-2 text-sm text-red-600 hover:text-red-500\"\n          >\n            Dismiss\n          </button>\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>","<script lang=\"ts\">\n  import { enforcementActions, enforcementStore, canRollback } from '../stores/enforcement';\n  \n  $: actionHistory = $enforcementStore.actionHistory;\n\n  async function rollbackBatch(batchId: string) {\n    const confirmed = confirm(\n      'Are you sure you want to rollback this batch? This will attempt to undo the changes made during this enforcement.'\n    );\n    \n    if (confirmed) {\n      const result = await enforcementActions.rollbackBatch(batchId);\n      if (!result.success) {\n        alert(`Rollback failed: ${result.message}`);\n      }\n    }\n  }\n\n  function getStatusColor(status: string) {\n    switch (status) {\n      case 'pending':\n        return 'text-gray-600 bg-gray-100';\n      case 'running':\n        return 'text-blue-600 bg-blue-100';\n      case 'completed':\n        return 'text-green-600 bg-green-100';\n      case 'failed':\n        return 'text-red-600 bg-red-100';\n      case 'cancelled':\n        return 'text-yellow-600 bg-yellow-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleString();\n  }\n\n  function getSuccessRate(batch: any) {\n    const total = batch.summary.totalItems;\n    const completed = batch.summary.completedItems;\n    return total > 0 ? Math.round((completed / total) * 100) : 0;\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div class=\"flex justify-between items-center\">\n    <div>\n      <h3 class=\"text-lg font-medium text-gray-900\">Action History</h3>\n      <p class=\"text-sm text-gray-500\">\n        View and manage your past enforcement executions.\n      </p>\n    </div>\n    \n    {#if $canRollback}\n      <div class=\"text-sm text-gray-500\">\n        <svg class=\"inline h-4 w-4 text-green-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n        Rollback available\n      </div>\n    {/if}\n  </div>\n\n  {#if actionHistory.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No enforcement history</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        Your enforcement executions will appear here after you run them.\n      </p>\n    </div>\n  {:else}\n    <!-- History List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each actionHistory as batch}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"flex-shrink-0\">\n                    <svg class=\"h-8 w-8 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.66 0 12 0zm5.521 17.34c-.24.359-.66.48-1.021.24-2.82-1.74-6.36-2.101-10.561-1.141-.418.122-.779-.179-.899-.539-.12-.421.18-.78.54-.9 4.56-1.021 8.52-.6 11.64 1.32.42.18.479.659.301 1.02zm1.44-3.3c-.301.42-.841.6-1.262.3-3.239-1.98-8.159-2.58-11.939-1.38-.479.12-1.02-.12-1.14-.6-.12-.48.12-1.021.6-1.141C9.6 9.9 15 10.561 18.72 12.84c.361.181.54.78.241 1.2zm.12-3.36C15.24 8.4 8.82 8.16 5.16 9.301c-.6.179-1.2-.181-1.38-.721-.18-.601.18-1.2.72-1.381 4.26-1.26 11.28-1.02 15.721 1.621.539.3.719 1.02.42 1.56-.299.421-1.02.599-1.559.3z\"/>\n                    </svg>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-sm font-medium text-gray-900 capitalize\">\n                        {batch.provider} Enforcement\n                      </p>\n                      <span class=\"ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {getStatusColor(batch.status)}\">\n                        {batch.status}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\n                      <p>\n                        Executed {formatDate(batch.createdAt)}\n                        {#if batch.completedAt}\n                          • Completed {formatDate(batch.completedAt)}\n                        {/if}\n                      </p>\n                    </div>\n                    <div class=\"mt-1 text-xs text-gray-400\">\n                      Batch ID: <span class=\"font-mono\">{batch.id.slice(0, 8)}...</span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-4\">\n                  <!-- Stats -->\n                  <div class=\"text-right\">\n                    <div class=\"text-sm font-medium text-gray-900\">\n                      {getSuccessRate(batch)}% success\n                    </div>\n                    <div class=\"text-xs text-gray-500\">\n                      {batch.summary.completedItems} / {batch.summary.totalItems} items\n                    </div>\n                  </div>\n                  \n                  <!-- Actions -->\n                  {#if batch.status === 'completed' && batch.summary.completedItems > 0}\n                    <button\n                      on:click={() => rollbackBatch(batch.id)}\n                      class=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                      <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\" />\n                      </svg>\n                      Rollback\n                    </button>\n                  {/if}\n                </div>\n              </div>\n              \n              <!-- Detailed Stats -->\n              <div class=\"mt-4\">\n                <div class=\"grid grid-cols-2 gap-4 sm:grid-cols-4\">\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-gray-900\">{batch.summary.totalItems}</div>\n                    <div class=\"text-xs text-gray-500\">Total</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-green-600\">{batch.summary.completedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Completed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-red-600\">{batch.summary.failedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Failed</div>\n                  </div>\n                  <div class=\"text-center\">\n                    <div class=\"text-lg font-semibold text-yellow-600\">{batch.summary.skippedItems}</div>\n                    <div class=\"text-xs text-gray-500\">Skipped</div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Options Used -->\n              <div class=\"mt-3 pt-3 border-t border-gray-200\">\n                <div class=\"text-xs text-gray-500\">\n                  <span class=\"font-medium\">Options:</span>\n                  {batch.options.aggressiveness} aggressiveness\n                  {#if batch.options.blockCollabs}, block collaborations{/if}\n                  {#if batch.options.blockFeaturing}, block featuring{/if}\n                  {#if batch.options.blockSongwriterOnly}, block songwriter credits{/if}\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Rollbacks\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Rollback attempts to undo changes made during enforcement. Success depends on platform capabilities:\n          </p>\n          <ul class=\"list-disc list-inside mt-1 space-y-1\">\n            <li>Re-adding liked songs and follows: Usually successful</li>\n            <li>Re-adding playlist tracks: May not preserve original order</li>\n            <li>Radio seed changes: May not be fully reversible</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { enforcementActions, enforcementStore, hasActivePlan } from '../stores/enforcement';\n  import { hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpCount } from '../stores/dnp';\n  import EnforcementOptions from './EnforcementOptions.svelte';\n  import EnforcementPreview from './EnforcementPreview.svelte';\n  import EnforcementExecution from './EnforcementExecution.svelte';\n  import ActionHistory from './ActionHistory.svelte';\n  \n  let activeTab = 'plan';\n  \n  onMount(() => {\n    enforcementActions.fetchActionHistory();\n  });\n\n  async function createPlan() {\n    const providers = [];\n    if ($hasActiveSpotifyConnection) {\n      providers.push('spotify');\n    }\n    \n    if (providers.length === 0) {\n      return;\n    }\n    \n    await enforcementActions.createPlan(providers, true);\n  }\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <h2 class=\"text-2xl font-bold text-gray-900\">Enforcement Planning</h2>\n    <p class=\"mt-1 text-sm text-gray-600\">\n      Plan and execute blocklist enforcement across your connected streaming services.\n    </p>\n  </div>\n\n  <!-- Prerequisites Check -->\n  {#if !$hasActiveSpotifyConnection || $dnpCount === 0}\n    <div class=\"mb-6 bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n      <div class=\"flex\">\n        <div class=\"flex-shrink-0\">\n          <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </div>\n        <div class=\"ml-3\">\n          <h3 class=\"text-sm font-medium text-yellow-800\">\n            Setup Required\n          </h3>\n          <div class=\"mt-2 text-sm text-yellow-700\">\n            <p>Before you can plan enforcement, you need:</p>\n            <ul class=\"list-disc list-inside mt-1 space-y-1\">\n              {#if !$hasActiveSpotifyConnection}\n                <li>Connect at least one streaming service (Spotify)</li>\n              {/if}\n              {#if $dnpCount === 0}\n                <li>Add artists to your Do-Not-Play list</li>\n              {/if}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('plan')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'plan' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Plan Enforcement\n      </button>\n      <button\n        on:click={() => setActiveTab('execute')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'execute' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        disabled={!$hasActivePlan}\n      >\n        Execute Plan\n      </button>\n      <button\n        on:click={() => setActiveTab('history')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'history' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Action History\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'plan'}\n    <div class=\"space-y-6\">\n      <!-- Enforcement Options -->\n      <div class=\"bg-white shadow rounded-lg p-6\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Enforcement Options</h3>\n        <EnforcementOptions />\n      </div>\n\n      <!-- Current Plan Preview -->\n      {#if $hasActivePlan}\n        <div class=\"bg-white shadow rounded-lg p-6\">\n          <div class=\"flex justify-between items-center mb-4\">\n            <h3 class=\"text-lg font-medium text-gray-900\">Enforcement Preview</h3>\n            <button\n              on:click={() => enforcementActions.clearPlan()}\n              class=\"text-sm text-gray-500 hover:text-gray-700\"\n            >\n              Clear Plan\n            </button>\n          </div>\n          <EnforcementPreview />\n        </div>\n      {:else}\n        <!-- Create Plan -->\n        <div class=\"bg-white shadow rounded-lg p-6\">\n          <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Create Enforcement Plan</h3>\n          <p class=\"text-sm text-gray-600 mb-4\">\n            Generate a dry-run preview to see what changes will be made to your music library.\n          </p>\n          \n          <button\n            on:click={createPlan}\n            disabled={$enforcementStore.isPlanning || !$hasActiveSpotifyConnection || $dnpCount === 0}\n            class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {#if $enforcementStore.isPlanning}\n              <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n              </svg>\n              Creating Plan...\n            {:else}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n              </svg>\n              Create Enforcement Plan\n            {/if}\n          </button>\n        </div>\n      {/if}\n\n      <!-- Error Display -->\n      {#if $enforcementStore.error}\n        <div class=\"bg-red-50 border border-red-200 rounded-md p-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <svg class=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n              </svg>\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm text-red-800\">{$enforcementStore.error}</p>\n              <button\n                on:click={() => enforcementActions.clearError()}\n                class=\"mt-2 text-sm text-red-600 hover:text-red-500\"\n              >\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  {:else if activeTab === 'execute'}\n    <EnforcementExecution />\n  {:else if activeTab === 'history'}\n    <ActionHistory />\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\nconst initialState = {\n    lists: [],\n    currentList: null,\n    subscriptions: [],\n    subscriptionImpact: null,\n    isLoading: false,\n    isLoadingList: false,\n    isLoadingImpact: false,\n    searchQuery: '',\n    sortBy: 'updated_at',\n    sortOrder: 'desc',\n    error: null,\n};\nexport const communityStore = writable(initialState);\nexport const filteredLists = derived(communityStore, ($community) => {\n    let filtered = $community.lists;\n    // Apply search filter\n    if ($community.searchQuery.trim()) {\n        const query = $community.searchQuery.toLowerCase();\n        filtered = filtered.filter(list => list.name.toLowerCase().includes(query) ||\n            list.description.toLowerCase().includes(query) ||\n            list.criteria.toLowerCase().includes(query));\n    }\n    // Apply sorting\n    filtered.sort((a, b) => {\n        let aValue = a[$community.sortBy];\n        let bValue = b[$community.sortBy];\n        if ($community.sortBy === 'created_at' || $community.sortBy === 'updated_at') {\n            aValue = new Date(aValue).getTime();\n            bValue = new Date(bValue).getTime();\n        }\n        if (typeof aValue === 'string') {\n            aValue = aValue.toLowerCase();\n            bValue = bValue.toLowerCase();\n        }\n        const comparison = aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n        return $community.sortOrder === 'asc' ? comparison : -comparison;\n    });\n    return filtered;\n});\nexport const subscribedListIds = derived(communityStore, ($community) => new Set($community.subscriptions.map(sub => sub.list_id)));\nexport const isSubscribed = derived([communityStore, subscribedListIds], ([$community, $subscribedIds]) => (listId) => $subscribedIds.has(listId));\n// Community actions\nexport const communityActions = {\n    fetchLists: async () => {\n        communityStore.update(state => ({ ...state, isLoading: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    lists: result.data,\n                    isLoading: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoading: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch community lists',\n                isLoading: false,\n            }));\n        }\n    },\n    fetchListDetails: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingList: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/artists`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    currentList: result.data,\n                    isLoadingList: false,\n                }));\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingList: false,\n                }));\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to fetch list details',\n                isLoadingList: false,\n            }));\n        }\n    },\n    fetchSubscriptions: async () => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/subscriptions', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptions: result.data,\n                }));\n            }\n        }\n        catch (error) {\n            console.error('Failed to fetch subscriptions:', error);\n        }\n    },\n    getSubscriptionImpact: async (listId) => {\n        communityStore.update(state => ({ ...state, isLoadingImpact: true, error: null }));\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/impact`, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                communityStore.update(state => ({\n                    ...state,\n                    subscriptionImpact: result.data,\n                    isLoadingImpact: false,\n                }));\n                return { success: true, data: result.data };\n            }\n            else {\n                communityStore.update(state => ({\n                    ...state,\n                    error: result.message,\n                    isLoadingImpact: false,\n                }));\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            communityStore.update(state => ({\n                ...state,\n                error: 'Failed to get subscription impact',\n                isLoadingImpact: false,\n            }));\n            return { success: false, message: 'Failed to get subscription impact' };\n        }\n    },\n    subscribe: async (listId, versionPinned, autoUpdate = true) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to subscribe to list' };\n        }\n    },\n    unsubscribe: async (listId) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/unsubscribe`, {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                },\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to unsubscribe from list' };\n        }\n    },\n    updateSubscription: async (listId, versionPinned, autoUpdate) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch(`http://localhost:3000/api/v1/community/lists/${listId}/subscription`, {\n                method: 'PUT',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    version_pinned: versionPinned,\n                    auto_update: autoUpdate,\n                }),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh subscriptions\n                await communityActions.fetchSubscriptions();\n                return { success: true };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to update subscription' };\n        }\n    },\n    createList: async (listData) => {\n        try {\n            const token = localStorage.getItem('auth_token');\n            const response = await fetch('http://localhost:3000/api/v1/community/lists', {\n                method: 'POST',\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(listData),\n            });\n            const result = await response.json();\n            if (result.success) {\n                // Refresh lists\n                await communityActions.fetchLists();\n                return { success: true, data: result.data };\n            }\n            else {\n                return { success: false, message: result.message };\n            }\n        }\n        catch (error) {\n            return { success: false, message: 'Failed to create community list' };\n        }\n    },\n    updateSearch: (query) => {\n        communityStore.update(state => ({ ...state, searchQuery: query }));\n    },\n    updateSort: (sortBy, sortOrder) => {\n        communityStore.update(state => ({ ...state, sortBy, sortOrder }));\n    },\n    clearCurrentList: () => {\n        communityStore.update(state => ({ ...state, currentList: null }));\n    },\n    clearError: () => {\n        communityStore.update(state => ({ ...state, error: null }));\n    },\n};\n","<script lang=\"ts\">\n  import { communityActions, subscribedListIds } from '../stores/community';\n  \n  export let list;\n  \n  $: isSubscribed = $subscribedListIds.has(list.id);\n\n  async function viewDetails() {\n    await communityActions.fetchListDetails(list.id);\n  }\n\n  async function toggleSubscription() {\n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      // Show impact preview first\n      const impact = await communityActions.getSubscriptionImpact(list.id);\n      if (impact.success) {\n        const confirmed = confirm(\n          `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n        );\n        if (confirmed) {\n          const result = await communityActions.subscribe(list.id);\n          if (!result.success) {\n            alert(`Failed to subscribe: ${result.message}`);\n          }\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n<div class=\"bg-white overflow-hidden shadow rounded-lg hover:shadow-md transition-shadow\">\n  <div class=\"p-6\">\n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex items-center\">\n        <h3 class=\"text-lg font-medium text-gray-900 truncate\">\n          {list.name}\n        </h3>\n        {#if isSubscribed}\n          <span class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium text-green-800 bg-green-100\">\n            Subscribed\n          </span>\n        {/if}\n      </div>\n      <span class=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getUpdateCadenceColor(list.update_cadence)}\">\n        {list.update_cadence}\n      </span>\n    </div>\n    \n    <p class=\"mt-2 text-sm text-gray-600 line-clamp-2\">\n      {list.description}\n    </p>\n    \n    <div class=\"mt-3\">\n      <h4 class=\"text-xs font-medium text-gray-900 uppercase tracking-wide\">Criteria</h4>\n      <p class=\"mt-1 text-sm text-gray-600 line-clamp-2\">\n        {list.criteria}\n      </p>\n    </div>\n    \n    <div class=\"mt-4 flex items-center justify-between text-sm text-gray-500\">\n      <div class=\"flex items-center space-x-4\">\n        <span>\n          <svg class=\"inline h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          {list.artist_count || 0} artists\n        </span>\n        <span>\n          <svg class=\"inline h-4 w-4 text-gray-400 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n          </svg>\n          {list.subscriber_count || 0} subscribers\n        </span>\n      </div>\n      <span>v{list.version}</span>\n    </div>\n    \n    <div class=\"mt-4 text-xs text-gray-400\">\n      Updated {formatDate(list.updated_at)}\n      {#if list.governance_url}\n        • <a href={list.governance_url} target=\"_blank\" class=\"text-indigo-600 hover:text-indigo-500\">Governance</a>\n      {/if}\n    </div>\n  </div>\n  \n  <div class=\"bg-gray-50 px-6 py-3\">\n    <div class=\"flex justify-between items-center\">\n      <button\n        on:click={viewDetails}\n        class=\"text-sm text-indigo-600 hover:text-indigo-500 font-medium\"\n      >\n        View Details\n      </button>\n      \n      <button\n        on:click={toggleSubscription}\n        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md {isSubscribed \n          ? 'text-red-700 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n          : 'text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n      >\n        {#if isSubscribed}\n          <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n          Unsubscribe\n        {:else}\n          <svg class=\"-ml-0.5 mr-2 h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n          </svg>\n          Subscribe\n        {/if}\n      </button>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { communityActions, communityStore, subscribedListIds } from '../stores/community';\n  \n  $: list = $communityStore.currentList;\n  $: isSubscribed = list ? $subscribedListIds.has(list.id) : false;\n  \n  let showSubscriptionOptions = false;\n  let versionPinned = null;\n  let autoUpdate = true;\n\n  function goBack() {\n    communityActions.clearCurrentList();\n  }\n\n  async function toggleSubscription() {\n    if (!list) return;\n    \n    if (isSubscribed) {\n      const result = await communityActions.unsubscribe(list.id);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    } else {\n      showSubscriptionOptions = true;\n    }\n  }\n\n  async function confirmSubscription() {\n    if (!list) return;\n    \n    // Get impact preview\n    const impact = await communityActions.getSubscriptionImpact(list.id);\n    if (impact.success) {\n      const confirmed = confirm(\n        `This list will add ${impact.data.artists_to_add} artists to your DNP list. Continue?`\n      );\n      if (confirmed) {\n        const result = await communityActions.subscribe(\n          list.id, \n          versionPinned || undefined, \n          autoUpdate\n        );\n        if (result.success) {\n          showSubscriptionOptions = false;\n        } else {\n          alert(`Failed to subscribe: ${result.message}`);\n        }\n      }\n    }\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getProviderBadges(artist: any) {\n    const badges = [];\n    if (artist.external_ids.spotify) badges.push({ name: 'Spotify', color: 'bg-green-100 text-green-800' });\n    if (artist.external_ids.apple) badges.push({ name: 'Apple', color: 'bg-gray-100 text-gray-800' });\n    if (artist.external_ids.musicbrainz) badges.push({ name: 'MusicBrainz', color: 'bg-blue-100 text-blue-800' });\n    return badges;\n  }\n</script>\n\n{#if list}\n  <div class=\"space-y-6\">\n    <!-- Header -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <div class=\"flex items-center justify-between mb-4\">\n        <button\n          on:click={goBack}\n          class=\"inline-flex items-center text-sm text-gray-500 hover:text-gray-700\"\n        >\n          <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n          Back to lists\n        </button>\n        \n        <div class=\"flex items-center space-x-2\">\n          {#if isSubscribed}\n            <span class=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium text-green-800 bg-green-100\">\n              Subscribed\n            </span>\n          {/if}\n          <span class=\"text-sm text-gray-500\">v{list.version}</span>\n        </div>\n      </div>\n      \n      <div class=\"flex justify-between items-start\">\n        <div class=\"flex-1\">\n          <h1 class=\"text-2xl font-bold text-gray-900\">{list.name}</h1>\n          <p class=\"mt-2 text-gray-600\">{list.description}</p>\n          \n          <div class=\"mt-4 grid grid-cols-1 gap-4 sm:grid-cols-3\">\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.artists?.length || 0}</div>\n              <div class=\"text-sm text-gray-500\">Artists</div>\n            </div>\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.subscriber_count || 0}</div>\n              <div class=\"text-sm text-gray-500\">Subscribers</div>\n            </div>\n            <div class=\"text-center p-3 bg-gray-50 rounded-lg\">\n              <div class=\"text-lg font-semibold text-gray-900\">{list.update_cadence}</div>\n              <div class=\"text-sm text-gray-500\">Updates</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"ml-6\">\n          <button\n            on:click={toggleSubscription}\n            class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm {isSubscribed \n              ? 'text-red-700 bg-red-100 hover:bg-red-200 focus:ring-red-500' \n              : 'text-white bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500'} focus:outline-none focus:ring-2 focus:ring-offset-2\"\n          >\n            {#if isSubscribed}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n              Unsubscribe\n            {:else}\n              <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              Subscribe\n            {/if}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Subscription Options Modal -->\n    {#if showSubscriptionOptions}\n      <div class=\"bg-white shadow rounded-lg p-6 border-2 border-indigo-200\">\n        <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Subscription Options</h3>\n        \n        <div class=\"space-y-4\">\n          <div>\n            <label class=\"block text-sm font-medium text-gray-700\">Version Pinning</label>\n            <div class=\"mt-2 space-y-2\">\n              <div class=\"flex items-center\">\n                <input\n                  id=\"auto-update\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={null}\n                  class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                />\n                <label for=\"auto-update\" class=\"ml-3 block text-sm text-gray-700\">\n                  Auto-update to latest version (recommended)\n                </label>\n              </div>\n              <div class=\"flex items-center\">\n                <input\n                  id=\"pin-version\"\n                  type=\"radio\"\n                  bind:group={versionPinned}\n                  value={list.version}\n                  class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                />\n                <label for=\"pin-version\" class=\"ml-3 block text-sm text-gray-700\">\n                  Pin to current version (v{list.version})\n                </label>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex items-start\">\n            <div class=\"flex items-center h-5\">\n              <input\n                id=\"auto-update-checkbox\"\n                type=\"checkbox\"\n                bind:checked={autoUpdate}\n                class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n              />\n            </div>\n            <div class=\"ml-3 text-sm\">\n              <label for=\"auto-update-checkbox\" class=\"font-medium text-gray-700\">\n                Enable automatic updates\n              </label>\n              <p class=\"text-gray-500\">\n                Receive notifications when the list is updated and apply changes automatically.\n              </p>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mt-6 flex justify-end space-x-3\">\n          <button\n            on:click={() => showSubscriptionOptions = false}\n            class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Cancel\n          </button>\n          <button\n            on:click={confirmSubscription}\n            class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          >\n            Subscribe\n          </button>\n        </div>\n      </div>\n    {/if}\n\n    <!-- Criteria and Governance -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">List Criteria & Governance</h3>\n      \n      <div class=\"space-y-4\">\n        <div>\n          <h4 class=\"text-sm font-medium text-gray-900\">Inclusion Criteria</h4>\n          <p class=\"mt-1 text-sm text-gray-600\">{list.criteria}</p>\n        </div>\n        \n        <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Update Cadence</h4>\n            <p class=\"mt-1 text-sm text-gray-600 capitalize\">{list.update_cadence}</p>\n          </div>\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Last Updated</h4>\n            <p class=\"mt-1 text-sm text-gray-600\">{formatDate(list.updated_at)}</p>\n          </div>\n        </div>\n        \n        {#if list.governance_url}\n          <div>\n            <h4 class=\"text-sm font-medium text-gray-900\">Governance Process</h4>\n            <a \n              href={list.governance_url} \n              target=\"_blank\" \n              class=\"mt-1 text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              View governance documentation →\n            </a>\n          </div>\n        {/if}\n      </div>\n    </div>\n\n    <!-- Artists List -->\n    <div class=\"bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">\n        Artists ({list.artists?.length || 0})\n      </h3>\n      \n      {#if $communityStore.isLoadingList}\n        <div class=\"text-center py-6\">\n          <svg class=\"animate-spin mx-auto h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          <p class=\"mt-2 text-sm text-gray-500\">Loading artists...</p>\n        </div>\n      {:else if list.artists && list.artists.length > 0}\n        <div class=\"space-y-3 max-h-96 overflow-y-auto\">\n          {#each list.artists as item}\n            <div class=\"flex items-center justify-between py-3 px-4 bg-gray-50 rounded-lg\">\n              <div class=\"flex items-center space-x-3\">\n                {#if item.artist.metadata.image}\n                  <img\n                    src={item.artist.metadata.image}\n                    alt={item.artist.canonical_name}\n                    class=\"h-10 w-10 rounded-full object-cover\"\n                  />\n                {:else}\n                  <div class=\"h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center\">\n                    <svg class=\"h-5 w-5 text-gray-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                    </svg>\n                  </div>\n                {/if}\n                \n                <div>\n                  <div class=\"text-sm font-medium text-gray-900\">\n                    {item.artist.canonical_name}\n                  </div>\n                  {#if item.artist.metadata.genres && item.artist.metadata.genres.length > 0}\n                    <div class=\"text-xs text-gray-500\">\n                      {item.artist.metadata.genres.slice(0, 2).join(', ')}\n                    </div>\n                  {/if}\n                  <div class=\"flex space-x-1 mt-1\">\n                    {#each getProviderBadges(item.artist) as badge}\n                      <span class=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs font-medium {badge.color}\">\n                        {badge.name}\n                      </span>\n                    {/each}\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"text-right\">\n                <div class=\"text-xs text-gray-500\">\n                  Added {formatDate(item.added_at)}\n                </div>\n                {#if item.rationale_link}\n                  <a \n                    href={item.rationale_link} \n                    target=\"_blank\" \n                    class=\"text-xs text-indigo-600 hover:text-indigo-500\"\n                  >\n                    View rationale\n                  </a>\n                {/if}\n              </div>\n            </div>\n          {/each}\n        </div>\n      {:else}\n        <div class=\"text-center py-6\">\n          <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n          </svg>\n          <p class=\"mt-2 text-sm text-gray-500\">No artists in this list yet.</p>\n        </div>\n      {/if}\n    </div>\n  </div>\n{:else}\n  <div class=\"text-center py-12\">\n    <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n    </svg>\n    <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No list selected</h3>\n    <p class=\"mt-1 text-sm text-gray-500\">Select a list to view its details.</p>\n  </div>\n{/if}","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import { communityActions } from '../stores/community';\n  \n  const dispatch = createEventDispatcher();\n  \n  let name = '';\n  let description = '';\n  let criteria = '';\n  let governanceUrl = '';\n  let updateCadence = 'monthly';\n  let visibility = 'public';\n  let isCreating = false;\n  let error = '';\n\n  async function handleSubmit() {\n    if (!name.trim() || !description.trim() || !criteria.trim()) {\n      error = 'Please fill in all required fields';\n      return;\n    }\n\n    isCreating = true;\n    error = '';\n\n    const result = await communityActions.createList({\n      name: name.trim(),\n      description: description.trim(),\n      criteria: criteria.trim(),\n      governance_url: governanceUrl.trim() || undefined,\n      update_cadence: updateCadence,\n      visibility: visibility as 'public' | 'private',\n    });\n\n    if (result.success) {\n      // Reset form\n      name = '';\n      description = '';\n      criteria = '';\n      governanceUrl = '';\n      updateCadence = 'monthly';\n      visibility = 'public';\n      dispatch('listCreated');\n    } else {\n      error = result.message || 'Failed to create community list';\n    }\n\n    isCreating = false;\n  }\n</script>\n\n<form on:submit|preventDefault={handleSubmit} class=\"space-y-6\">\n  <!-- Name -->\n  <div>\n    <label for=\"name\" class=\"block text-sm font-medium text-gray-700\">\n      List Name *\n    </label>\n    <input\n      id=\"name\"\n      type=\"text\"\n      bind:value={name}\n      placeholder=\"e.g., Controversial Artists List\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    />\n  </div>\n\n  <!-- Description -->\n  <div>\n    <label for=\"description\" class=\"block text-sm font-medium text-gray-700\">\n      Description *\n    </label>\n    <textarea\n      id=\"description\"\n      bind:value={description}\n      rows=\"3\"\n      placeholder=\"Describe the purpose and scope of this list...\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    ></textarea>\n  </div>\n\n  <!-- Criteria -->\n  <div>\n    <label for=\"criteria\" class=\"block text-sm font-medium text-gray-700\">\n      Inclusion Criteria *\n    </label>\n    <textarea\n      id=\"criteria\"\n      bind:value={criteria}\n      rows=\"4\"\n      placeholder=\"Define clear, neutral criteria for including artists in this list. Avoid subjective language or personal opinions.\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n      required\n    ></textarea>\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Criteria must be factual and neutral. Avoid subjective terms or personal opinions.\n    </p>\n  </div>\n\n  <!-- Governance URL -->\n  <div>\n    <label for=\"governance-url\" class=\"block text-sm font-medium text-gray-700\">\n      Governance Documentation URL\n    </label>\n    <input\n      id=\"governance-url\"\n      type=\"url\"\n      bind:value={governanceUrl}\n      placeholder=\"https://example.com/governance-process\"\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    />\n    <p class=\"mt-1 text-xs text-gray-500\">\n      Link to documentation explaining your list's governance process and appeals procedure.\n    </p>\n  </div>\n\n  <!-- Update Cadence -->\n  <div>\n    <label for=\"update-cadence\" class=\"block text-sm font-medium text-gray-700\">\n      Update Cadence\n    </label>\n    <select\n      id=\"update-cadence\"\n      bind:value={updateCadence}\n      class=\"mt-1 block w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n    >\n      <option value=\"daily\">Daily</option>\n      <option value=\"weekly\">Weekly</option>\n      <option value=\"monthly\">Monthly</option>\n      <option value=\"as-needed\">As Needed</option>\n    </select>\n  </div>\n\n  <!-- Visibility -->\n  <div>\n    <label class=\"block text-sm font-medium text-gray-700\">Visibility</label>\n    <div class=\"mt-2 space-y-2\">\n      <div class=\"flex items-center\">\n        <input\n          id=\"public\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"public\"\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n        />\n        <label for=\"public\" class=\"ml-3 block text-sm text-gray-700\">\n          Public - Anyone can discover and subscribe\n        </label>\n      </div>\n      <div class=\"flex items-center\">\n        <input\n          id=\"private\"\n          type=\"radio\"\n          bind:group={visibility}\n          value=\"private\"\n          class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n        />\n        <label for=\"private\" class=\"ml-3 block text-sm text-gray-700\">\n          Private - Only you can manage, others need direct link\n        </label>\n      </div>\n    </div>\n  </div>\n\n  {#if error}\n    <div class=\"text-red-600 text-sm\">\n      {error}\n    </div>\n  {/if}\n\n  <!-- Submit Button -->\n  <div class=\"flex justify-end space-x-3\">\n    <button\n      type=\"button\"\n      on:click={() => dispatch('listCreated')}\n      class=\"px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n    >\n      Cancel\n    </button>\n    <button\n      type=\"submit\"\n      disabled={isCreating || !name.trim() || !description.trim() || !criteria.trim()}\n      class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n    >\n      {#if isCreating}\n        <svg class=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        Creating...\n      {:else}\n        Create List\n      {/if}\n    </button>\n  </div>\n\n  <!-- Guidelines -->\n  <div class=\"bg-yellow-50 border border-yellow-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-yellow-800\">\n          Community List Guidelines\n        </h3>\n        <div class=\"mt-2 text-sm text-yellow-700\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li>Use neutral, factual language in criteria</li>\n            <li>Provide clear governance and appeals processes</li>\n            <li>Maintain transparency about list updates</li>\n            <li>Respect platform terms of service</li>\n            <li>Focus on user preferences, not personal judgments</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>","<script lang=\"ts\">\n  import { communityActions, communityStore } from '../stores/community';\n  \n  $: subscriptions = $communityStore.subscriptions;\n\n  async function updateSubscription(listId: string, versionPinned?: number, autoUpdate?: boolean) {\n    const result = await communityActions.updateSubscription(listId, versionPinned, autoUpdate);\n    if (!result.success) {\n      alert(`Failed to update subscription: ${result.message}`);\n    }\n  }\n\n  async function unsubscribe(listId: string, listName: string) {\n    const confirmed = confirm(`Are you sure you want to unsubscribe from \"${listName}\"?`);\n    if (confirmed) {\n      const result = await communityActions.unsubscribe(listId);\n      if (!result.success) {\n        alert(`Failed to unsubscribe: ${result.message}`);\n      }\n    }\n  }\n\n  async function viewListDetails(listId: string) {\n    await communityActions.fetchListDetails(listId);\n  }\n\n  function formatDate(dateString: string) {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  function getUpdateCadenceColor(cadence: string) {\n    switch (cadence.toLowerCase()) {\n      case 'daily':\n        return 'text-red-600 bg-red-100';\n      case 'weekly':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'monthly':\n        return 'text-green-600 bg-green-100';\n      case 'as-needed':\n        return 'text-blue-600 bg-blue-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  }\n</script>\n\n<div class=\"space-y-6\">\n  <div>\n    <h3 class=\"text-lg font-medium text-gray-900\">My Subscriptions</h3>\n    <p class=\"text-sm text-gray-500\">\n      Manage your community list subscriptions and update preferences.\n    </p>\n  </div>\n\n  {#if subscriptions.length === 0}\n    <!-- Empty State -->\n    <div class=\"text-center py-12\">\n      <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n      </svg>\n      <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No subscriptions yet</h3>\n      <p class=\"mt-1 text-sm text-gray-500\">\n        Browse community lists to find ones that match your preferences.\n      </p>\n    </div>\n  {:else}\n    <!-- Subscriptions List -->\n    <div class=\"bg-white shadow overflow-hidden sm:rounded-md\">\n      <ul class=\"divide-y divide-gray-200\">\n        {#each subscriptions as subscription}\n          <li>\n            <div class=\"px-4 py-4 sm:px-6\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center\">\n                  <div class=\"flex-shrink-0\">\n                    <div class=\"h-10 w-10 rounded-full bg-indigo-100 flex items-center justify-center\">\n                      <svg class=\"h-5 w-5 text-indigo-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div class=\"ml-4\">\n                    <div class=\"flex items-center\">\n                      <p class=\"text-sm font-medium text-gray-900\">\n                        {subscription.list.name}\n                      </p>\n                      <span class=\"ml-2 inline-flex items-center px-2 py-0.5 rounded text-xs font-medium {getUpdateCadenceColor(subscription.list.update_cadence)}\">\n                        {subscription.list.update_cadence}\n                      </span>\n                    </div>\n                    <div class=\"mt-1 flex items-center text-sm text-gray-500\">\n                      <p>\n                        Subscribed {formatDate(subscription.created_at)}\n                        • v{subscription.list.version}\n                        {#if subscription.version_pinned}\n                          (pinned to v{subscription.version_pinned})\n                        {/if}\n                      </p>\n                    </div>\n                    <p class=\"mt-1 text-sm text-gray-600 line-clamp-1\">\n                      {subscription.list.description}\n                    </p>\n                  </div>\n                </div>\n                \n                <div class=\"flex items-center space-x-2\">\n                  <button\n                    on:click={() => viewListDetails(subscription.list_id)}\n                    class=\"text-indigo-600 hover:text-indigo-900 text-sm font-medium\"\n                  >\n                    View Details\n                  </button>\n                  <button\n                    on:click={() => unsubscribe(subscription.list_id, subscription.list.name)}\n                    class=\"text-red-600 hover:text-red-900 text-sm font-medium\"\n                  >\n                    Unsubscribe\n                  </button>\n                </div>\n              </div>\n              \n              <!-- Subscription Settings -->\n              <div class=\"mt-4 pt-4 border-t border-gray-200\">\n                <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                  <!-- Version Pinning -->\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-2\">Version Preference</label>\n                    <div class=\"space-y-2\">\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"auto-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, undefined, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"auto-{subscription.list_id}\" class=\"ml-2 block text-xs text-gray-700\">\n                          Auto-update to latest\n                        </label>\n                      </div>\n                      <div class=\"flex items-center\">\n                        <input\n                          id=\"pin-{subscription.list_id}\"\n                          type=\"radio\"\n                          checked={!!subscription.version_pinned}\n                          on:change={() => updateSubscription(subscription.list_id, subscription.list.version, subscription.auto_update)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300\"\n                        />\n                        <label for=\"pin-{subscription.list_id}\" class=\"ml-2 block text-xs text-gray-700\">\n                          Pin to v{subscription.list.version}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Auto Update -->\n                  <div>\n                    <label class=\"block text-xs font-medium text-gray-700 mb-2\">Update Notifications</label>\n                    <div class=\"flex items-start\">\n                      <div class=\"flex items-center h-4\">\n                        <input\n                          id=\"auto-update-{subscription.list_id}\"\n                          type=\"checkbox\"\n                          checked={subscription.auto_update}\n                          on:change={(e) => updateSubscription(subscription.list_id, subscription.version_pinned, e.target.checked)}\n                          class=\"focus:ring-indigo-500 h-3 w-3 text-indigo-600 border-gray-300 rounded\"\n                        />\n                      </div>\n                      <div class=\"ml-2 text-xs\">\n                        <label for=\"auto-update-{subscription.list_id}\" class=\"font-medium text-gray-700\">\n                          Enable automatic updates\n                        </label>\n                        <p class=\"text-gray-500\">\n                          Apply changes when the list is updated\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </li>\n        {/each}\n      </ul>\n    </div>\n  {/if}\n\n  <!-- Subscription Management Info -->\n  <div class=\"bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          Managing Your Subscriptions\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <ul class=\"list-disc list-inside space-y-1\">\n            <li><strong>Auto-update:</strong> Automatically apply changes when lists are updated</li>\n            <li><strong>Version pinning:</strong> Stay on a specific version to avoid unexpected changes</li>\n            <li><strong>Notifications:</strong> Get notified about list updates and changes</li>\n            <li><strong>Impact preview:</strong> See what changes will be made before they're applied</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { communityActions, communityStore, filteredLists, subscribedListIds } from '../stores/community';\n  import CommunityListCard from './CommunityListCard.svelte';\n  import CommunityListDetail from './CommunityListDetail.svelte';\n  import CreateCommunityList from './CreateCommunityList.svelte';\n  import MySubscriptions from './MySubscriptions.svelte';\n  \n  let activeTab = 'browse';\n  let showCreateForm = false;\n  \n  onMount(async () => {\n    await communityActions.fetchLists();\n    await communityActions.fetchSubscriptions();\n  });\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n    showCreateForm = false;\n    communityActions.clearCurrentList();\n  }\n\n  function handleSearch(event: Event) {\n    const target = event.target as HTMLInputElement;\n    communityActions.updateSearch(target.value);\n  }\n\n  function handleSort(event: Event) {\n    const target = event.target as HTMLSelectElement;\n    const [sortBy, sortOrder] = target.value.split(':');\n    communityActions.updateSort(sortBy as any, sortOrder as any);\n  }\n</script>\n\n<div class=\"px-4 py-6 sm:px-0\">\n  <div class=\"mb-6\">\n    <div class=\"flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-2xl font-bold text-gray-900\">Community Lists</h2>\n        <p class=\"mt-1 text-sm text-gray-600\">\n          Discover and subscribe to community-curated blocklists.\n        </p>\n      </div>\n      <button\n        on:click={() => showCreateForm = !showCreateForm}\n        class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n        </svg>\n        Create List\n      </button>\n    </div>\n  </div>\n\n  <!-- Create List Form -->\n  {#if showCreateForm}\n    <div class=\"mb-6 bg-white shadow rounded-lg p-6\">\n      <h3 class=\"text-lg font-medium text-gray-900 mb-4\">Create Community List</h3>\n      <CreateCommunityList on:listCreated={() => showCreateForm = false} />\n    </div>\n  {/if}\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm rounded-lg mb-6\">\n    <nav class=\"flex space-x-8 px-6\" aria-label=\"Tabs\">\n      <button\n        on:click={() => setActiveTab('browse')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'browse' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        Browse Lists\n      </button>\n      <button\n        on:click={() => setActiveTab('subscriptions')}\n        class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'subscriptions' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n      >\n        My Subscriptions ({$subscribedListIds.size})\n      </button>\n    </nav>\n  </div>\n\n  <!-- Tab Content -->\n  {#if activeTab === 'browse'}\n    <!-- List Detail View -->\n    {#if $communityStore.currentList}\n      <CommunityListDetail />\n    {:else}\n      <!-- Browse Lists -->\n      <div class=\"space-y-6\">\n        <!-- Search and Filter -->\n        <div class=\"bg-white shadow rounded-lg p-4\">\n          <div class=\"flex flex-col sm:flex-row gap-4\">\n            <div class=\"flex-1\">\n              <label for=\"search\" class=\"sr-only\">Search lists</label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <input\n                  id=\"search\"\n                  type=\"text\"\n                  placeholder=\"Search lists by name, description, or criteria...\"\n                  value={$communityStore.searchQuery}\n                  on:input={handleSearch}\n                  class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                />\n              </div>\n            </div>\n            \n            <div class=\"sm:w-48\">\n              <label for=\"sort\" class=\"sr-only\">Sort by</label>\n              <select\n                id=\"sort\"\n                on:change={handleSort}\n                class=\"block w-full pl-3 pr-10 py-2 text-base border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"updated_at:desc\">Recently Updated</option>\n                <option value=\"created_at:desc\">Newest First</option>\n                <option value=\"name:asc\">Name A-Z</option>\n                <option value=\"name:desc\">Name Z-A</option>\n                <option value=\"artist_count:desc\">Most Artists</option>\n                <option value=\"subscriber_count:desc\">Most Subscribers</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <!-- Lists Grid -->\n        {#if $communityStore.isLoading}\n          <div class=\"text-center py-12\">\n            <svg class=\"animate-spin mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <p class=\"mt-2 text-sm text-gray-500\">Loading community lists...</p>\n          </div>\n        {:else if $communityStore.error}\n          <div class=\"text-center py-12\">\n            <svg class=\"mx-auto h-8 w-8 text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p class=\"mt-2 text-sm text-red-600\">{$communityStore.error}</p>\n            <button\n              on:click={() => communityActions.fetchLists()}\n              class=\"mt-2 text-sm text-indigo-600 hover:text-indigo-500\"\n            >\n              Try again\n            </button>\n          </div>\n        {:else if $filteredLists.length === 0}\n          <div class=\"text-center py-12\">\n            {#if $communityStore.lists.length === 0}\n              <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n              </svg>\n              <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No community lists yet</h3>\n              <p class=\"mt-1 text-sm text-gray-500\">Be the first to create a community list.</p>\n              <div class=\"mt-6\">\n                <button\n                  on:click={() => showCreateForm = true}\n                  class=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  <svg class=\"-ml-1 mr-2 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                  Create your first list\n                </button>\n              </div>\n            {:else}\n              <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n              </svg>\n              <h3 class=\"mt-2 text-sm font-medium text-gray-900\">No lists match your search</h3>\n              <p class=\"mt-1 text-sm text-gray-500\">Try adjusting your search terms or filters.</p>\n            {/if}\n          </div>\n        {:else}\n          <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n            {#each $filteredLists as list (list.id)}\n              <CommunityListCard {list} />\n            {/each}\n          </div>\n        {/if}\n      </div>\n    {/if}\n  {:else if activeTab === 'subscriptions'}\n    <MySubscriptions />\n  {/if}\n\n  <!-- Info Box -->\n  <div class=\"mt-8 bg-blue-50 border border-blue-200 rounded-md p-4\">\n    <div class=\"flex\">\n      <div class=\"flex-shrink-0\">\n        <svg class=\"h-5 w-5 text-blue-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n        </svg>\n      </div>\n      <div class=\"ml-3\">\n        <h3 class=\"text-sm font-medium text-blue-800\">\n          About Community Lists\n        </h3>\n        <div class=\"mt-2 text-sm text-blue-700\">\n          <p>\n            Community lists are curated blocklists created and maintained by other users. \n            Each list has clear criteria and governance processes to ensure quality and transparency.\n          </p>\n          <ul class=\"list-disc list-inside mt-2 space-y-1\">\n            <li>Subscribe to lists that match your preferences</li>\n            <li>Pin specific versions or enable auto-updates</li>\n            <li>Preview impact before subscribing</li>\n            <li>Appeal decisions through structured processes</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { authActions, currentUser } from '../stores/auth';\n  import { connectionActions, connectionsStore, connectedServices, hasActiveSpotifyConnection } from '../stores/connections';\n  import { dnpActions, dnpStore, dnpCount } from '../stores/dnp';\n  import ServiceConnections from './ServiceConnections.svelte';\n  import DnpManager from './DnpManager.svelte';\n  import EnforcementPlanning from './EnforcementPlanning.svelte';\n  import CommunityLists from './CommunityLists.svelte';\n  \n  let activeTab = 'overview';\n  \n  onMount(async () => {\n    await connectionActions.fetchConnections();\n    await dnpActions.fetchDnpList();\n  });\n\n  function handleLogout() {\n    authActions.logout();\n  }\n\n  function setActiveTab(tab: string) {\n    activeTab = tab;\n  }\n</script>\n\n<div class=\"min-h-screen bg-gray-50\">\n  <!-- Navigation -->\n  <nav class=\"bg-white shadow-sm border-b border-gray-200\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex justify-between h-16\">\n        <div class=\"flex items-center\">\n          <h1 class=\"text-xl font-semibold text-gray-900\">\n            Music Streaming Blocklist Manager\n          </h1>\n        </div>\n        \n        <div class=\"flex items-center space-x-4\">\n          <span class=\"text-sm text-gray-700\">\n            {$currentUser?.email}\n          </span>\n          <button\n            on:click={handleLogout}\n            class=\"text-sm text-gray-500 hover:text-gray-700\"\n          >\n            Sign out\n          </button>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <!-- Tab Navigation -->\n  <div class=\"bg-white shadow-sm\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <nav class=\"flex space-x-8\" aria-label=\"Tabs\">\n        <button\n          on:click={() => setActiveTab('overview')}\n          class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'overview' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Overview\n        </button>\n        <button\n          on:click={() => setActiveTab('connections')}\n          class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'connections' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Connections\n        </button>\n        <button\n          on:click={() => setActiveTab('dnp')}\n          class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'dnp' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          DNP List ({$dnpCount})\n        </button>\n        <button\n          on:click={() => setActiveTab('enforcement')}\n          class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'enforcement' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Enforcement\n        </button>\n        <button\n          on:click={() => setActiveTab('community')}\n          class=\"py-4 px-1 border-b-2 font-medium text-sm {activeTab === 'community' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\"\n        >\n          Community Lists\n        </button>\n      </nav>\n    </div>\n  </div>\n\n  <!-- Main Content -->\n  <main class=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n    {#if activeTab === 'overview'}\n      <!-- Overview Tab -->\n      <div class=\"px-4 py-6 sm:px-0\">\n        <div class=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          <!-- Connected Services Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      Connected Services\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$connectedServices.length}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                <button\n                  on:click={() => setActiveTab('connections')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage connections\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- DNP List Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L5.636 5.636\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      Blocked Artists\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$dnpCount}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                <button\n                  on:click={() => setActiveTab('dnp')}\n                  class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                >\n                  Manage DNP list\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Status Card -->\n          <div class=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div class=\"p-5\">\n              <div class=\"flex items-center\">\n                <div class=\"flex-shrink-0\">\n                  <svg class=\"h-6 w-6 {$hasActiveSpotifyConnection ? 'text-green-400' : 'text-gray-400'}\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n                <div class=\"ml-5 w-0 flex-1\">\n                  <dl>\n                    <dt class=\"text-sm font-medium text-gray-500 truncate\">\n                      System Status\n                    </dt>\n                    <dd class=\"text-lg font-medium text-gray-900\">\n                      {$hasActiveSpotifyConnection ? 'Active' : 'Setup Required'}\n                    </dd>\n                  </dl>\n                </div>\n              </div>\n            </div>\n            <div class=\"bg-gray-50 px-5 py-3\">\n              <div class=\"text-sm\">\n                {#if !$hasActiveSpotifyConnection}\n                  <button\n                    on:click={() => setActiveTab('connections')}\n                    class=\"font-medium text-indigo-700 hover:text-indigo-900\"\n                  >\n                    Connect Spotify\n                  </button>\n                {:else}\n                  <span class=\"text-green-700\">Ready to use</span>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"mt-8\">\n          <h3 class=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n            Quick Actions\n          </h3>\n          <div class=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n            <button\n              on:click={() => setActiveTab('dnp')}\n              class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                Add Artist to DNP List\n              </span>\n            </button>\n            \n            {#if $hasActiveSpotifyConnection && $dnpCount > 0}\n              <button\n                on:click={() => setActiveTab('enforcement')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1.01M15 10h1.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                  Plan Enforcement\n                </span>\n              </button>\n            {:else}\n              <button\n                on:click={() => setActiveTab('connections')}\n                class=\"relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                <svg class=\"mx-auto h-8 w-8 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1\" />\n                </svg>\n                <span class=\"mt-2 block text-sm font-medium text-gray-900\">\n                  Connect Spotify\n                </span>\n              </button>\n            {/if}\n          </div>\n        </div>\n      </div>\n    {:else if activeTab === 'connections'}\n      <ServiceConnections />\n    {:else if activeTab === 'dnp'}\n      <DnpManager />\n    {:else if activeTab === 'enforcement'}\n      <EnforcementPlanning />\n    {:else if activeTab === 'community'}\n      <CommunityLists />\n    {/if}\n  </main>\n</div>","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { isAuthenticated, authActions } from './lib/stores/auth';\n\timport Login from './lib/components/Login.svelte';\n\timport Dashboard from './lib/components/Dashboard.svelte';\n\n\tonMount(() => {\n\t\t// Initialize auth state\n\t\tauthActions.fetchProfile();\n\t});\n</script>\n\n{#if $isAuthenticated}\n\t<Dashboard />\n{:else}\n\t<Login />\n{/if}","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","callback","undefined","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","init_binding_group","group","_inputs","p","inputs","input","r","splice","indexOf","set_data","set_input_value","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","selectedIndex","select_value","selected_option","querySelector","set_current_component","get_current_component","Error","onMount","on_mount","createEventDispatcher","type","detail","cancelable","bubbles","CustomEvent","custom_event","slice","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","e","pop","has","add","clear","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","c","check_outros","transition_in","block","local","delete","transition_out","o","ensure_array_like","array_like_or_iterator","Array","from","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","updates","child_ctx","get","set","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","new_on_destroy","map","filter","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","intro","SvelteComponent","$$set","$destroy","$on","index","$set","obj","keys","window","__svelte","v","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","every","Boolean","auto","started","values","pending","cleanup","sync","result","unsubscribers","authStore","user","token","localStorage","getItem","refreshToken","isAuthenticated","isLoading","$auth","currentUser","authActions","login","async","email","password","totpCode","state","response","fetch","method","headers","body","JSON","stringify","totp_code","json","success","access_token","refresh_token","setItem","fetchProfile","message","error","register","Authorization","console","logout","removeItem","newRefreshToken","div","label","t","t_value","svg","circle","path","t1","t1_value","create_if_block_2","create_if_block_1","create_if_block","div7","div6","div0","h2","form","div3","div1","label0","input0","div2","label1","input1","div4","button0","div5","button1","t0","t0_value","t13","t13_value","isLogin","requiresTotp","$$invalidate","includes","err","connectionsStore","connections","connectedServices","$connections","conn","status","spotifyConnection","find","provider","hasActiveSpotifyConnection","$spotify","connectionActions","fetchConnections","initiateSpotifyAuth","location","auth_url","handleSpotifyCallback","code","disconnectSpotify","checkSpotifyHealth","dnpStore","entries","searchResults","isSearching","$dnp","entry","artist","dnpCount","dnpTags","allTags","flatMap","tags","sort","dnpActions","fetchDnpList","searchArtists","query","limit","trim","encodeURIComponent","addArtist","artistQuery","note","removeArtist","artistId","updateEntry","bulkImport","format","exportList","clearSearch","getStatusColor","span","formatDate","created_at","if_block0","provider_user_id","create_if_block_4","if_block1","scopes","create_if_block_3","join","button","create_if_block_6","create_if_block_5","div27","div21","ul0","li0","div8","p1","li1","li2","div26","dateString","Date","toLocaleDateString","isConnecting","urlParams","URLSearchParams","search","history","replaceState","title","pathname","each_value_1","metadata","image","img","img_src_value","img_alt_value","canonical_name","genres","span_class_value","color","create_if_block_8","create_if_block_7","each_value_2","getProviderBadges","t3_value","each_value","h4","t3","create_if_block_9","if_block2","label2","textarea","badges","external_ids","spotify","apple","musicbrainz","dispatch","searchTimeout","searchQuery","selectedArtist","isAdding","selectArtist","clearTimeout","setTimeout","tagArray","split","src","t2","t2_value","id","t9","t9_value","li","t7","t7_value","$$props","isEditing","editTags","editNote","isUpdating","isRemoving","confirm","svg0","path0","selectedCount","h3","bulkactions_changes","ul","current","dnpentry_changes","t4_value","t8_value","div10","div9","t4","t8","if_block3","selectedTag","showAddForm","selectedEntries","toggleSelectEntry","clearSelection","filteredEntries","$dnpStore","matchesSearch","toLowerCase","some","tag","matchesTag","promises","all","defaultOptions","aggressiveness","blockCollabs","blockFeaturing","blockSongwriterOnly","enforcementStore","currentPlan","isPlanning","isExecuting","currentBatch","actionHistory","hasActivePlan","$enforcement","executionProgress","totalItems","completedItems","failedItems","skippedItems","summary","processedItems","total","processed","completed","failed","skipped","percentage","round","canRollback","batch","items","item","enforcementActions","updateOptions","createPlan","providers","dryRun","currentOptions","executePlan","planId","pollProgress","batchId","pollInterval","setInterval","clearInterval","rollbackBatch","fetchActionHistory","clearPlan","clearError","if_block","input3","checked","input3_checked_value","input4","input4_checked_value","input5","input5_checked_value","div19","h40","p0","fieldset","legend","input2","div18","h41","div17","div13","div11","div12","div16","div14","div15","updateAggressiveness","level","toggleOption","$enforcementStore","formatDuration","estimatedDuration","resumable","impact","likedSongs","toRemove","collabsFound","br","playlists","toScrub","tracksToRemove","featuringFound","t5","t5_value","following","toUnfollow","radioSeeds","toFilter","capabilities","h5","replace","getCapabilityColor","path_d_value","getProviderIcon","duration","seconds","parseInt","floor","capability","plan","disabled","button_disabled_value","t6_value","span0","span1","t6","t17","t17_value","t21","t21_value","t10_value","t16_value","span2","span3","span4","t10","t16","button_title_value","errorMessage","action","entityType","entityId","getActionIcon","progress","$executionProgress","completedAt","createdAt","t11_value","t14_value","getSuccessRate","div24","div23","div22","div20","div25","t11","t14","t19","t19_value","t23","t23_value","t27","t27_value","t31","t31_value","t35","t35_value","t41","t41_value","toLocaleString","alert","button0_class_value","button1_class_value","button2","button2_class_value","nav","activeTab","setActiveTab","tab","$hasActiveSpotifyConnection","communityStore","lists","currentList","subscriptions","subscriptionImpact","isLoadingList","isLoadingImpact","sortBy","sortOrder","filteredLists","$community","description","criteria","aValue","bValue","getTime","comparison","subscribedListIds","sub","list_id","$subscribedIds","listId","communityActions","fetchLists","fetchListDetails","fetchSubscriptions","getSubscriptionImpact","versionPinned","autoUpdate","version_pinned","auto_update","updateSubscription","createList","listData","updateSearch","updateSort","clearCurrentList","a_href_value","governance_url","update_cadence","artist_count","subscriber_count","t20_value","version","updated_at","getUpdateCadenceColor","svg1","path1","t12","t12_value","t20","cadence","isSubscribed","$subscribedListIds","artists_to_add","artists","t18_value","t28_value","t32_value","t40_value","h1","h30","p2","h42","p3","h31","t18","t28","t32","t36","t36_value","t40","input1_value_value","rationale_link","added_at","showSubscriptionOptions","$communityStore","textarea0","textarea1","label3","label4","option0","option1","option2","option3","label5","label6","label7","governanceUrl","updateCadence","visibility","isCreating","input0_id_value","input0_checked_value","label1_for_value","input1_id_value","input1_checked_value","label2_for_value","input2_id_value","input2_checked_value","label4_for_value","t24","t24_value","listName","viewListDetails","subscription","input_value_value","option4","option5","showCreateForm","dl0","dt0","dd0","dl1","dt1","dd1","svg2","path2","dl2","dt2","dd2","button3","button3_class_value","button4","button4_class_value","button5","button5_class_value","nav0","nav1","main"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}