apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-api
  namespace: music-blocklist-dev
  labels:
    app: simple-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-api
  template:
    metadata:
      labels:
        app: simple-api
    spec:
      containers:
      - name: api
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: api-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: api-content
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
      volumes:
      - name: api-config
        configMap:
          name: simple-api-config
      - name: api-content
        configMap:
          name: simple-api-content

---
apiVersion: v1
kind: Service
metadata:
  name: simple-api
  namespace: music-blocklist-dev
  labels:
    app: simple-api
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30082
    name: http
  selector:
    app: simple-api

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-api-config
  namespace: music-blocklist-dev
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        
        location / {
            root /usr/share/nginx/html;
            index index.html;
            add_header Content-Type application/json;
        }
        
        location /health {
            return 200 '{"status":"healthy","service":"music-blocklist-api","timestamp":"2025-09-26T09:30:00Z"}';
            add_header Content-Type application/json;
        }
        
        location /ready {
            return 200 '{"status":"ready","service":"music-blocklist-api"}';
            add_header Content-Type application/json;
        }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-api-content
  namespace: music-blocklist-dev
data:
  index.html: |
    {
      "message": "Music Blocklist Manager API",
      "version": "0.1.0",
      "status": "running",
      "services": {
        "database": "connected",
        "redis": "connected",
        "frontend": "http://192.168.49.2:30081"
      },
      "endpoints": {
        "health": "/health",
        "ready": "/ready"
      }
    }